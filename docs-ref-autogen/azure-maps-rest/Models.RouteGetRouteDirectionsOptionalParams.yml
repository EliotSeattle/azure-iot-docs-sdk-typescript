### YamlMime:UniversalReference
items:
  - uid: azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams
    name: RouteGetRouteDirectionsOptionalParams
    fullName: RouteGetRouteDirectionsOptionalParams
    children:
      - >-
        azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.accelerationEfficiency
      - >-
        azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.alternativeType
      - azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.arriveAt
      - >-
        azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.auxiliaryPowerInLitersPerHour
      - >-
        azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.auxiliaryPowerInkW
      - azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.avoid
      - >-
        azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.computeBestOrder
      - >-
        azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.computeTravelTimeFor
      - >-
        azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.constantSpeedConsumptionInLitersPerHundredkm
      - >-
        azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.constantSpeedConsumptionInkWhPerHundredkm
      - >-
        azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.currentChargeInkWh
      - >-
        azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.currentFuelInLiters
      - >-
        azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.decelerationEfficiency
      - azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.departAt
      - >-
        azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.downhillEfficiency
      - >-
        azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.fuelEnergyDensityInMJoulesPerLiter
      - azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.hilliness
      - >-
        azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.instructionsType
      - azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.language
      - >-
        azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.maxAlternatives
      - >-
        azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.maxChargeInkWh
      - >-
        azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.minDeviationDistance
      - >-
        azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.minDeviationTime
      - azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.report
      - >-
        azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.routeRepresentation
      - azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.routeType
      - azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.sectionType
      - azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.traffic
      - azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.travelMode
      - >-
        azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.uphillEfficiency
      - >-
        azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.vehicleAxleWeight
      - >-
        azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.vehicleEngineType
      - >-
        azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.vehicleHeading
      - >-
        azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.vehicleHeight
      - >-
        azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.vehicleLength
      - >-
        azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.vehicleLoadType
      - >-
        azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.vehicleMaxSpeed
      - >-
        azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.vehicleWeight
      - >-
        azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.vehicleWidth
      - azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.windingness
    langs:
      - typeScript
    type: interface
    summary: |-
      An interface representing RouteGetRouteDirectionsOptionalParams.
      Optional Parameters.
    extends:
      name: RequestOptionsBase
    package: azure-maps-rest
  - uid: >-
      azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.accelerationEfficiency
    name: accelerationEfficiency
    fullName: accelerationEfficiency
    children: []
    langs:
      - typeScript
    type: property
    summary: |
      Specifies the efficiency of
      converting chemical energy stored in fuel to kinetic energy when the
      vehicle accelerates _(i.e. KineticEnergyGained/ChemicalEnergyConsumed).
      ChemicalEnergyConsumed_ is obtained by converting consumed fuel to
      chemical energy using **fuelEnergyDensityInMJoulesPerLiter**.
      Must be paired with **decelerationEfficiency**.

      The range of values allowed are 0.0 to 1/**decelerationEfficiency**.

      Sensible Values : for **Combustion Model** : 0.33, for **Electric Model**
      : 0.66
    optional: true
    syntax:
      content: 'accelerationEfficiency?: number'
      return:
        type:
          - number
    package: azure-maps-rest
  - uid: >-
      azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.alternativeType
    name: alternativeType
    fullName: alternativeType
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Controls the optimality,
      with respect to the given planning criteria, of the calculated
      alternatives compared to the reference route. Possible values include:
      'anyRoute', 'betterRoute'
    optional: true
    syntax:
      content: 'alternativeType?: AlternativeRouteType'
      return:
        type:
          - azure-maps-rest.Models.AlternativeRouteType
    package: azure-maps-rest
  - uid: azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.arriveAt
    name: arriveAt
    fullName: arriveAt
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      The date and time of arrival at the destination
      point. It must be specified as a dateTime. When a time zone offset is not
      specified it will be assumed to be that of the destination point. The
      arriveAt value must be in the future. The arriveAt parameter cannot be
      used in conjunction with departAt, minDeviationDistance or
      minDeviationTime.
    optional: true
    syntax:
      content: 'arriveAt?: Date'
      return:
        type:
          - Date
    package: azure-maps-rest
  - uid: >-
      azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.auxiliaryPowerInLitersPerHour
    name: auxiliaryPowerInLitersPerHour
    fullName: auxiliaryPowerInLitersPerHour
    children: []
    langs:
      - typeScript
    type: property
    summary: |
      Specifies the amount of
      fuel consumed for sustaining auxiliary systems of the vehicle, in liters
      per hour.
      It can be used to specify consumption due to devices and systems such as
      AC systems, radio, heating, etc.

      Sensible Values : 0.2
    optional: true
    syntax:
      content: 'auxiliaryPowerInLitersPerHour?: number'
      return:
        type:
          - number
    package: azure-maps-rest
  - uid: >-
      azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.auxiliaryPowerInkW
    name: auxiliaryPowerInkW
    fullName: auxiliaryPowerInkW
    children: []
    langs:
      - typeScript
    type: property
    summary: |
      Specifies the amount of power
      consumed for sustaining auxiliary systems, in kilowatts (kW).
      It can be used to specify consumption due to devices and systems such as
      AC systems, radio, heating, etc.

      Sensible Values : 1.7
    optional: true
    syntax:
      content: 'auxiliaryPowerInkW?: string'
      return:
        type:
          - string
    package: azure-maps-rest
  - uid: azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.avoid
    name: avoid
    fullName: avoid
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Specifies something that the route calculation
      should try to avoid when determining the route. Can be specified multiple
      times. Possible values: (tollRoads avoids toll roads), (motorways avoids
      motorways), (ferries avoids ferries), (unpavedRoads avoids unpaved roads),
      (carpools avoids routes that require use of carpool (HOV/ High Occupancy
      Vehicle) lanes), (alreadyUsedRoads avoids using the same road multiple
      times. Most useful in conjunction with routeType=thrilling). In
      calculateReachableRange requests, the value alreadyUsedRoads must not be
      used. Possible values include: 'tollRoads', 'motorways', 'ferries',
      'unpavedRoads', 'carpools', 'alreadyUsedRoads'
    optional: true
    syntax:
      content: 'avoid?: Avoid'
      return:
        type:
          - azure-maps-rest.Models.Avoid
    package: azure-maps-rest
  - uid: >-
      azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.computeBestOrder
    name: computeBestOrder
    fullName: computeBestOrder
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Re-order the route waypoints to
      reduce the route length. Yields best results when used in conjunction with
      routeType _shortest_. Possible values are true or false. True computes a
      better order if possible, but is not allowed to be used in conjunction
      with maxAlternatives value greater than 0 or in conjunction with circle
      waypoints. The response will include the optimized waypoint indices and
      can be used with a maximum of 20 route waypoints. False will use the
      locations in the given order and not allowed to be used in conjunction
      with routeRepresentation _none_.
    optional: true
    syntax:
      content: 'computeBestOrder?: boolean'
      return:
        type:
          - boolean
    package: azure-maps-rest
  - uid: >-
      azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.computeTravelTimeFor
    name: computeTravelTimeFor
    fullName: computeTravelTimeFor
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Specifies whether to
      return additional travel times using different types of traffic
      information (none, historic, live) as well as the default best-estimate
      travel time. Possible values include: 'none', 'all'
    optional: true
    syntax:
      content: 'computeTravelTimeFor?: ComputeTravelTimeFor'
      return:
        type:
          - azure-maps-rest.Models.ComputeTravelTimeFor
    package: azure-maps-rest
  - uid: >-
      azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.constantSpeedConsumptionInLitersPerHundredkm
    name: constantSpeedConsumptionInLitersPerHundredkm
    fullName: constantSpeedConsumptionInLitersPerHundredkm
    children: []
    langs:
      - typeScript
    type: property
    summary: |
      Specifies
      the speed-dependent component of consumption.
      Provided as an unordered list of colon-delimited speed & consumption-rate
      pairs. The list defines points on a consumption curve. Consumption rates
      for speeds not in the list are found as follows:

      * by linear interpolation, if the given speed lies in between two speeds
      in the list

      * by linear extrapolation otherwise, assuming a constant
      (ΔConsumption/ΔSpeed) determined by the nearest two points in the list

      The list must contain between 1 and 25 points (inclusive), and may not
      contain duplicate points for the same speed. If it only contains a single
      point, then the consumption rate of that point is used without further
      processing.

      Consumption specified for the largest speed must be greater than or equal
      to that of the penultimate largest speed. This ensures that extrapolation
      does not lead to negative consumption rates.

      Similarly, consumption values specified for the two smallest speeds in the
      list cannot lead to a negative consumption rate for any smaller speed.

      The valid range for the consumption values(expressed in l/100km) is
      between 0.01 and 100000.0.

      Sensible Values : 50,6.3:130,11.5

      **Note** : This parameter is required for **The Combustion Consumption
      Model**.
    optional: true
    syntax:
      content: 'constantSpeedConsumptionInLitersPerHundredkm?: number'
      return:
        type:
          - number
    package: azure-maps-rest
  - uid: >-
      azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.constantSpeedConsumptionInkWhPerHundredkm
    name: constantSpeedConsumptionInkWhPerHundredkm
    fullName: constantSpeedConsumptionInkWhPerHundredkm
    children: []
    langs:
      - typeScript
    type: property
    summary: |
      Specifies the
      speed-dependent component of consumption.
      Provided as an unordered list of speed/consumption-rate pairs. The list
      defines points on a consumption curve. Consumption rates for speeds not in
      the list are found as follows:

      * by linear interpolation, if the given speed lies in between two speeds
      in the list

      * by linear extrapolation otherwise, assuming a constant
      (ΔConsumption/ΔSpeed) determined by the nearest two points in the list

      The list must contain between 1 and 25 points (inclusive), and may not
      contain duplicate points for the same speed. If it only contains a single
      point, then the consumption rate of that point is used without further
      processing.

      Consumption specified for the largest speed must be greater than or equal
      to that of the penultimate largest speed. This ensures that extrapolation
      does not lead to negative consumption rates.

      Similarly, consumption values specified for the two smallest speeds in the
      list cannot lead to a negative consumption rate for any smaller  speed.

      The valid range for the consumption values(expressed in kWh/100km) is
      between 0.01 and 100000.0.

      Sensible Values : 50,8.2:130,21.3

      This parameter is required for **Electric consumption model**.
    optional: true
    syntax:
      content: 'constantSpeedConsumptionInkWhPerHundredkm?: number'
      return:
        type:
          - number
    package: azure-maps-rest
  - uid: >-
      azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.currentChargeInkWh
    name: currentChargeInkWh
    fullName: currentChargeInkWh
    children: []
    langs:
      - typeScript
    type: property
    summary: |
      Specifies the current electric
      energy supply in kilowatt hours (kWh).
      This parameter co-exists with **maxChargeInkWh** parameter.

      The range of values allowed are 0.0 to **maxChargeInkWh**.

      Sensible Values : 43
    optional: true
    syntax:
      content: 'currentChargeInkWh?: string'
      return:
        type:
          - string
    package: azure-maps-rest
  - uid: >-
      azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.currentFuelInLiters
    name: currentFuelInLiters
    fullName: currentFuelInLiters
    children: []
    langs:
      - typeScript
    type: property
    summary: |
      Specifies the current supply of
      fuel in liters.
      Sensible Values : 55
    optional: true
    syntax:
      content: 'currentFuelInLiters?: number'
      return:
        type:
          - number
    package: azure-maps-rest
  - uid: >-
      azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.decelerationEfficiency
    name: decelerationEfficiency
    fullName: decelerationEfficiency
    children: []
    langs:
      - typeScript
    type: property
    summary: |
      Specifies the efficiency of
      converting kinetic energy to saved (not consumed) fuel when the vehicle
      decelerates _(i.e. ChemicalEnergySaved/KineticEnergyLost).
      ChemicalEnergySaved_ is obtained by converting saved (not consumed) fuel
      to energy using **fuelEnergyDensityInMJoulesPerLiter**.
      Must be paired with **accelerationEfficiency**.

      The range of values allowed are 0.0 to 1/**accelerationEfficiency**.

      Sensible Values : for **Combustion Model** : 0.83, for **Electric Model**
      : 0.91
    optional: true
    syntax:
      content: 'decelerationEfficiency?: number'
      return:
        type:
          - number
    package: azure-maps-rest
  - uid: azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.departAt
    name: departAt
    fullName: departAt
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      The date and time of departure from the origin
      point. Departure times apart from now must be specified as a dateTime.
      When a time zone offset is not specified, it will be assumed to be that of
      the origin point. The departAt value must be in the future in the
      date-time format (1996-12-19T16:39:57-08:00).
    optional: true
    syntax:
      content: 'departAt?: Date'
      return:
        type:
          - Date
    package: azure-maps-rest
  - uid: >-
      azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.downhillEfficiency
    name: downhillEfficiency
    fullName: downhillEfficiency
    children: []
    langs:
      - typeScript
    type: property
    summary: |
      Specifies the efficiency of
      converting potential energy to saved (not consumed) fuel when the vehicle
      loses elevation _(i.e.
      ChemicalEnergySaved/PotentialEnergyLost).ChemicalEnergySaved_ is obtained
      by converting saved (not consumed) fuel to energy using
      **fuelEnergyDensityInMJoulesPerLiter**.
      Must be paired with **uphillEfficiency**.

      The range of values allowed are 0.0 to 1/**uphillEfficiency**.

      Sensible Values : for **Combustion Model** : 0.51, for **Electric Model**
      : 0.73
    optional: true
    syntax:
      content: 'downhillEfficiency?: number'
      return:
        type:
          - number
    package: azure-maps-rest
  - uid: >-
      azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.fuelEnergyDensityInMJoulesPerLiter
    name: fuelEnergyDensityInMJoulesPerLiter
    fullName: fuelEnergyDensityInMJoulesPerLiter
    children: []
    langs:
      - typeScript
    type: property
    summary: |
      Specifies the amount
      of chemical energy stored in one liter of fuel in megajoules (MJ). It is
      used in conjunction with the ***Efficiency** parameters for conversions
      between saved or consumed energy and fuel. For example, energy density is
      34.2 MJ/l for gasoline, and 35.8 MJ/l for Diesel fuel.
      This parameter is required if any ***Efficiency** parameter is set.

      Sensible Values : 34.2
    optional: true
    syntax:
      content: 'fuelEnergyDensityInMJoulesPerLiter?: number'
      return:
        type:
          - number
    package: azure-maps-rest
  - uid: azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.hilliness
    name: hilliness
    fullName: hilliness
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Degree of hilliness for thrilling route.
      This parameter can only be used in conjunction with `routeType`=thrilling.
      Possible values include: 'low', 'normal', 'high'
    optional: true
    syntax:
      content: 'hilliness?: Hilliness'
      return:
        type:
          - azure-maps-rest.Models.Hilliness
    package: azure-maps-rest
  - uid: >-
      azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.instructionsType
    name: instructionsType
    fullName: instructionsType
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      If specified, guidance
      instructions will be returned. Note that the instructionsType parameter
      cannot be used in conjunction with routeRepresentation=none. Possible
      values include: 'coded', 'text', 'tagged'
    optional: true
    syntax:
      content: 'instructionsType?: RouteInstructionsType'
      return:
        type:
          - azure-maps-rest.Models.RouteInstructionsType
    package: azure-maps-rest
  - uid: azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.language
    name: language
    fullName: language
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      The language parameter determines the language
      of the guidance messages. It does not affect proper nouns (the names of
      streets, plazas, etc.) It has no effect when instructionsType=coded.
      Allowed values are (a subset of) the IETF language tags described
    optional: true
    syntax:
      content: 'language?: string'
      return:
        type:
          - string
    package: azure-maps-rest
  - uid: >-
      azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.maxAlternatives
    name: maxAlternatives
    fullName: maxAlternatives
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Number of desired alternative routes to
      be calculated. Default: 0, minimum: 0 and maximum: 5
    optional: true
    syntax:
      content: 'maxAlternatives?: number'
      return:
        type:
          - number
    package: azure-maps-rest
  - uid: >-
      azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.maxChargeInkWh
    name: maxChargeInkWh
    fullName: maxChargeInkWh
    children: []
    langs:
      - typeScript
    type: property
    summary: |
      Specifies the maximum electric energy
      supply in kilowatt hours (kWh) that may be stored in the vehicle's
      battery.
      This parameter co-exists with **currentChargeInkWh** parameter.

      Minimum value has to be greater than or equal to **currentChargeInkWh**.

      Sensible Values : 85
    optional: true
    syntax:
      content: 'maxChargeInkWh?: string'
      return:
        type:
          - string
    package: azure-maps-rest
  - uid: >-
      azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.minDeviationDistance
    name: minDeviationDistance
    fullName: minDeviationDistance
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      All alternative routes returned
      will follow the reference route (see section POST Requests) from the
      origin point of the calculateRoute request for at least this number of
      meters. Can only be used when reconstructing a route. The
      minDeviationDistance parameter cannot be used in conjunction with arriveAt
    optional: true
    syntax:
      content: 'minDeviationDistance?: number'
      return:
        type:
          - number
    package: azure-maps-rest
  - uid: >-
      azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.minDeviationTime
    name: minDeviationTime
    fullName: minDeviationTime
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      All alternative routes returned will
      follow the reference route (see section POST Requests) from the origin
      point of the calculateRoute request for at least this number of seconds.
      Can only be used when reconstructing a route. The minDeviationTime
      parameter cannot be used in conjunction with arriveAt
    optional: true
    syntax:
      content: 'minDeviationTime?: number'
      return:
        type:
          - number
    package: azure-maps-rest
  - uid: azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.report
    name: report
    fullName: report
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Specifies which data should be reported for
      diagnosis purposes. The only possible value is _effectiveSettings_.
      Reports the effective parameters or data used when calling the API. In the
      case of defaulted parameters the default will be reflected where the
      parameter was not specified by the caller.
    optional: true
    syntax:
      content: 'report?: string'
      return:
        type:
          - string
    package: azure-maps-rest
  - uid: >-
      azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.routeRepresentation
    name: routeRepresentation
    fullName: routeRepresentation
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Specifies the
      representation of the set of routes provided as response. This parameter
      value can only be used in conjunction with computeBestOrder=true. Possible
      values include: 'polyline', 'none'
    optional: true
    syntax:
      content: 'routeRepresentation?: RouteRepresentation'
      return:
        type:
          - azure-maps-rest.Models.RouteRepresentation
    package: azure-maps-rest
  - uid: azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.routeType
    name: routeType
    fullName: routeType
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      The type of route requested. Possible
      values include: 'fastest', 'shortest', 'eco', 'thrilling'
    optional: true
    syntax:
      content: 'routeType?: RouteType'
      return:
        type:
          - azure-maps-rest.Models.RouteType
    package: azure-maps-rest
  - uid: azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.sectionType
    name: sectionType
    fullName: sectionType
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Specifies which of the section types
      is reported in the route response. <br><br>For example if sectionType =
      pedestrian the sections which are suited for pedestrians only are
      returned. Multiple types can be used. The default sectionType refers to
      the travelMode input. By default travelMode is set to car. Possible values
      include: 'carTrain', 'country', 'ferry', 'motorway', 'pedestrian',
      'tollRoad', 'tollVignette', 'traffic', 'travelMode', 'tunnel'
    optional: true
    syntax:
      content: 'sectionType?: SectionType'
      return:
        type:
          - azure-maps-rest.Models.SectionType
    package: azure-maps-rest
  - uid: azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.traffic
    name: traffic
    fullName: traffic
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Possible values:
      * true - Do consider all available traffic information during routing
      * false - Ignore current traffic data during routing. Note that although
      the current traffic data is ignored
      during routing, the effect of historic traffic on effective road speeds is
      still incorporated.
    optional: true
    syntax:
      content: 'traffic?: boolean'
      return:
        type:
          - boolean
    package: azure-maps-rest
  - uid: azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.travelMode
    name: travelMode
    fullName: travelMode
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      The mode of travel for the requested
      route. Note that the requested travelMode may not be available for the
      entire route. Where the requested travelMode is not available for a
      particular section, the travelMode element of the response for that
      section will be other. Note that travel modes bus, motorcycle, taxi and
      van are BETA functionality. Full restriction data is not available in all
      areas. In calculateReachableRange requests, the values bicycle and
      pedestrian must not be used. Possible values include: 'car', 'truck',
      'taxi', 'bus', 'van', 'motorcycle', 'bicycle', 'pedestrian'
    optional: true
    syntax:
      content: 'travelMode?: TravelMode'
      return:
        type:
          - azure-maps-rest.Models.TravelMode
    package: azure-maps-rest
  - uid: >-
      azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.uphillEfficiency
    name: uphillEfficiency
    fullName: uphillEfficiency
    children: []
    langs:
      - typeScript
    type: property
    summary: |
      Specifies the efficiency of converting
      chemical energy stored in fuel to potential energy when the vehicle gains
      elevation _(i.e. PotentialEnergyGained/ChemicalEnergyConsumed).
      ChemicalEnergyConsumed_ is obtained by converting consumed fuel to
      chemical energy using **fuelEnergyDensityInMJoulesPerLiter**.
      Must be paired with **downhillEfficiency**.

      The range of values allowed are 0.0 to 1/**downhillEfficiency**.

      Sensible Values : for **Combustion Model** : 0.27, for **Electric Model**
      : 0.74
    optional: true
    syntax:
      content: 'uphillEfficiency?: number'
      return:
        type:
          - number
    package: azure-maps-rest
  - uid: >-
      azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.vehicleAxleWeight
    name: vehicleAxleWeight
    fullName: vehicleAxleWeight
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Weight per axle of the vehicle in kg.
      A value of 0 means that weight restrictions per axle are not considered.
    optional: true
    syntax:
      content: 'vehicleAxleWeight?: number'
      return:
        type:
          - number
    package: azure-maps-rest
  - uid: >-
      azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.vehicleEngineType
    name: vehicleEngineType
    fullName: vehicleEngineType
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Engine type of the
      vehicle. When a detailed Consumption Model is specified, it must be
      consistent with the value of **vehicleEngineType**. Possible values
      include: 'combustion', 'electric'
    optional: true
    syntax:
      content: 'vehicleEngineType?: VehicleEngineType'
      return:
        type:
          - azure-maps-rest.Models.VehicleEngineType
    package: azure-maps-rest
  - uid: >-
      azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.vehicleHeading
    name: vehicleHeading
    fullName: vehicleHeading
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      The directional heading of the vehicle
      in degrees starting at true North and continuing in clockwise direction.
      North is 0 degrees, east is 90 degrees, south is 180 degrees, west is 270
      degrees. Possible values 0-359
    optional: true
    syntax:
      content: 'vehicleHeading?: number'
      return:
        type:
          - number
    package: azure-maps-rest
  - uid: azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.vehicleHeight
    name: vehicleHeight
    fullName: vehicleHeight
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Height of the vehicle in meters. A value
      of 0 means that height restrictions are not considered.
    optional: true
    syntax:
      content: 'vehicleHeight?: number'
      return:
        type:
          - number
    package: azure-maps-rest
  - uid: azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.vehicleLength
    name: vehicleLength
    fullName: vehicleLength
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Length of the vehicle in meters. A value
      of 0 means that length restrictions are not considered.
    optional: true
    syntax:
      content: 'vehicleLength?: number'
      return:
        type:
          - number
    package: azure-maps-rest
  - uid: >-
      azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.vehicleLoadType
    name: vehicleLoadType
    fullName: vehicleLoadType
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Types of cargo that may be
      classified as hazardous materials and restricted from some roads.
      Available vehicleLoadType values are US Hazmat classes 1 through 9, plus
      generic classifications for use in other countries. Values beginning with
      USHazmat are for US routing while otherHazmat should be used for all other
      countries. vehicleLoadType can be specified multiple times. This parameter
      is currently only considered for travelMode=truck. Possible values
      include: 'USHazmatClass1', 'USHazmatClass2', 'USHazmatClass3',
      'USHazmatClass4', 'USHazmatClass5', 'USHazmatClass6', 'USHazmatClass7',
      'USHazmatClass8', 'USHazmatClass9', 'otherHazmatExplosive',
      'otherHazmatGeneral', 'otherHazmatHarmfulToWater'
    optional: true
    syntax:
      content: 'vehicleLoadType?: VehicleLoadType'
      return:
        type:
          - azure-maps-rest.Models.VehicleLoadType
    package: azure-maps-rest
  - uid: >-
      azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.vehicleMaxSpeed
    name: vehicleMaxSpeed
    fullName: vehicleMaxSpeed
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Maximum speed of the vehicle in
      km/hour. A value of 0 means that an appropriate value for the vehicle will
      be determined and applied during route planning. A non-zero value may be
      overridden during route planning.
    optional: true
    syntax:
      content: 'vehicleMaxSpeed?: number'
      return:
        type:
          - number
    package: azure-maps-rest
  - uid: azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.vehicleWeight
    name: vehicleWeight
    fullName: vehicleWeight
    children: []
    langs:
      - typeScript
    type: property
    summary: |
      Weight of the vehicle in kilograms.
      * It is mandatory if any of the *Efficiency parameters are set.

      * It must be strictly positive when used in the context of the Consumption
      Model. Weight restrictions are considered.

      * If no detailed **Consumption Model** is specified and the value of
      **vehicleWeight** is non-zero, then weight restrictions are considered.

      * In all other cases, this parameter is ignored.

      Sensible Values : for **Combustion Model** : 1600, for **Electric Model**
      : 1900
    optional: true
    syntax:
      content: 'vehicleWeight?: number'
      return:
        type:
          - number
    package: azure-maps-rest
  - uid: azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.vehicleWidth
    name: vehicleWidth
    fullName: vehicleWidth
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Width of the vehicle in meters. A value of
      0 means that width restrictions are not considered.
    optional: true
    syntax:
      content: 'vehicleWidth?: number'
      return:
        type:
          - number
    package: azure-maps-rest
  - uid: azure-maps-rest.Models.RouteGetRouteDirectionsOptionalParams.windingness
    name: windingness
    fullName: windingness
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Level of turns for thrilling route.
      This parameter can only be used in conjunction with routeType=thrilling.
      Possible values include: 'low', 'normal', 'high'
    optional: true
    syntax:
      content: 'windingness?: Windingness'
      return:
        type:
          - azure-maps-rest.Models.Windingness
    package: azure-maps-rest
references:
  - uid: azure-maps-rest.Models.ErrorModel
    name: ErrorModel
    spec.typeScript:
      - name: ErrorModel
        fullName: ErrorModel
        uid: azure-maps-rest.Models.ErrorModel
  - uid: 'azure-maps-rest.Models.GeoJSONFeatureCollectionFeaturesItem[]'
    name: 'GeoJSONFeatureCollectionFeaturesItem[]'
    spec.typeScript:
      - name: GeoJSONFeatureCollectionFeaturesItem
        fullName: GeoJSONFeatureCollectionFeaturesItem
        uid: azure-maps-rest.Models.GeoJSONFeatureCollectionFeaturesItem
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.Models.GeoJSONFeatureCollectionFeaturesItemGeometry
    name: GeoJSONFeatureCollectionFeaturesItemGeometry
    spec.typeScript:
      - name: GeoJSONFeatureCollectionFeaturesItemGeometry
        fullName: GeoJSONFeatureCollectionFeaturesItemGeometry
        uid: azure-maps-rest.Models.GeoJSONFeatureCollectionFeaturesItemGeometry
  - uid: azure-maps-rest.Models.GeoJSONGeometryType
    name: GeoJSONGeometryType
    spec.typeScript:
      - name: GeoJSONGeometryType
        fullName: GeoJSONGeometryType
        uid: azure-maps-rest.Models.GeoJSONGeometryType
  - uid: 'azure-maps-rest.Models.RouteOptimizedWaypoint[]'
    name: 'RouteOptimizedWaypoint[]'
    spec.typeScript:
      - name: RouteOptimizedWaypoint
        fullName: RouteOptimizedWaypoint
        uid: azure-maps-rest.Models.RouteOptimizedWaypoint
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.Models.RouteResponseReport
    name: RouteResponseReport
    spec.typeScript:
      - name: RouteResponseReport
        fullName: RouteResponseReport
        uid: azure-maps-rest.Models.RouteResponseReport
  - uid: 'azure-maps-rest.Models.RouteDirectionsResult[]'
    name: 'RouteDirectionsResult[]'
    spec.typeScript:
      - name: RouteDirectionsResult
        fullName: RouteDirectionsResult
        uid: azure-maps-rest.Models.RouteDirectionsResult
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.Models.RouteResultGuidance
    name: RouteResultGuidance
    spec.typeScript:
      - name: RouteResultGuidance
        fullName: RouteResultGuidance
        uid: azure-maps-rest.Models.RouteResultGuidance
  - uid: 'azure-maps-rest.Models.RouteResultLeg[]'
    name: 'RouteResultLeg[]'
    spec.typeScript:
      - name: RouteResultLeg
        fullName: RouteResultLeg
        uid: azure-maps-rest.Models.RouteResultLeg
      - name: '[]'
        fullName: '[]'
  - uid: 'azure-maps-rest.Models.RouteResultSection[]'
    name: 'RouteResultSection[]'
    spec.typeScript:
      - name: RouteResultSection
        fullName: RouteResultSection
        uid: azure-maps-rest.Models.RouteResultSection
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.Models.RouteDirectionsSummary
    name: RouteDirectionsSummary
    spec.typeScript:
      - name: RouteDirectionsSummary
        fullName: RouteDirectionsSummary
        uid: azure-maps-rest.Models.RouteDirectionsSummary
  - uid: azure-maps-rest.Models.AlternativeRouteType
    name: AlternativeRouteType
    spec.typeScript:
      - name: AlternativeRouteType
        fullName: AlternativeRouteType
        uid: azure-maps-rest.Models.AlternativeRouteType
  - uid: azure-maps-rest.Models.Avoid
    name: Avoid
    spec.typeScript:
      - name: Avoid
        fullName: Avoid
        uid: azure-maps-rest.Models.Avoid
  - uid: azure-maps-rest.Models.ComputeTravelTimeFor
    name: ComputeTravelTimeFor
    spec.typeScript:
      - name: ComputeTravelTimeFor
        fullName: ComputeTravelTimeFor
        uid: azure-maps-rest.Models.ComputeTravelTimeFor
  - uid: azure-maps-rest.Models.Hilliness
    name: Hilliness
    spec.typeScript:
      - name: Hilliness
        fullName: Hilliness
        uid: azure-maps-rest.Models.Hilliness
  - uid: azure-maps-rest.Models.RouteInstructionsType
    name: RouteInstructionsType
    spec.typeScript:
      - name: RouteInstructionsType
        fullName: RouteInstructionsType
        uid: azure-maps-rest.Models.RouteInstructionsType
  - uid: azure-maps-rest.Models.RouteRepresentation
    name: RouteRepresentation
    spec.typeScript:
      - name: RouteRepresentation
        fullName: RouteRepresentation
        uid: azure-maps-rest.Models.RouteRepresentation
  - uid: azure-maps-rest.Models.RouteType
    name: RouteType
    spec.typeScript:
      - name: RouteType
        fullName: RouteType
        uid: azure-maps-rest.Models.RouteType
  - uid: azure-maps-rest.Models.SectionType
    name: SectionType
    spec.typeScript:
      - name: SectionType
        fullName: SectionType
        uid: azure-maps-rest.Models.SectionType
  - uid: azure-maps-rest.Models.TravelMode
    name: TravelMode
    spec.typeScript:
      - name: TravelMode
        fullName: TravelMode
        uid: azure-maps-rest.Models.TravelMode
  - uid: azure-maps-rest.Models.VehicleEngineType
    name: VehicleEngineType
    spec.typeScript:
      - name: VehicleEngineType
        fullName: VehicleEngineType
        uid: azure-maps-rest.Models.VehicleEngineType
  - uid: azure-maps-rest.Models.VehicleLoadType
    name: VehicleLoadType
    spec.typeScript:
      - name: VehicleLoadType
        fullName: VehicleLoadType
        uid: azure-maps-rest.Models.VehicleLoadType
  - uid: azure-maps-rest.Models.Windingness
    name: Windingness
    spec.typeScript:
      - name: Windingness
        fullName: Windingness
        uid: azure-maps-rest.Models.Windingness
  - uid: azure-maps-rest.Models.GeoJSONMultiPoint
    name: GeoJSONMultiPoint
    spec.typeScript:
      - name: GeoJSONMultiPoint
        fullName: GeoJSONMultiPoint
        uid: azure-maps-rest.Models.GeoJSONMultiPoint
  - uid: 'azure-maps-rest.Models.RouteMatrixResult[][]'
    name: 'RouteMatrixResult[][]'
    spec.typeScript:
      - name: RouteMatrixResult
        fullName: RouteMatrixResult
        uid: azure-maps-rest.Models.RouteMatrixResult
      - name: '[][]'
        fullName: '[][]'
  - uid: azure-maps-rest.Models.RouteMatrixSummary
    name: RouteMatrixSummary
    spec.typeScript:
      - name: RouteMatrixSummary
        fullName: RouteMatrixSummary
        uid: azure-maps-rest.Models.RouteMatrixSummary
  - uid: azure-maps-rest.Models.RouteMatrixResultResponse
    name: RouteMatrixResultResponse
    spec.typeScript:
      - name: RouteMatrixResultResponse
        fullName: RouteMatrixResultResponse
        uid: azure-maps-rest.Models.RouteMatrixResultResponse
  - uid: azure-maps-rest.Models.RouteResultLegSummary
    name: RouteResultLegSummary
    spec.typeScript:
      - name: RouteResultLegSummary
        fullName: RouteResultLegSummary
        uid: azure-maps-rest.Models.RouteResultLegSummary
  - uid: 'azure-maps-rest.Models.Coordinate[]'
    name: 'Coordinate[]'
    spec.typeScript:
      - name: Coordinate
        fullName: Coordinate
        uid: azure-maps-rest.Models.Coordinate
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.Models.Coordinate
    name: Coordinate
    spec.typeScript:
      - name: Coordinate
        fullName: Coordinate
        uid: azure-maps-rest.Models.Coordinate
  - uid: azure-maps-rest.Models.RouteRange
    name: RouteRange
    spec.typeScript:
      - name: RouteRange
        fullName: RouteRange
        uid: azure-maps-rest.Models.RouteRange
  - uid: 'azure-maps-rest.Models.RouteResponseReportEffectiveSetting[]'
    name: 'RouteResponseReportEffectiveSetting[]'
    spec.typeScript:
      - name: RouteResponseReportEffectiveSetting
        fullName: RouteResponseReportEffectiveSetting
        uid: azure-maps-rest.Models.RouteResponseReportEffectiveSetting
      - name: '[]'
        fullName: '[]'
  - uid: 'azure-maps-rest.Models.RouteResultInstructionGroup[]'
    name: 'RouteResultInstructionGroup[]'
    spec.typeScript:
      - name: RouteResultInstructionGroup
        fullName: RouteResultInstructionGroup
        uid: azure-maps-rest.Models.RouteResultInstructionGroup
      - name: '[]'
        fullName: '[]'
  - uid: 'azure-maps-rest.Models.RouteResultInstruction[]'
    name: 'RouteResultInstruction[]'
    spec.typeScript:
      - name: RouteResultInstruction
        fullName: RouteResultInstruction
        uid: azure-maps-rest.Models.RouteResultInstruction
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.Models.DrivingSide
    name: DrivingSide
    spec.typeScript:
      - name: DrivingSide
        fullName: DrivingSide
        uid: azure-maps-rest.Models.DrivingSide
  - uid: azure-maps-rest.Models.GuidanceInstructionType
    name: GuidanceInstructionType
    spec.typeScript:
      - name: GuidanceInstructionType
        fullName: GuidanceInstructionType
        uid: azure-maps-rest.Models.GuidanceInstructionType
  - uid: azure-maps-rest.Models.GuidanceManeuver
    name: GuidanceManeuver
    spec.typeScript:
      - name: GuidanceManeuver
        fullName: GuidanceManeuver
        uid: azure-maps-rest.Models.GuidanceManeuver
  - uid: azure-maps-rest.Models.MagnitudeOfDelay
    name: MagnitudeOfDelay
    spec.typeScript:
      - name: MagnitudeOfDelay
        fullName: MagnitudeOfDelay
        uid: azure-maps-rest.Models.MagnitudeOfDelay
  - uid: azure-maps-rest.Models.RouteResultSectionTec
    name: RouteResultSectionTec
    spec.typeScript:
      - name: RouteResultSectionTec
        fullName: RouteResultSectionTec
        uid: azure-maps-rest.Models.RouteResultSectionTec
  - uid: 'azure-maps-rest.Models.RouteResultSectionTecCause[]'
    name: 'RouteResultSectionTecCause[]'
    spec.typeScript:
      - name: RouteResultSectionTecCause
        fullName: RouteResultSectionTecCause
        uid: azure-maps-rest.Models.RouteResultSectionTecCause
      - name: '[]'
        fullName: '[]'
  - uid: 'azure-maps-rest.Models.SearchAddressResult[]'
    name: 'SearchAddressResult[]'
    spec.typeScript:
      - name: SearchAddressResult
        fullName: SearchAddressResult
        uid: azure-maps-rest.Models.SearchAddressResult
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.Models.SearchAddressSummary
    name: SearchAddressSummary
    spec.typeScript:
      - name: SearchAddressSummary
        fullName: SearchAddressSummary
        uid: azure-maps-rest.Models.SearchAddressSummary
  - uid: azure-maps-rest.Models.SearchResultAddress
    name: SearchResultAddress
    spec.typeScript:
      - name: SearchResultAddress
        fullName: SearchResultAddress
        uid: azure-maps-rest.Models.SearchResultAddress
  - uid: 'azure-maps-rest.Models.SearchResultEntryPoint[]'
    name: 'SearchResultEntryPoint[]'
    spec.typeScript:
      - name: SearchResultEntryPoint
        fullName: SearchResultEntryPoint
        uid: azure-maps-rest.Models.SearchResultEntryPoint
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.Models.CoordinateAbbreviated
    name: CoordinateAbbreviated
    spec.typeScript:
      - name: CoordinateAbbreviated
        fullName: CoordinateAbbreviated
        uid: azure-maps-rest.Models.CoordinateAbbreviated
  - uid: azure-maps-rest.Models.SearchResultViewport
    name: SearchResultViewport
    spec.typeScript:
      - name: SearchResultViewport
        fullName: SearchResultViewport
        uid: azure-maps-rest.Models.SearchResultViewport
  - uid: 'azure-maps-rest.Models.SearchAddressReverseCrossStreetResult[]'
    name: 'SearchAddressReverseCrossStreetResult[]'
    spec.typeScript:
      - name: SearchAddressReverseCrossStreetResult
        fullName: SearchAddressReverseCrossStreetResult
        uid: azure-maps-rest.Models.SearchAddressReverseCrossStreetResult
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.Models.SearchAddressReverseCrossStreetSummary
    name: SearchAddressReverseCrossStreetSummary
    spec.typeScript:
      - name: SearchAddressReverseCrossStreetSummary
        fullName: SearchAddressReverseCrossStreetSummary
        uid: azure-maps-rest.Models.SearchAddressReverseCrossStreetSummary
  - uid: 'azure-maps-rest.Models.SearchAddressReverseResult[]'
    name: 'SearchAddressReverseResult[]'
    spec.typeScript:
      - name: SearchAddressReverseResult
        fullName: SearchAddressReverseResult
        uid: azure-maps-rest.Models.SearchAddressReverseResult
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.Models.SearchAddressReverseSummary
    name: SearchAddressReverseSummary
    spec.typeScript:
      - name: SearchAddressReverseSummary
        fullName: SearchAddressReverseSummary
        uid: azure-maps-rest.Models.SearchAddressReverseSummary
  - uid: 'azure-maps-rest.Models.SearchAddressStructuredResult[]'
    name: 'SearchAddressStructuredResult[]'
    spec.typeScript:
      - name: SearchAddressStructuredResult
        fullName: SearchAddressStructuredResult
        uid: azure-maps-rest.Models.SearchAddressStructuredResult
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.Models.SearchAddressStructuredSummary
    name: SearchAddressStructuredSummary
    spec.typeScript:
      - name: SearchAddressStructuredSummary
        fullName: SearchAddressStructuredSummary
        uid: azure-maps-rest.Models.SearchAddressStructuredSummary
  - uid: azure-maps-rest.Models.SearchResultAddressRanges
    name: SearchResultAddressRanges
    spec.typeScript:
      - name: SearchResultAddressRanges
        fullName: SearchResultAddressRanges
        uid: azure-maps-rest.Models.SearchResultAddressRanges
  - uid: azure-maps-rest.Models.SearchSummaryGeoBias
    name: SearchSummaryGeoBias
    spec.typeScript:
      - name: SearchSummaryGeoBias
        fullName: SearchSummaryGeoBias
        uid: azure-maps-rest.Models.SearchSummaryGeoBias
  - uid: azure-maps-rest.Models.GeoJSONLineString
    name: GeoJSONLineString
    spec.typeScript:
      - name: GeoJSONLineString
        fullName: GeoJSONLineString
        uid: azure-maps-rest.Models.GeoJSONLineString
  - uid: 'azure-maps-rest.Models.SearchAlongRouteResult[]'
    name: 'SearchAlongRouteResult[]'
    spec.typeScript:
      - name: SearchAlongRouteResult
        fullName: SearchAlongRouteResult
        uid: azure-maps-rest.Models.SearchAlongRouteResult
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.Models.SearchAlongRouteSummary
    name: SearchAlongRouteSummary
    spec.typeScript:
      - name: SearchAlongRouteSummary
        fullName: SearchAlongRouteSummary
        uid: azure-maps-rest.Models.SearchAlongRouteSummary
  - uid: azure-maps-rest.Models.SearchResultPoi
    name: SearchResultPoi
    spec.typeScript:
      - name: SearchResultPoi
        fullName: SearchResultPoi
        uid: azure-maps-rest.Models.SearchResultPoi
  - uid: 'azure-maps-rest.Models.SearchFuzzyResult[]'
    name: 'SearchFuzzyResult[]'
    spec.typeScript:
      - name: SearchFuzzyResult
        fullName: SearchFuzzyResult
        uid: azure-maps-rest.Models.SearchFuzzyResult
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.Models.SearchFuzzySummary
    name: SearchFuzzySummary
    spec.typeScript:
      - name: SearchFuzzySummary
        fullName: SearchFuzzySummary
        uid: azure-maps-rest.Models.SearchFuzzySummary
  - uid: 'azure-maps-rest.Models.SearchGeometryResult[]'
    name: 'SearchGeometryResult[]'
    spec.typeScript:
      - name: SearchGeometryResult
        fullName: SearchGeometryResult
        uid: azure-maps-rest.Models.SearchGeometryResult
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.Models.SearchGeometrySummary
    name: SearchGeometrySummary
    spec.typeScript:
      - name: SearchGeometrySummary
        fullName: SearchGeometrySummary
        uid: azure-maps-rest.Models.SearchGeometrySummary
  - uid: 'azure-maps-rest.Models.SearchIndexSet[]'
    name: 'SearchIndexSet[]'
    spec.typeScript:
      - name: SearchIndexSet
        fullName: SearchIndexSet
        uid: azure-maps-rest.Models.SearchIndexSet
      - name: '[]'
        fullName: '[]'
  - uid: 'azure-maps-rest.Models.SearchNearbyResult[]'
    name: 'SearchNearbyResult[]'
    spec.typeScript:
      - name: SearchNearbyResult
        fullName: SearchNearbyResult
        uid: azure-maps-rest.Models.SearchNearbyResult
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.Models.SearchNearbySummary
    name: SearchNearbySummary
    spec.typeScript:
      - name: SearchNearbySummary
        fullName: SearchNearbySummary
        uid: azure-maps-rest.Models.SearchNearbySummary
  - uid: 'azure-maps-rest.Models.SearchPoiCategoryResult[]'
    name: 'SearchPoiCategoryResult[]'
    spec.typeScript:
      - name: SearchPoiCategoryResult
        fullName: SearchPoiCategoryResult
        uid: azure-maps-rest.Models.SearchPoiCategoryResult
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.Models.SearchPoiCategorySummary
    name: SearchPoiCategorySummary
    spec.typeScript:
      - name: SearchPoiCategorySummary
        fullName: SearchPoiCategorySummary
        uid: azure-maps-rest.Models.SearchPoiCategorySummary
  - uid: 'azure-maps-rest.Models.SearchPoiResult[]'
    name: 'SearchPoiResult[]'
    spec.typeScript:
      - name: SearchPoiResult
        fullName: SearchPoiResult
        uid: azure-maps-rest.Models.SearchPoiResult
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.Models.SearchPoiSummary
    name: SearchPoiSummary
    spec.typeScript:
      - name: SearchPoiSummary
        fullName: SearchPoiSummary
        uid: azure-maps-rest.Models.SearchPoiSummary
  - uid: 'azure-maps-rest.Models.SearchPolygonResult[]'
    name: 'SearchPolygonResult[]'
    spec.typeScript:
      - name: SearchPolygonResult
        fullName: SearchPolygonResult
        uid: azure-maps-rest.Models.SearchPolygonResult
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.Models.Type
    name: Type
    spec.typeScript:
      - name: Type
        fullName: Type
        uid: azure-maps-rest.Models.Type
  - uid: 'azure-maps-rest.Models.SearchResultPoiClassification[]'
    name: 'SearchResultPoiClassification[]'
    spec.typeScript:
      - name: SearchResultPoiClassification
        fullName: SearchResultPoiClassification
        uid: azure-maps-rest.Models.SearchResultPoiClassification
      - name: '[]'
        fullName: '[]'
  - uid: 'azure-maps-rest.Models.SearchResultPoiClassificationName[]'
    name: 'SearchResultPoiClassificationName[]'
    spec.typeScript:
      - name: SearchResultPoiClassificationName
        fullName: SearchResultPoiClassificationName
        uid: azure-maps-rest.Models.SearchResultPoiClassificationName
      - name: '[]'
        fullName: '[]'
