### YamlMime:UniversalReference
items:
  - uid: azure-maps-rest.atlas.service.SpatialURL
    name: SpatialURL
    fullName: SpatialURL
    children:
      - azure-maps-rest.atlas.service.SpatialURL.getBuffer
      - azure-maps-rest.atlas.service.SpatialURL.getClosestPoint
      - azure-maps-rest.atlas.service.SpatialURL.getGeofence
      - azure-maps-rest.atlas.service.SpatialURL.getGreatCircleDistance
      - azure-maps-rest.atlas.service.SpatialURL.getPointInPolygon
      - azure-maps-rest.atlas.service.SpatialURL.mapsUrl
      - azure-maps-rest.atlas.service.SpatialURL.newPipeline
      - azure-maps-rest.atlas.service.SpatialURL.constructor
    langs:
      - typeScript
    type: class
    summary: A SpatialURL represents a URL to the Azure Maps spatial operations.
    extends:
      name: azure-maps-rest.atlas.service.MapsURL
    package: azure-maps-rest
  - uid: azure-maps-rest.atlas.service.SpatialURL.getBuffer
    name: 'getBuffer(Aborter, string | SpatialFeatureCollection, number[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns a FeatureCollection where each Feature is a buffer around the
      corresponding

      indexed Feature of the input. The buffer could be either on the outside or
      the inside of the

      provided Feature, depending on the distance provided in the input. There
      must be either one

      distance provided per Feature in the FeatureCollection  input, or if only
      one distance is

      provided, then that distance is applied to every Feature in the
      collection. The positive (or

      negative) buffer of a geometry is defined as the Minkowski sum (or
      difference) of the geometry

      with a circle of radius equal to the absolute value of the buffer
      distance. The buffer API

      always returns a polygonal result. The negative or zero-distance buffer of
      lines and points is

      always an empty polygon. The input features are provided in the request or

      by a GeoJSON file which is uploaded via [Data Upload
      API](https://docs.microsoft.com/en-us/rest/api/maps/data/uploadPreview)

      and referenced by a unique udid. The data may contain a collection of
      Point, MultiPoint,

      Polygon, MultiPolygon, LineString and MultiLineString. GeometryCollection
      will be ignored if

      provided.

      If directly providing the `FeatureCollection` uses the Post Buffer API:
      https://docs.microsoft.com/rest/api/maps/spatial/postbuffer


      Otherwise uses the Get Buffer API:
      https://docs.microsoft.com/rest/api/maps/spatial/getbuffer
    syntax:
      content: >-
        function getBuffer(aborter: Aborter, udidOrFeatureCollection: string |
        SpatialFeatureCollection, distances: number[])
      parameters:
        - id: aborter
          type:
            - azure-maps-rest.atlas.service.Aborter
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),

            goto documents of Aborter for more examples about request
            cancellation.
        - id: udidOrFeatureCollection
          type:
            - string | azure-maps-rest.atlas.service.SpatialFeatureCollection
          description: >2-

             A `FeatureCollection` containing the inputs or the unique id returned from [Data Upload
            API](https://docs.microsoft.com/en-us/rest/api/maps/data/uploadPreview)
            after uploading a valid

            GeoJSON FeatureCollection object.  Please refer to [RFC

            7946](https://tools.ietf.org/html/rfc7946#section-3.3) for details.
            All the feature's properties

            should contain `geometryId`, which is used for identifying the
            geometry and is case-sensitive.
        - id: distances
          type:
            - 'number[]'
          description: >-
            The list of distances (one per feature or one for all features).

            Positive distance will generate a buffer outside of the

            feature, whereas negative distance will generate a buffer inside of
            the feature. If the negative

            distance larger than the geometry itself, an empty polygon will be
            returned.
      return:
        type:
          - Promise<azure-maps-rest.atlas.service.GetBufferResponse>
        description: ''
    package: azure-maps-rest
  - uid: azure-maps-rest.atlas.service.SpatialURL.getClosestPoint
    name: >-
      getClosestPoint(Aborter, GeoJSON.Position, string |
      SpatialFeatureCollection, GetClosestPointOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the closest point between a base point and a given set of points
      provided

      by user data in the request or in a user uploaded data set identified by
      udid.

      If using a udid the set of target points is provided by a GeoJSON file

      which is uploaded via [Data Upload

      API](https://docs.microsoft.com/en-us/rest/api/maps/data/uploadPreview)
      and referenced by a

      unique udid. The GeoJSON file may only contain a collection of Point
      geometry. MultiPoint or

      other geometries will be ignored if provided. The maximum number of points
      accepted is 100,000.

      The algorithm does not take into account routing or traffic. Information
      returned includes

      closest point latitude, longitude, and distance in meters from the closest
      point.

      If directly providing the `FeatureCollection` uses the Post Closest Point
      API: https://docs.microsoft.com/rest/api/maps/spatial/postclosestpoint


      Otherwise uses the Get Closest Point API:
      https://docs.microsoft.com/rest/api/maps/spatial/getclosestpoint
    syntax:
      content: >-
        function getClosestPoint(aborter: Aborter, position: GeoJSON.Position,
        udidOrFeatureCollection: string | SpatialFeatureCollection, options?:
        GetClosestPointOptions)
      parameters:
        - id: aborter
          type:
            - azure-maps-rest.atlas.service.Aborter
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),

            goto documents of Aborter for more examples about request
            cancellation.
        - id: position
          type:
            - GeoJSON.Position
          description: The base point.
        - id: udidOrFeatureCollection
          type:
            - string | azure-maps-rest.atlas.service.SpatialFeatureCollection
          description: >-

            A `FeatureCollection` containing the target points or the unique id
            returned from [Data Upload

            API](https://docs.microsoft.com/en-us/rest/api/maps/data/uploadPreview)
            after uploading a valid

            GeoJSON FeatureCollection object.  Please refer to [RFC

            7946](https://tools.ietf.org/html/rfc7946#section-3.3) for details.
            All the feature's properties

            should contain `geometryId`, which is used for identifying the
            geometry and is case-sensitive.
        - id: options
          type:
            - azure-maps-rest.atlas.service.GetClosestPointOptions
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-maps-rest.atlas.service.GetClosesPointResponse>
        description: ''
    package: azure-maps-rest
  - uid: azure-maps-rest.atlas.service.SpatialURL.getGeofence
    name: >-
      getGeofence(Aborter, string, string | SpatialFeatureCollection,
      GeoJSON.Position, GetGeofenceOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: "Retrieves the proximity of a coordinate to a\ngeofence provided in the request or that has been uploaded to the Data service. You can use the\n[Data Upload API](https://docs.microsoft.com/en-us/rest/api/maps/data/uploadPreview) to upload\na geofence or set of fences. See [Geofencing GeoJSON\ndata](https://docs.microsoft.com/en-us/azure/azure-maps/geofence-geojson)\nfor more details on the geofence data format. To query the proximity of a coordinate, you supply\nthe location of the object you are tracking as well\nas the ID for the fence or set of fences, and the response will contain information about\nthe distance from the outer edge of the geofence. A negative value signifies that the\ncoordinate is inside of the fence while a positive value means that it is outside of the\nfence. This API can be used for a variety of scenarios that include things like asset\ntracking, fleet management, or setting up alerts for moving objects.\nThe API supports [integration with Event\nGrid](https://docs.microsoft.com/azure/azure-maps/azure-maps-event-grid-integration). The\nisAsync parameter is used to enable integration with Event Grid (disabled by default).\nTo test this API, you can upload the sample data from Post Geofence API examples(Request Body)\nvia Data Upload API and replace the [udid] from the sample request below with the udid returned\nby Data Upload API.\n\nIf directly providing the geofence uses the Post Geofence API: https://docs.microsoft.com/rest/api/maps/spatial/postgeofence\n\nOtherwise uses the Get Geofence API: https://docs.microsoft.com/en-us/rest/api/maps/spatial/getgeofence\n\n### Geofencing InnerError code\n\nIn geofencing response error contract, `innererror` is  an object containing service specific\ninformation about the error. `code` is a property in `innererror` which can map to a specific\ngeofencing error type. The table belows shows the code mapping between all the known client\nerror type to the corresponding geofencing error `message`.\n\ninnererror.code | error.message\n---------------------------- | --------------------------------------\nNullDeviceId  | Device Id should not be null.\nNullUdid\t  | Udid should not be null.\nUdidWrongFormat| Udid should be acquired from user data ingestion API.\nInvalidUserTime| Usertime is invalid.\nInvalidSearchBuffer| Searchbuffer is invalid.\nInvalidSearchRange| The value range of searchbuffer should be from 0 to 500 meters.\nInvalidLatLon| Lat and/or lon parameters are invalid.\nInvalidIsAsyncValue| The IsAsync parameter is invalid.\nInvalidModeValue| The mode parameter invalid.\nInvalidJson| Geofencing data is not a valid json file.\nNotSupportedGeoJson| Geofencing data can't be read as a Feature or FeatureCollections.\nInvalidGeoJson| Geofencing data is invalid.\nNoUserDataWithAccountOrSubscription| Can't find user geofencing data with provided account-id\nand/or subscription-id.\nNoUserDataWithUdid|\tCan't find user geofencing data with provided udId."
    syntax:
      content: >-
        function getGeofence(aborter: Aborter, deviceId: string,
        udidOrFeatureCollection: string | SpatialFeatureCollection, position:
        GeoJSON.Position, options?: GetGeofenceOptions)
      parameters:
        - id: aborter
          type:
            - azure-maps-rest.atlas.service.Aborter
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),

            goto documents of Aborter for more examples about request
            cancellation.
        - id: deviceId
          type:
            - string
          description: ID of the device
        - id: udidOrFeatureCollection
          type:
            - string | azure-maps-rest.atlas.service.SpatialFeatureCollection
          description: >-

            A `FeatureCollection` containing the fence or the unique id returned
            from [Data Upload

            API](https://docs.microsoft.com/en-us/rest/api/maps/data/uploadPreview)
            after uploading a valid

            GeoJSON FeatureCollection object. Please refer to [RFC

            7946](https://tools.ietf.org/html/rfc7946#section-3.3) for details.
            All the feature's

            properties should contain `geometryId`, which is used for
            identifying the geometry and is

            case-sensitive.
        - id: position
          type:
            - GeoJSON.Position
          description: The location being passed.
        - id: options
          type:
            - azure-maps-rest.atlas.service.GetGeofenceOptions
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-maps-rest.atlas.service.GetGeofenceResponse>
        description: ''
    package: azure-maps-rest
  - uid: azure-maps-rest.atlas.service.SpatialURL.getGreatCircleDistance
    name: 'getGreatCircleDistance(Aborter, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Return the great-circle or shortest distance between two points on the
      surface of

      a sphere, measured along the surface of the sphere.  This differs from
      calculating a straight

      line through the sphere's interior. This method is helpful for estimating
      travel distances for

      airplanes by calculating the shortest distance between airports.

      Uses the Get Great Circle Distance API:
      https://docs.microsoft.com/rest/api/maps/spatial/getgreatcircledistance
    syntax:
      content: 'function getGreatCircleDistance(aborter: Aborter, coordinates: Object)'
      parameters:
        - id: aborter
          type:
            - azure-maps-rest.atlas.service.Aborter
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),

            goto documents of Aborter for more examples about request
            cancellation.
        - id: coordinates
          type:
            - Object
          description: >-
            The coordinates through which the distance is calculated. Two

            coordinates are required. The first one is the source point
            coordinate and the last is the

            target point coordinate.
      return:
        type:
          - Promise<azure-maps-rest.atlas.service.GetGreatCircleDistance>
        description: ''
    package: azure-maps-rest
  - uid: azure-maps-rest.atlas.service.SpatialURL.getPointInPolygon
    name: >-
      getPointInPolygon(Aborter, string | SpatialFeatureCollection,
      GeoJSON.Position)
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns whether a point is inside a set of polygons. The set

      of polygons is provided in the request or by a GeoJSON file which is
      uploaded via [Data Upload

      API](https://docs.microsoft.com/en-us/rest/api/maps/data/uploadPreview)
      and referenced by a

      unique udid. The GeoJSON file may contain Polygon and MultiPolygon
      geometries, other geometries

      will be ignored if provided. If the point is inside or on the boundary of
      one of these polygons,

      the value returned is true. In all other cases, the value returned is
      false. When the point is

      inside multiple polygons, the result will give intersecting geometries
      section to show all valid

      geometries(referenced by geometryId) in user data. The maximum number of
      vertices accepted to

      form a Polygon is 10,000.

      If directly providing the `FeatureCollection` uses the Post Point In
      Polygon API:
      https://docs.microsoft.com/rest/api/maps/spatial/postpointinpolygon


      Otherwise uses the Get Point In Polygon API:
      https://docs.microsoft.com/rest/api/maps/spatial/getpointinpolygon
    syntax:
      content: >-
        function getPointInPolygon(aborter: Aborter, udidOrFeatureCollection:
        string | SpatialFeatureCollection, position: GeoJSON.Position)
      parameters:
        - id: aborter
          type:
            - azure-maps-rest.atlas.service.Aborter
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),

            goto documents of Aborter for more examples about request
            cancellation.
        - id: udidOrFeatureCollection
          type:
            - string | azure-maps-rest.atlas.service.SpatialFeatureCollection
          description: >-

            A `FeatureCollection` containing the polygons or the unique id
            returned from [Data Upload

            API](https://docs.microsoft.com/en-us/rest/api/maps/data/uploadPreview)
            after uploading a valid

            GeoJSON FeatureCollection object.  Please refer to [RFC

            7946](https://tools.ietf.org/html/rfc7946#section-3.3) for details.
            All the feature's properties

            should contain `geometryId`, which is used for identifying the
            geometry and is case-sensitive.
        - id: position
          type:
            - GeoJSON.Position
          description: The base point.
      return:
        type:
          - Promise<azure-maps-rest.atlas.service.GetPointInPolygonResponse>
        description: ''
    package: azure-maps-rest
  - uid: azure-maps-rest.atlas.service.SpatialURL.mapsUrl
    name: mapsUrl
    fullName: mapsUrl
    children: []
    langs:
      - typeScript
    type: property
    summary: Base URL string value.
    syntax:
      content: 'mapsUrl: string'
      return:
        type:
          - string
        description: ''
    package: azure-maps-rest
  - uid: azure-maps-rest.atlas.service.SpatialURL.newPipeline
    name: 'newPipeline(Credential, INewPipelineOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      A static method used to create a new Pipeline object with Credential
      provided.
    syntax:
      content: >-
        static function newPipeline(credential: Credential, pipelineOptions?:
        INewPipelineOptions)
      parameters:
        - id: credential
          type:
            - azure-maps-rest.atlas.service.Credential
          description: >-
            Such as SubscriptionKeyCredential, TokenCredential, and
            MapControlCredential.
        - id: pipelineOptions
          type:
            - azure-maps-rest.atlas.service.INewPipelineOptions
          description: ''
          optional: true
      return:
        type:
          - azure-maps-rest.atlas.service.Pipeline
        description: A new Pipeline object.
    package: azure-maps-rest
  - uid: azure-maps-rest.atlas.service.SpatialURL.constructor
    name: 'SpatialURL(Pipeline, string)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates an instance of SpatialURL.
    syntax:
      content: 'new SpatialURL(pipeline: Pipeline, mapsUrl?: string)'
      parameters:
        - id: pipeline
          type:
            - azure-maps-rest.atlas.service.Pipeline
          description: |-
            Call MapsURL.newPipeline() to create a default
            pipeline, or provide a customized pipeline.
        - id: mapsUrl
          type:
            - string
          description: >-
            A URL string pointing to Azure Maps service, default is

            `"https://atlas.microsoft.com"`.

            If no protocol is specified, e.g. `"atlas.microsoft.com"`, then
            `https` will be assumed.
          optional: true
    package: azure-maps-rest
references:
  - uid: azure-maps-rest.atlas.service.Models.TransitTypeResult
    name: TransitTypeResult
    spec.typeScript:
      - name: TransitTypeResult
        fullName: TransitTypeResult
        uid: azure-maps-rest.atlas.service.Models.TransitTypeResult
  - uid: azure-maps-rest.atlas.service.Models.AlertDetail
    name: AlertDetail
    spec.typeScript:
      - name: AlertDetail
        fullName: AlertDetail
        uid: azure-maps-rest.atlas.service.Models.AlertDetail
  - uid: azure-maps-rest.atlas.service.Models.AlertDescription
    name: AlertDescription
    spec.typeScript:
      - name: AlertDescription
        fullName: AlertDescription
        uid: azure-maps-rest.atlas.service.Models.AlertDescription
  - uid: 'azure-maps-rest.atlas.service.Models.BatchRequestBodyBatchItemsItem[]'
    name: 'BatchRequestBodyBatchItemsItem[]'
    spec.typeScript:
      - name: BatchRequestBodyBatchItemsItem
        fullName: BatchRequestBodyBatchItemsItem
        uid: azure-maps-rest.atlas.service.Models.BatchRequestBodyBatchItemsItem
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.atlas.service.Models.BatchResponseSummary
    name: BatchResponseSummary
    spec.typeScript:
      - name: BatchResponseSummary
        fullName: BatchResponseSummary
        uid: azure-maps-rest.atlas.service.Models.BatchResponseSummary
  - uid: azure-maps-rest.atlas.service.Models.GeoJSONFeatureCollection
    name: GeoJSONFeatureCollection
    spec.typeScript:
      - name: GeoJSONFeatureCollection
        fullName: GeoJSONFeatureCollection
        uid: azure-maps-rest.atlas.service.Models.GeoJSONFeatureCollection
  - uid: azure-maps-rest.atlas.service.Models.BufferResponseSummary
    name: BufferResponseSummary
    spec.typeScript:
      - name: BufferResponseSummary
        fullName: BufferResponseSummary
        uid: azure-maps-rest.atlas.service.Models.BufferResponseSummary
  - uid: azure-maps-rest.atlas.service.Models.OperatorInfo
    name: OperatorInfo
    spec.typeScript:
      - name: OperatorInfo
        fullName: OperatorInfo
        uid: azure-maps-rest.atlas.service.Models.OperatorInfo
  - uid: azure-maps-rest.atlas.service.Models.Coordinate
    name: Coordinate
    spec.typeScript:
      - name: Coordinate
        fullName: Coordinate
        uid: azure-maps-rest.atlas.service.Models.Coordinate
  - uid: azure-maps-rest.atlas.service.Models.Pricing
    name: Pricing
    spec.typeScript:
      - name: Pricing
        fullName: Pricing
        uid: azure-maps-rest.atlas.service.Models.Pricing
  - uid: azure-maps-rest.atlas.service.Models.SpatialCoordinate
    name: SpatialCoordinate
    spec.typeScript:
      - name: SpatialCoordinate
        fullName: SpatialCoordinate
        uid: azure-maps-rest.atlas.service.Models.SpatialCoordinate
  - uid: 'azure-maps-rest.atlas.service.Models.Region[]'
    name: 'Region[]'
    spec.typeScript:
      - name: Region
        fullName: Region
        uid: azure-maps-rest.atlas.service.Models.Region
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.atlas.service.Models.DataSourcesGeometry
    name: DataSourcesGeometry
    spec.typeScript:
      - name: DataSourcesGeometry
        fullName: DataSourcesGeometry
        uid: azure-maps-rest.atlas.service.Models.DataSourcesGeometry
  - uid: azure-maps-rest.atlas.service.Models.AbsoluteDirection
    name: AbsoluteDirection
    spec.typeScript:
      - name: AbsoluteDirection
        fullName: AbsoluteDirection
        uid: azure-maps-rest.atlas.service.Models.AbsoluteDirection
  - uid: azure-maps-rest.atlas.service.Models.RelativeDirection
    name: RelativeDirection
    spec.typeScript:
      - name: RelativeDirection
        fullName: RelativeDirection
        uid: azure-maps-rest.atlas.service.Models.RelativeDirection
  - uid: azure-maps-rest.atlas.service.Models.ErrorModel
    name: ErrorModel
    spec.typeScript:
      - name: ErrorModel
        fullName: ErrorModel
        uid: azure-maps-rest.atlas.service.Models.ErrorModel
  - uid: >-
      azure-maps-rest.atlas.service.Models.GeoJSONFeatureCollectionFeaturesItem[]
    name: 'GeoJSONFeatureCollectionFeaturesItem[]'
    spec.typeScript:
      - name: GeoJSONFeatureCollectionFeaturesItem
        fullName: GeoJSONFeatureCollectionFeaturesItem
        uid: >-
          azure-maps-rest.atlas.service.Models.GeoJSONFeatureCollectionFeaturesItem
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.atlas.service.Models.GeoJSONGeometryUnion
    name: GeoJSONGeometryUnion
    spec.typeScript:
      - name: GeoJSONGeometryUnion
        fullName: GeoJSONGeometryUnion
        uid: azure-maps-rest.atlas.service.Models.GeoJSONGeometryUnion
  - uid: 'azure-maps-rest.atlas.service.Models.GeoJSONGeometryUnion[]'
    name: 'GeoJSONGeometryUnion[]'
    spec.typeScript:
      - name: GeoJSONGeometryUnion
        fullName: GeoJSONGeometryUnion
        uid: azure-maps-rest.atlas.service.Models.GeoJSONGeometryUnion
      - name: '[]'
        fullName: '[]'
  - uid: 'azure-maps-rest.atlas.service.Models.GeofenceGeometry[]'
    name: 'GeofenceGeometry[]'
    spec.typeScript:
      - name: GeofenceGeometry
        fullName: GeofenceGeometry
        uid: azure-maps-rest.atlas.service.Models.GeofenceGeometry
      - name: '[]'
        fullName: '[]'
  - uid: 'azure-maps-rest.atlas.service.Models.ClosestPointResultEntry[]'
    name: 'ClosestPointResultEntry[]'
    spec.typeScript:
      - name: ClosestPointResultEntry
        fullName: ClosestPointResultEntry
        uid: azure-maps-rest.atlas.service.Models.ClosestPointResultEntry
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.atlas.service.Models.GetClosestPointSummary
    name: GetClosestPointSummary
    spec.typeScript:
      - name: GetClosestPointSummary
        fullName: GetClosestPointSummary
        uid: azure-maps-rest.atlas.service.Models.GetClosestPointSummary
  - uid: azure-maps-rest.atlas.service.Models.PointInPolygonResult
    name: PointInPolygonResult
    spec.typeScript:
      - name: PointInPolygonResult
        fullName: PointInPolygonResult
        uid: azure-maps-rest.atlas.service.Models.PointInPolygonResult
  - uid: azure-maps-rest.atlas.service.Models.GetPointInPolygonSummary
    name: GetPointInPolygonSummary
    spec.typeScript:
      - name: GetPointInPolygonSummary
        fullName: GetPointInPolygonSummary
        uid: azure-maps-rest.atlas.service.Models.GetPointInPolygonSummary
  - uid: azure-maps-rest.atlas.service.Models.GreatCircleDistanceResponseResult
    name: GreatCircleDistanceResponseResult
    spec.typeScript:
      - name: GreatCircleDistanceResponseResult
        fullName: GreatCircleDistanceResponseResult
        uid: azure-maps-rest.atlas.service.Models.GreatCircleDistanceResponseResult
  - uid: azure-maps-rest.atlas.service.Models.GreatCircleDistanceResponseSummary
    name: GreatCircleDistanceResponseSummary
    spec.typeScript:
      - name: GreatCircleDistanceResponseSummary
        fullName: GreatCircleDistanceResponseSummary
        uid: >-
          azure-maps-rest.atlas.service.Models.GreatCircleDistanceResponseSummary
  - uid: 'azure-maps-rest.atlas.service.Models.RouteItineraryLeg[]'
    name: 'RouteItineraryLeg[]'
    spec.typeScript:
      - name: RouteItineraryLeg
        fullName: RouteItineraryLeg
        uid: azure-maps-rest.atlas.service.Models.RouteItineraryLeg
      - name: '[]'
        fullName: '[]'
  - uid: 'azure-maps-rest.atlas.service.Models.LineArrival[]'
    name: 'LineArrival[]'
    spec.typeScript:
      - name: LineArrival
        fullName: LineArrival
        uid: azure-maps-rest.atlas.service.Models.LineArrival
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.atlas.service.Models.LegPoint
    name: LegPoint
    spec.typeScript:
      - name: LegPoint
        fullName: LegPoint
        uid: azure-maps-rest.atlas.service.Models.LegPoint
  - uid: azure-maps-rest.atlas.service.Models.LineString
    name: LineString
    spec.typeScript:
      - name: LineString
        fullName: LineString
        uid: azure-maps-rest.atlas.service.Models.LineString
  - uid: azure-maps-rest.atlas.service.Models.LegType
    name: LegType
    spec.typeScript:
      - name: LegType
        fullName: LegType
        uid: azure-maps-rest.atlas.service.Models.LegType
  - uid: azure-maps-rest.atlas.service.Models.Line
    name: Line
    spec.typeScript:
      - name: Line
        fullName: Line
        uid: azure-maps-rest.atlas.service.Models.Line
  - uid: azure-maps-rest.atlas.service.Models.LineGroup
    name: LineGroup
    spec.typeScript:
      - name: LineGroup
        fullName: LineGroup
        uid: azure-maps-rest.atlas.service.Models.LineGroup
  - uid: 'azure-maps-rest.atlas.service.Models.Step[]'
    name: 'Step[]'
    spec.typeScript:
      - name: Step
        fullName: Step
        uid: azure-maps-rest.atlas.service.Models.Step
      - name: '[]'
        fullName: '[]'
  - uid: 'azure-maps-rest.atlas.service.Models.Stop[]'
    name: 'Stop[]'
    spec.typeScript:
      - name: Stop
        fullName: Stop
        uid: azure-maps-rest.atlas.service.Models.Stop
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.atlas.service.Models.TransitType
    name: TransitType
    spec.typeScript:
      - name: TransitType
        fullName: TransitType
        uid: azure-maps-rest.atlas.service.Models.TransitType
  - uid: azure-maps-rest.atlas.service.Models.ScheduleType
    name: ScheduleType
    spec.typeScript:
      - name: ScheduleType
        fullName: ScheduleType
        uid: azure-maps-rest.atlas.service.Models.ScheduleType
  - uid: >-
      azure-maps-rest.atlas.service.RequestPolicyFactory[] |
      (defaultRequestPolicyFactories: RequestPolicyFactory[]) => void | Object[]
    name: >-
      RequestPolicyFactory[] | (defaultRequestPolicyFactories:
      RequestPolicyFactory[]) => void | Object[]
    spec.typeScript:
      - name: RequestPolicyFactory
        fullName: RequestPolicyFactory
        uid: azure-maps-rest.atlas.service.RequestPolicyFactory
      - name: >-
          [] | (defaultRequestPolicyFactories: RequestPolicyFactory[]) => void |
          Object[]
        fullName: >-
          [] | (defaultRequestPolicyFactories: RequestPolicyFactory[]) => void |
          Object[]
  - uid: 'azure-maps-rest.atlas.service.Models.Agency[]'
    name: 'Agency[]'
    spec.typeScript:
      - name: Agency
        fullName: Agency
        uid: azure-maps-rest.atlas.service.Models.Agency
      - name: '[]'
        fullName: '[]'
  - uid: 'azure-maps-rest.atlas.service.Models.Alert[]'
    name: 'Alert[]'
    spec.typeScript:
      - name: Alert
        fullName: Alert
        uid: azure-maps-rest.atlas.service.Models.Alert
      - name: '[]'
        fullName: '[]'
  - uid: 'azure-maps-rest.atlas.service.Models.TransitTypeResult[]'
    name: 'TransitTypeResult[]'
    spec.typeScript:
      - name: TransitTypeResult
        fullName: TransitTypeResult
        uid: azure-maps-rest.atlas.service.Models.TransitTypeResult
      - name: '[]'
        fullName: '[]'
  - uid: 'azure-maps-rest.atlas.service.Models.MetroAreaResult[]'
    name: 'MetroAreaResult[]'
    spec.typeScript:
      - name: MetroAreaResult
        fullName: MetroAreaResult
        uid: azure-maps-rest.atlas.service.Models.MetroAreaResult
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.atlas.service.Models.Polygon
    name: Polygon
    spec.typeScript:
      - name: Polygon
        fullName: Polygon
        uid: azure-maps-rest.atlas.service.Models.Polygon
  - uid: azure-maps-rest.atlas.service.Models.ResultViewport
    name: ResultViewport
    spec.typeScript:
      - name: ResultViewport
        fullName: ResultViewport
        uid: azure-maps-rest.atlas.service.Models.ResultViewport
  - uid: azure-maps-rest.atlas.service.Models.MetroAreaQueryType
    name: MetroAreaQueryType
    spec.typeScript:
      - name: MetroAreaQueryType
        fullName: MetroAreaQueryType
        uid: azure-maps-rest.atlas.service.Models.MetroAreaQueryType
  - uid: 'azure-maps-rest.atlas.service.Models.ObjectType[]'
    name: 'ObjectType[]'
    spec.typeScript:
      - name: ObjectType
        fullName: ObjectType
        uid: azure-maps-rest.atlas.service.Models.ObjectType
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.atlas.service.Models.AgencyType
    name: AgencyType
    spec.typeScript:
      - name: AgencyType
        fullName: AgencyType
        uid: azure-maps-rest.atlas.service.Models.AgencyType
  - uid: azure-maps-rest.atlas.service.Models.RealTimeArrivalsQueryType
    name: RealTimeArrivalsQueryType
    spec.typeScript:
      - name: RealTimeArrivalsQueryType
        fullName: RealTimeArrivalsQueryType
        uid: azure-maps-rest.atlas.service.Models.RealTimeArrivalsQueryType
  - uid: azure-maps-rest.atlas.service.Models.StopQueryType
    name: StopQueryType
    spec.typeScript:
      - name: StopQueryType
        fullName: StopQueryType
        uid: azure-maps-rest.atlas.service.Models.StopQueryType
  - uid: 'azure-maps-rest.atlas.service.Models.TransitTypeFilter[]'
    name: 'TransitTypeFilter[]'
    spec.typeScript:
      - name: TransitTypeFilter
        fullName: TransitTypeFilter
        uid: azure-maps-rest.atlas.service.Models.TransitTypeFilter
      - name: '[]'
        fullName: '[]'
  - uid: 'azure-maps-rest.atlas.service.Models.TransitItineraryDetailType[]'
    name: 'TransitItineraryDetailType[]'
    spec.typeScript:
      - name: TransitItineraryDetailType
        fullName: TransitItineraryDetailType
        uid: azure-maps-rest.atlas.service.Models.TransitItineraryDetailType
      - name: '[]'
        fullName: '[]'
  - uid: 'azure-maps-rest.atlas.service.Models.TransitLineDetailType[]'
    name: 'TransitLineDetailType[]'
    spec.typeScript:
      - name: TransitLineDetailType
        fullName: TransitLineDetailType
        uid: azure-maps-rest.atlas.service.Models.TransitLineDetailType
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.atlas.service.Models.BikeType
    name: BikeType
    spec.typeScript:
      - name: BikeType
        fullName: BikeType
        uid: azure-maps-rest.atlas.service.Models.BikeType
  - uid: azure-maps-rest.atlas.service.Models.DestinationType
    name: DestinationType
    spec.typeScript:
      - name: DestinationType
        fullName: DestinationType
        uid: azure-maps-rest.atlas.service.Models.DestinationType
  - uid: 'azure-maps-rest.atlas.service.Models.ModeType[]'
    name: 'ModeType[]'
    spec.typeScript:
      - name: ModeType
        fullName: ModeType
        uid: azure-maps-rest.atlas.service.Models.ModeType
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.atlas.service.Models.OriginType
    name: OriginType
    spec.typeScript:
      - name: OriginType
        fullName: OriginType
        uid: azure-maps-rest.atlas.service.Models.OriginType
  - uid: azure-maps-rest.atlas.service.Models.TransitRouteType
    name: TransitRouteType
    spec.typeScript:
      - name: TransitRouteType
        fullName: TransitRouteType
        uid: azure-maps-rest.atlas.service.Models.TransitRouteType
  - uid: azure-maps-rest.atlas.service.Models.TimeType
    name: TimeType
    spec.typeScript:
      - name: TimeType
        fullName: TimeType
        uid: azure-maps-rest.atlas.service.Models.TimeType
  - uid: 'azure-maps-rest.atlas.service.Models.TransitStopDetailType[]'
    name: 'TransitStopDetailType[]'
    spec.typeScript:
      - name: TransitStopDetailType
        fullName: TransitStopDetailType
        uid: azure-maps-rest.atlas.service.Models.TransitStopDetailType
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.atlas.service.Models.TransitStopQueryType
    name: TransitStopQueryType
    spec.typeScript:
      - name: TransitStopQueryType
        fullName: TransitStopQueryType
        uid: azure-maps-rest.atlas.service.Models.TransitStopQueryType
  - uid: 'azure-maps-rest.atlas.service.Models.TransitObjectResult[]'
    name: 'TransitObjectResult[]'
    spec.typeScript:
      - name: TransitObjectResult
        fullName: TransitObjectResult
        uid: azure-maps-rest.atlas.service.Models.TransitObjectResult
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.atlas.service.Models.PostClosestPointSummary
    name: PostClosestPointSummary
    spec.typeScript:
      - name: PostClosestPointSummary
        fullName: PostClosestPointSummary
        uid: azure-maps-rest.atlas.service.Models.PostClosestPointSummary
  - uid: azure-maps-rest.atlas.service.Models.PostPointInPolygonSummary
    name: PostPointInPolygonSummary
    spec.typeScript:
      - name: PostPointInPolygonSummary
        fullName: PostPointInPolygonSummary
        uid: azure-maps-rest.atlas.service.Models.PostPointInPolygonSummary
  - uid: azure-maps-rest.atlas.service.Models.Stop
    name: Stop
    spec.typeScript:
      - name: Stop
        fullName: Stop
        uid: azure-maps-rest.atlas.service.Models.Stop
  - uid: 'azure-maps-rest.atlas.service.Models.RealTimeArrivalResult[]'
    name: 'RealTimeArrivalResult[]'
    spec.typeScript:
      - name: RealTimeArrivalResult
        fullName: RealTimeArrivalResult
        uid: azure-maps-rest.atlas.service.Models.RealTimeArrivalResult
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.atlas.service.Models.RegionCountry
    name: RegionCountry
    spec.typeScript:
      - name: RegionCountry
        fullName: RegionCountry
        uid: azure-maps-rest.atlas.service.Models.RegionCountry
  - uid: azure-maps-rest.atlas.service.Models.Text1
    name: Text1
    spec.typeScript:
      - name: Text1
        fullName: Text1
        uid: azure-maps-rest.atlas.service.Models.Text1
  - uid: azure-maps-rest.atlas.service.Models.Text2
    name: Text2
    spec.typeScript:
      - name: Text2
        fullName: Text2
        uid: azure-maps-rest.atlas.service.Models.Text2
  - uid: azure-maps-rest.atlas.service.Models.Text
    name: Text
    spec.typeScript:
      - name: Text
        fullName: Text
        uid: azure-maps-rest.atlas.service.Models.Text
  - uid: azure-maps-rest.atlas.service.Models.StaticMapLayer
    name: StaticMapLayer
    spec.typeScript:
      - name: StaticMapLayer
        fullName: StaticMapLayer
        uid: azure-maps-rest.atlas.service.Models.StaticMapLayer
  - uid: azure-maps-rest.atlas.service.Models.Style
    name: Style
    spec.typeScript:
      - name: Style
        fullName: Style
        uid: azure-maps-rest.atlas.service.Models.Style
  - uid: azure-maps-rest.atlas.service.Models.Avoid
    name: Avoid
    spec.typeScript:
      - name: Avoid
        fullName: Avoid
        uid: azure-maps-rest.atlas.service.Models.Avoid
  - uid: azure-maps-rest.atlas.service.Models.ComputeTravelTimeFor
    name: ComputeTravelTimeFor
    spec.typeScript:
      - name: ComputeTravelTimeFor
        fullName: ComputeTravelTimeFor
        uid: azure-maps-rest.atlas.service.Models.ComputeTravelTimeFor
  - uid: azure-maps-rest.atlas.service.Models.Hilliness
    name: Hilliness
    spec.typeScript:
      - name: Hilliness
        fullName: Hilliness
        uid: azure-maps-rest.atlas.service.Models.Hilliness
  - uid: azure-maps-rest.atlas.service.Models.RouteType
    name: RouteType
    spec.typeScript:
      - name: RouteType
        fullName: RouteType
        uid: azure-maps-rest.atlas.service.Models.RouteType
  - uid: azure-maps-rest.atlas.service.Models.SectionType
    name: SectionType
    spec.typeScript:
      - name: SectionType
        fullName: SectionType
        uid: azure-maps-rest.atlas.service.Models.SectionType
  - uid: azure-maps-rest.atlas.service.Models.TravelMode
    name: TravelMode
    spec.typeScript:
      - name: TravelMode
        fullName: TravelMode
        uid: azure-maps-rest.atlas.service.Models.TravelMode
  - uid: azure-maps-rest.atlas.service.Models.VehicleLoadType
    name: VehicleLoadType
    spec.typeScript:
      - name: VehicleLoadType
        fullName: VehicleLoadType
        uid: azure-maps-rest.atlas.service.Models.VehicleLoadType
  - uid: azure-maps-rest.atlas.service.Models.Windingness
    name: Windingness
    spec.typeScript:
      - name: Windingness
        fullName: Windingness
        uid: azure-maps-rest.atlas.service.Models.Windingness
  - uid: azure-maps-rest.atlas.service.Models.MultiPolygon
    name: MultiPolygon
    spec.typeScript:
      - name: MultiPolygon
        fullName: MultiPolygon
        uid: azure-maps-rest.atlas.service.Models.MultiPolygon
  - uid: >-
      azure-maps-rest.atlas.service.Models.RouteDirectionsRequestBodySupportingPoints
    name: RouteDirectionsRequestBodySupportingPoints
    spec.typeScript:
      - name: RouteDirectionsRequestBodySupportingPoints
        fullName: RouteDirectionsRequestBodySupportingPoints
        uid: >-
          azure-maps-rest.atlas.service.Models.RouteDirectionsRequestBodySupportingPoints
  - uid: azure-maps-rest.atlas.service.Models.GeoJSONGeometryCollection
    name: GeoJSONGeometryCollection
    spec.typeScript:
      - name: GeoJSONGeometryCollection
        fullName: GeoJSONGeometryCollection
        uid: azure-maps-rest.atlas.service.Models.GeoJSONGeometryCollection
  - uid: 'azure-maps-rest.atlas.service.Models.RouteOptimizedWaypoint[]'
    name: 'RouteOptimizedWaypoint[]'
    spec.typeScript:
      - name: RouteOptimizedWaypoint
        fullName: RouteOptimizedWaypoint
        uid: azure-maps-rest.atlas.service.Models.RouteOptimizedWaypoint
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.atlas.service.Models.RouteResponseReport
    name: RouteResponseReport
    spec.typeScript:
      - name: RouteResponseReport
        fullName: RouteResponseReport
        uid: azure-maps-rest.atlas.service.Models.RouteResponseReport
  - uid: 'azure-maps-rest.atlas.service.Models.RouteDirectionsResult[]'
    name: 'RouteDirectionsResult[]'
    spec.typeScript:
      - name: RouteDirectionsResult
        fullName: RouteDirectionsResult
        uid: azure-maps-rest.atlas.service.Models.RouteDirectionsResult
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.atlas.service.Models.RouteResultGuidance
    name: RouteResultGuidance
    spec.typeScript:
      - name: RouteResultGuidance
        fullName: RouteResultGuidance
        uid: azure-maps-rest.atlas.service.Models.RouteResultGuidance
  - uid: 'azure-maps-rest.atlas.service.Models.RouteResultLeg[]'
    name: 'RouteResultLeg[]'
    spec.typeScript:
      - name: RouteResultLeg
        fullName: RouteResultLeg
        uid: azure-maps-rest.atlas.service.Models.RouteResultLeg
      - name: '[]'
        fullName: '[]'
  - uid: 'azure-maps-rest.atlas.service.Models.RouteResultSection[]'
    name: 'RouteResultSection[]'
    spec.typeScript:
      - name: RouteResultSection
        fullName: RouteResultSection
        uid: azure-maps-rest.atlas.service.Models.RouteResultSection
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.atlas.service.Models.RouteDirectionsSummary
    name: RouteDirectionsSummary
    spec.typeScript:
      - name: RouteDirectionsSummary
        fullName: RouteDirectionsSummary
        uid: azure-maps-rest.atlas.service.Models.RouteDirectionsSummary
  - uid: azure-maps-rest.atlas.service.Models.AlternativeRouteType
    name: AlternativeRouteType
    spec.typeScript:
      - name: AlternativeRouteType
        fullName: AlternativeRouteType
        uid: azure-maps-rest.atlas.service.Models.AlternativeRouteType
  - uid: azure-maps-rest.atlas.service.Models.RouteInstructionsType
    name: RouteInstructionsType
    spec.typeScript:
      - name: RouteInstructionsType
        fullName: RouteInstructionsType
        uid: azure-maps-rest.atlas.service.Models.RouteInstructionsType
  - uid: azure-maps-rest.atlas.service.Models.RouteRepresentation
    name: RouteRepresentation
    spec.typeScript:
      - name: RouteRepresentation
        fullName: RouteRepresentation
        uid: azure-maps-rest.atlas.service.Models.RouteRepresentation
  - uid: azure-maps-rest.atlas.service.Models.VehicleEngineType
    name: VehicleEngineType
    spec.typeScript:
      - name: VehicleEngineType
        fullName: VehicleEngineType
        uid: azure-maps-rest.atlas.service.Models.VehicleEngineType
  - uid: azure-maps-rest.atlas.service.Models.MultiPoint
    name: MultiPoint
    spec.typeScript:
      - name: MultiPoint
        fullName: MultiPoint
        uid: azure-maps-rest.atlas.service.Models.MultiPoint
  - uid: 'azure-maps-rest.atlas.service.Models.RouteMatrixResult[][]'
    name: 'RouteMatrixResult[][]'
    spec.typeScript:
      - name: RouteMatrixResult
        fullName: RouteMatrixResult
        uid: azure-maps-rest.atlas.service.Models.RouteMatrixResult
      - name: '[][]'
        fullName: '[][]'
  - uid: azure-maps-rest.atlas.service.Models.RouteMatrixSummary
    name: RouteMatrixSummary
    spec.typeScript:
      - name: RouteMatrixSummary
        fullName: RouteMatrixSummary
        uid: azure-maps-rest.atlas.service.Models.RouteMatrixSummary
  - uid: azure-maps-rest.atlas.service.Models.RouteMatrixResultResponse
    name: RouteMatrixResultResponse
    spec.typeScript:
      - name: RouteMatrixResultResponse
        fullName: RouteMatrixResultResponse
        uid: azure-maps-rest.atlas.service.Models.RouteMatrixResultResponse
  - uid: azure-maps-rest.atlas.service.Models.RouteResultLegSummary
    name: RouteResultLegSummary
    spec.typeScript:
      - name: RouteResultLegSummary
        fullName: RouteResultLegSummary
        uid: azure-maps-rest.atlas.service.Models.RouteResultLegSummary
  - uid: 'azure-maps-rest.atlas.service.Models.Coordinate[]'
    name: 'Coordinate[]'
    spec.typeScript:
      - name: Coordinate
        fullName: Coordinate
        uid: azure-maps-rest.atlas.service.Models.Coordinate
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.atlas.service.Models.RouteRange
    name: RouteRange
    spec.typeScript:
      - name: RouteRange
        fullName: RouteRange
        uid: azure-maps-rest.atlas.service.Models.RouteRange
  - uid: 'azure-maps-rest.atlas.service.Models.RouteResponseReportEffectiveSetting[]'
    name: 'RouteResponseReportEffectiveSetting[]'
    spec.typeScript:
      - name: RouteResponseReportEffectiveSetting
        fullName: RouteResponseReportEffectiveSetting
        uid: >-
          azure-maps-rest.atlas.service.Models.RouteResponseReportEffectiveSetting
      - name: '[]'
        fullName: '[]'
  - uid: 'azure-maps-rest.atlas.service.Models.RouteResultInstructionGroup[]'
    name: 'RouteResultInstructionGroup[]'
    spec.typeScript:
      - name: RouteResultInstructionGroup
        fullName: RouteResultInstructionGroup
        uid: azure-maps-rest.atlas.service.Models.RouteResultInstructionGroup
      - name: '[]'
        fullName: '[]'
  - uid: 'azure-maps-rest.atlas.service.Models.RouteResultInstruction[]'
    name: 'RouteResultInstruction[]'
    spec.typeScript:
      - name: RouteResultInstruction
        fullName: RouteResultInstruction
        uid: azure-maps-rest.atlas.service.Models.RouteResultInstruction
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.atlas.service.Models.DrivingSide
    name: DrivingSide
    spec.typeScript:
      - name: DrivingSide
        fullName: DrivingSide
        uid: azure-maps-rest.atlas.service.Models.DrivingSide
  - uid: azure-maps-rest.atlas.service.Models.GuidanceInstructionType
    name: GuidanceInstructionType
    spec.typeScript:
      - name: GuidanceInstructionType
        fullName: GuidanceInstructionType
        uid: azure-maps-rest.atlas.service.Models.GuidanceInstructionType
  - uid: azure-maps-rest.atlas.service.Models.GuidanceManeuver
    name: GuidanceManeuver
    spec.typeScript:
      - name: GuidanceManeuver
        fullName: GuidanceManeuver
        uid: azure-maps-rest.atlas.service.Models.GuidanceManeuver
  - uid: azure-maps-rest.atlas.service.Models.MagnitudeOfDelay
    name: MagnitudeOfDelay
    spec.typeScript:
      - name: MagnitudeOfDelay
        fullName: MagnitudeOfDelay
        uid: azure-maps-rest.atlas.service.Models.MagnitudeOfDelay
  - uid: azure-maps-rest.atlas.service.Models.RouteResultSectionTec
    name: RouteResultSectionTec
    spec.typeScript:
      - name: RouteResultSectionTec
        fullName: RouteResultSectionTec
        uid: azure-maps-rest.atlas.service.Models.RouteResultSectionTec
  - uid: 'azure-maps-rest.atlas.service.Models.RouteResultSectionTecCause[]'
    name: 'RouteResultSectionTecCause[]'
    spec.typeScript:
      - name: RouteResultSectionTecCause
        fullName: RouteResultSectionTecCause
        uid: azure-maps-rest.atlas.service.Models.RouteResultSectionTecCause
      - name: '[]'
        fullName: '[]'
  - uid: 'azure-maps-rest.atlas.service.Models.SearchAddressResult[]'
    name: 'SearchAddressResult[]'
    spec.typeScript:
      - name: SearchAddressResult
        fullName: SearchAddressResult
        uid: azure-maps-rest.atlas.service.Models.SearchAddressResult
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.atlas.service.Models.SearchAddressSummary
    name: SearchAddressSummary
    spec.typeScript:
      - name: SearchAddressSummary
        fullName: SearchAddressSummary
        uid: azure-maps-rest.atlas.service.Models.SearchAddressSummary
  - uid: azure-maps-rest.atlas.service.Models.SearchResultAddress
    name: SearchResultAddress
    spec.typeScript:
      - name: SearchResultAddress
        fullName: SearchResultAddress
        uid: azure-maps-rest.atlas.service.Models.SearchResultAddress
  - uid: azure-maps-rest.atlas.service.Models.DataSources
    name: DataSources
    spec.typeScript:
      - name: DataSources
        fullName: DataSources
        uid: azure-maps-rest.atlas.service.Models.DataSources
  - uid: 'azure-maps-rest.atlas.service.Models.SearchResultEntryPoint[]'
    name: 'SearchResultEntryPoint[]'
    spec.typeScript:
      - name: SearchResultEntryPoint
        fullName: SearchResultEntryPoint
        uid: azure-maps-rest.atlas.service.Models.SearchResultEntryPoint
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.atlas.service.Models.CoordinateAbbreviated
    name: CoordinateAbbreviated
    spec.typeScript:
      - name: CoordinateAbbreviated
        fullName: CoordinateAbbreviated
        uid: azure-maps-rest.atlas.service.Models.CoordinateAbbreviated
  - uid: azure-maps-rest.atlas.service.Models.SearchResultViewport
    name: SearchResultViewport
    spec.typeScript:
      - name: SearchResultViewport
        fullName: SearchResultViewport
        uid: azure-maps-rest.atlas.service.Models.SearchResultViewport
  - uid: >-
      azure-maps-rest.atlas.service.Models.SearchAddressReverseCrossStreetResult[]
    name: 'SearchAddressReverseCrossStreetResult[]'
    spec.typeScript:
      - name: SearchAddressReverseCrossStreetResult
        fullName: SearchAddressReverseCrossStreetResult
        uid: >-
          azure-maps-rest.atlas.service.Models.SearchAddressReverseCrossStreetResult
      - name: '[]'
        fullName: '[]'
  - uid: >-
      azure-maps-rest.atlas.service.Models.SearchAddressReverseCrossStreetSummary
    name: SearchAddressReverseCrossStreetSummary
    spec.typeScript:
      - name: SearchAddressReverseCrossStreetSummary
        fullName: SearchAddressReverseCrossStreetSummary
        uid: >-
          azure-maps-rest.atlas.service.Models.SearchAddressReverseCrossStreetSummary
  - uid: 'azure-maps-rest.atlas.service.Models.SearchAddressReverseResult[]'
    name: 'SearchAddressReverseResult[]'
    spec.typeScript:
      - name: SearchAddressReverseResult
        fullName: SearchAddressReverseResult
        uid: azure-maps-rest.atlas.service.Models.SearchAddressReverseResult
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.atlas.service.Models.SearchAddressReverseSummary
    name: SearchAddressReverseSummary
    spec.typeScript:
      - name: SearchAddressReverseSummary
        fullName: SearchAddressReverseSummary
        uid: azure-maps-rest.atlas.service.Models.SearchAddressReverseSummary
  - uid: 'azure-maps-rest.atlas.service.Models.SearchAddressStructuredResult[]'
    name: 'SearchAddressStructuredResult[]'
    spec.typeScript:
      - name: SearchAddressStructuredResult
        fullName: SearchAddressStructuredResult
        uid: azure-maps-rest.atlas.service.Models.SearchAddressStructuredResult
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.atlas.service.Models.SearchAddressStructuredSummary
    name: SearchAddressStructuredSummary
    spec.typeScript:
      - name: SearchAddressStructuredSummary
        fullName: SearchAddressStructuredSummary
        uid: azure-maps-rest.atlas.service.Models.SearchAddressStructuredSummary
  - uid: azure-maps-rest.atlas.service.Models.SearchResultAddressRanges
    name: SearchResultAddressRanges
    spec.typeScript:
      - name: SearchResultAddressRanges
        fullName: SearchResultAddressRanges
        uid: azure-maps-rest.atlas.service.Models.SearchResultAddressRanges
  - uid: azure-maps-rest.atlas.service.Models.SearchSummaryGeoBias
    name: SearchSummaryGeoBias
    spec.typeScript:
      - name: SearchSummaryGeoBias
        fullName: SearchSummaryGeoBias
        uid: azure-maps-rest.atlas.service.Models.SearchSummaryGeoBias
  - uid: 'azure-maps-rest.atlas.service.Models.SearchAlongRouteResult[]'
    name: 'SearchAlongRouteResult[]'
    spec.typeScript:
      - name: SearchAlongRouteResult
        fullName: SearchAlongRouteResult
        uid: azure-maps-rest.atlas.service.Models.SearchAlongRouteResult
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.atlas.service.Models.SearchAlongRouteSummary
    name: SearchAlongRouteSummary
    spec.typeScript:
      - name: SearchAlongRouteSummary
        fullName: SearchAlongRouteSummary
        uid: azure-maps-rest.atlas.service.Models.SearchAlongRouteSummary
  - uid: azure-maps-rest.atlas.service.Models.EntityType
    name: EntityType
    spec.typeScript:
      - name: EntityType
        fullName: EntityType
        uid: azure-maps-rest.atlas.service.Models.EntityType
  - uid: azure-maps-rest.atlas.service.Models.SearchResultPoi
    name: SearchResultPoi
    spec.typeScript:
      - name: SearchResultPoi
        fullName: SearchResultPoi
        uid: azure-maps-rest.atlas.service.Models.SearchResultPoi
  - uid: 'azure-maps-rest.atlas.service.Models.SearchFuzzyResult[]'
    name: 'SearchFuzzyResult[]'
    spec.typeScript:
      - name: SearchFuzzyResult
        fullName: SearchFuzzyResult
        uid: azure-maps-rest.atlas.service.Models.SearchFuzzyResult
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.atlas.service.Models.SearchFuzzySummary
    name: SearchFuzzySummary
    spec.typeScript:
      - name: SearchFuzzySummary
        fullName: SearchFuzzySummary
        uid: azure-maps-rest.atlas.service.Models.SearchFuzzySummary
  - uid: 'azure-maps-rest.atlas.service.Models.SearchGeometryResult[]'
    name: 'SearchGeometryResult[]'
    spec.typeScript:
      - name: SearchGeometryResult
        fullName: SearchGeometryResult
        uid: azure-maps-rest.atlas.service.Models.SearchGeometryResult
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.atlas.service.Models.SearchGeometrySummary
    name: SearchGeometrySummary
    spec.typeScript:
      - name: SearchGeometrySummary
        fullName: SearchGeometrySummary
        uid: azure-maps-rest.atlas.service.Models.SearchGeometrySummary
  - uid: 'azure-maps-rest.atlas.service.Models.ConnectorSet[]'
    name: 'ConnectorSet[]'
    spec.typeScript:
      - name: ConnectorSet
        fullName: ConnectorSet
        uid: azure-maps-rest.atlas.service.Models.ConnectorSet
      - name: '[]'
        fullName: '[]'
  - uid: 'azure-maps-rest.atlas.service.Models.SearchIndexSet[]'
    name: 'SearchIndexSet[]'
    spec.typeScript:
      - name: SearchIndexSet
        fullName: SearchIndexSet
        uid: azure-maps-rest.atlas.service.Models.SearchIndexSet
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.atlas.service.Models.OpeningHours
    name: OpeningHours
    spec.typeScript:
      - name: OpeningHours
        fullName: OpeningHours
        uid: azure-maps-rest.atlas.service.Models.OpeningHours
  - uid: 'azure-maps-rest.atlas.service.Models.SearchNearbyResult[]'
    name: 'SearchNearbyResult[]'
    spec.typeScript:
      - name: SearchNearbyResult
        fullName: SearchNearbyResult
        uid: azure-maps-rest.atlas.service.Models.SearchNearbyResult
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.atlas.service.Models.SearchNearbySummary
    name: SearchNearbySummary
    spec.typeScript:
      - name: SearchNearbySummary
        fullName: SearchNearbySummary
        uid: azure-maps-rest.atlas.service.Models.SearchNearbySummary
  - uid: 'azure-maps-rest.atlas.service.Models.SearchPoiCategoryResult[]'
    name: 'SearchPoiCategoryResult[]'
    spec.typeScript:
      - name: SearchPoiCategoryResult
        fullName: SearchPoiCategoryResult
        uid: azure-maps-rest.atlas.service.Models.SearchPoiCategoryResult
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.atlas.service.Models.SearchPoiCategorySummary
    name: SearchPoiCategorySummary
    spec.typeScript:
      - name: SearchPoiCategorySummary
        fullName: SearchPoiCategorySummary
        uid: azure-maps-rest.atlas.service.Models.SearchPoiCategorySummary
  - uid: 'azure-maps-rest.atlas.service.Models.SearchPoiResult[]'
    name: 'SearchPoiResult[]'
    spec.typeScript:
      - name: SearchPoiResult
        fullName: SearchPoiResult
        uid: azure-maps-rest.atlas.service.Models.SearchPoiResult
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.atlas.service.Models.SearchPoiSummary
    name: SearchPoiSummary
    spec.typeScript:
      - name: SearchPoiSummary
        fullName: SearchPoiSummary
        uid: azure-maps-rest.atlas.service.Models.SearchPoiSummary
  - uid: 'azure-maps-rest.atlas.service.Models.SearchPolygonResult[]'
    name: 'SearchPolygonResult[]'
    spec.typeScript:
      - name: SearchPolygonResult
        fullName: SearchPolygonResult
        uid: azure-maps-rest.atlas.service.Models.SearchPolygonResult
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.atlas.service.Models.Type
    name: Type
    spec.typeScript:
      - name: Type
        fullName: Type
        uid: azure-maps-rest.atlas.service.Models.Type
  - uid: 'azure-maps-rest.atlas.service.Models.SearchResultPoiBrand[]'
    name: 'SearchResultPoiBrand[]'
    spec.typeScript:
      - name: SearchResultPoiBrand
        fullName: SearchResultPoiBrand
        uid: azure-maps-rest.atlas.service.Models.SearchResultPoiBrand
      - name: '[]'
        fullName: '[]'
  - uid: 'azure-maps-rest.atlas.service.Models.SearchResultPoiClassification[]'
    name: 'SearchResultPoiClassification[]'
    spec.typeScript:
      - name: SearchResultPoiClassification
        fullName: SearchResultPoiClassification
        uid: azure-maps-rest.atlas.service.Models.SearchResultPoiClassification
      - name: '[]'
        fullName: '[]'
  - uid: 'azure-maps-rest.atlas.service.Models.SearchResultPoiClassificationName[]'
    name: 'SearchResultPoiClassificationName[]'
    spec.typeScript:
      - name: SearchResultPoiClassificationName
        fullName: SearchResultPoiClassificationName
        uid: azure-maps-rest.atlas.service.Models.SearchResultPoiClassificationName
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.atlas.service.Models.GeofenceMode
    name: GeofenceMode
    spec.typeScript:
      - name: GeofenceMode
        fullName: GeofenceMode
        uid: azure-maps-rest.atlas.service.Models.GeofenceMode
  - uid: azure-maps-rest.atlas.service.Models.Direction
    name: Direction
    spec.typeScript:
      - name: Direction
        fullName: Direction
        uid: azure-maps-rest.atlas.service.Models.Direction
  - uid: 'azure-maps-rest.atlas.service.Models.Country[]'
    name: 'Country[]'
    spec.typeScript:
      - name: Country
        fullName: Country
        uid: azure-maps-rest.atlas.service.Models.Country
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.atlas.service.Models.Names
    name: Names
    spec.typeScript:
      - name: Names
        fullName: Names
        uid: azure-maps-rest.atlas.service.Models.Names
  - uid: azure-maps-rest.atlas.service.Models.ReferenceTimeByCoordinates
    name: ReferenceTimeByCoordinates
    spec.typeScript:
      - name: ReferenceTimeByCoordinates
        fullName: ReferenceTimeByCoordinates
        uid: azure-maps-rest.atlas.service.Models.ReferenceTimeByCoordinates
  - uid: azure-maps-rest.atlas.service.Models.RepresentativePoint
    name: RepresentativePoint
    spec.typeScript:
      - name: RepresentativePoint
        fullName: RepresentativePoint
        uid: azure-maps-rest.atlas.service.Models.RepresentativePoint
  - uid: 'azure-maps-rest.atlas.service.Models.TimeTransition[]'
    name: 'TimeTransition[]'
    spec.typeScript:
      - name: TimeTransition
        fullName: TimeTransition
        uid: azure-maps-rest.atlas.service.Models.TimeTransition
      - name: '[]'
        fullName: '[]'
  - uid: 'azure-maps-rest.atlas.service.Models.TimeZoneByCoordinates[]'
    name: 'TimeZoneByCoordinates[]'
    spec.typeScript:
      - name: TimeZoneByCoordinates
        fullName: TimeZoneByCoordinates
        uid: azure-maps-rest.atlas.service.Models.TimeZoneByCoordinates
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.atlas.service.Models.ReferenceTimeById
    name: ReferenceTimeById
    spec.typeScript:
      - name: ReferenceTimeById
        fullName: ReferenceTimeById
        uid: azure-maps-rest.atlas.service.Models.ReferenceTimeById
  - uid: 'azure-maps-rest.atlas.service.Models.TimezoneById[]'
    name: 'TimezoneById[]'
    spec.typeScript:
      - name: TimezoneById
        fullName: TimezoneById
        uid: azure-maps-rest.atlas.service.Models.TimezoneById
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.atlas.service.Models.TimezoneOptions
    name: TimezoneOptions
    spec.typeScript:
      - name: TimezoneOptions
        fullName: TimezoneOptions
        uid: azure-maps-rest.atlas.service.Models.TimezoneOptions
  - uid: 'azure-maps-rest.atlas.service.Models.Leg[]'
    name: 'Leg[]'
    spec.typeScript:
      - name: Leg
        fullName: Leg
        uid: azure-maps-rest.atlas.service.Models.Leg
      - name: '[]'
        fullName: '[]'
  - uid: 'azure-maps-rest.atlas.service.Models.Line[]'
    name: 'Line[]'
    spec.typeScript:
      - name: Line
        fullName: Line
        uid: azure-maps-rest.atlas.service.Models.Line
      - name: '[]'
        fullName: '[]'
  - uid: 'azure-maps-rest.atlas.service.Models.Pattern[]'
    name: 'Pattern[]'
    spec.typeScript:
      - name: Pattern
        fullName: Pattern
        uid: azure-maps-rest.atlas.service.Models.Pattern
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.atlas.service.Models.LineArrival
    name: LineArrival
    spec.typeScript:
      - name: LineArrival
        fullName: LineArrival
        uid: azure-maps-rest.atlas.service.Models.LineArrival
  - uid: 'azure-maps-rest.atlas.service.Models.ItineraryResult[]'
    name: 'ItineraryResult[]'
    spec.typeScript:
      - name: ItineraryResult
        fullName: ItineraryResult
        uid: azure-maps-rest.atlas.service.Models.ItineraryResult
      - name: '[]'
        fullName: '[]'
  - uid: 'azure-maps-rest.atlas.service.Models.LineGroup[]'
    name: 'LineGroup[]'
    spec.typeScript:
      - name: LineGroup
        fullName: LineGroup
        uid: azure-maps-rest.atlas.service.Models.LineGroup
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.atlas.service.Aborter
    name: Aborter
    spec.typeScript:
      - name: Aborter
        fullName: Aborter
        uid: azure-maps-rest.atlas.service.Aborter
  - uid: azure-maps-rest.atlas.service.IRequestLogOptions
    name: IRequestLogOptions
    spec.typeScript:
      - name: IRequestLogOptions
        fullName: IRequestLogOptions
        uid: azure-maps-rest.atlas.service.IRequestLogOptions
  - uid: azure-maps-rest.atlas.service.Credential
    name: Credential
    spec.typeScript:
      - name: Credential
        fullName: Credential
        uid: azure-maps-rest.atlas.service.Credential
  - uid: azure-maps-rest.atlas.Map
    name: Map
    spec.typeScript:
      - name: Map
        fullName: Map
        uid: azure-maps-rest.atlas.Map
  - uid: azure-maps-rest.atlas.service.MapControlCredentialPolicy
    name: MapControlCredentialPolicy
    spec.typeScript:
      - name: MapControlCredentialPolicy
        fullName: MapControlCredentialPolicy
        uid: azure-maps-rest.atlas.service.MapControlCredentialPolicy
  - uid: azure-maps-rest.atlas.service.CredentialPolicy
    name: CredentialPolicy
    spec.typeScript:
      - name: CredentialPolicy
        fullName: CredentialPolicy
        uid: azure-maps-rest.atlas.service.CredentialPolicy
  - uid: azure-maps-rest.atlas.service.INewPipelineOptions
    name: INewPipelineOptions
    spec.typeScript:
      - name: INewPipelineOptions
        fullName: INewPipelineOptions
        uid: azure-maps-rest.atlas.service.INewPipelineOptions
  - uid: azure-maps-rest.atlas.service.Pipeline
    name: Pipeline
    spec.typeScript:
      - name: Pipeline
        fullName: Pipeline
        uid: azure-maps-rest.atlas.service.Pipeline
  - uid: azure-maps-rest.atlas.service.MapsURL
    name: MapsURL
    spec.typeScript:
      - name: MapsURL
        fullName: MapsURL
        uid: azure-maps-rest.atlas.service.MapsURL
  - uid: azure-maps-rest.atlas.service.GetCarShareInfoOptions
    name: GetCarShareInfoOptions
    spec.typeScript:
      - name: GetCarShareInfoOptions
        fullName: GetCarShareInfoOptions
        uid: azure-maps-rest.atlas.service.GetCarShareInfoOptions
  - uid: Promise<azure-maps-rest.atlas.service.GetCarShareInfoResponse>
    name: GetCarShareInfoResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetCarShareInfoResponse
        fullName: GetCarShareInfoResponse
        uid: azure-maps-rest.atlas.service.GetCarShareInfoResponse
      - name: '>'
        fullName: '>'
  - uid: azure-maps-rest.atlas.service.GetMetroAreaOptions
    name: GetMetroAreaOptions
    spec.typeScript:
      - name: GetMetroAreaOptions
        fullName: GetMetroAreaOptions
        uid: azure-maps-rest.atlas.service.GetMetroAreaOptions
  - uid: Promise<azure-maps-rest.atlas.service.GetMetroAreaResponse>
    name: GetMetroAreaResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetMetroAreaResponse
        fullName: GetMetroAreaResponse
        uid: azure-maps-rest.atlas.service.GetMetroAreaResponse
      - name: '>'
        fullName: '>'
  - uid: 'azure-maps-rest.atlas.service.Models.MetroAreaDetailType[]'
    name: 'MetroAreaDetailType[]'
    spec.typeScript:
      - name: MetroAreaDetailType
        fullName: MetroAreaDetailType
        uid: azure-maps-rest.atlas.service.Models.MetroAreaDetailType
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.atlas.service.GetMetroAreaInfoOptions
    name: GetMetroAreaInfoOptions
    spec.typeScript:
      - name: GetMetroAreaInfoOptions
        fullName: GetMetroAreaInfoOptions
        uid: azure-maps-rest.atlas.service.GetMetroAreaInfoOptions
  - uid: Promise<azure-maps-rest.atlas.service.GetMetroAreaInfoResponse>
    name: GetMetroAreaInfoResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetMetroAreaInfoResponse
        fullName: GetMetroAreaInfoResponse
        uid: azure-maps-rest.atlas.service.GetMetroAreaInfoResponse
      - name: '>'
        fullName: '>'
  - uid: azure-maps-rest.atlas.service.GetNearbyTransitOptions
    name: GetNearbyTransitOptions
    spec.typeScript:
      - name: GetNearbyTransitOptions
        fullName: GetNearbyTransitOptions
        uid: azure-maps-rest.atlas.service.GetNearbyTransitOptions
  - uid: Promise<azure-maps-rest.atlas.service.GetNearbyTransitResponse>
    name: GetNearbyTransitResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetNearbyTransitResponse
        fullName: GetNearbyTransitResponse
        uid: azure-maps-rest.atlas.service.GetNearbyTransitResponse
      - name: '>'
        fullName: '>'
  - uid: azure-maps-rest.atlas.service.GetRealTimeArrivalsOptions
    name: GetRealTimeArrivalsOptions
    spec.typeScript:
      - name: GetRealTimeArrivalsOptions
        fullName: GetRealTimeArrivalsOptions
        uid: azure-maps-rest.atlas.service.GetRealTimeArrivalsOptions
  - uid: Promise<azure-maps-rest.atlas.service.GetRealTimeArrivalsResponse>
    name: GetRealTimeArrivalsResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetRealTimeArrivalsResponse
        fullName: GetRealTimeArrivalsResponse
        uid: azure-maps-rest.atlas.service.GetRealTimeArrivalsResponse
      - name: '>'
        fullName: '>'
  - uid: azure-maps-rest.atlas.service.GetTransitDockInfoOptions
    name: GetTransitDockInfoOptions
    spec.typeScript:
      - name: GetTransitDockInfoOptions
        fullName: GetTransitDockInfoOptions
        uid: azure-maps-rest.atlas.service.GetTransitDockInfoOptions
  - uid: Promise<azure-maps-rest.atlas.service.GetTransitDockInfoResponse>
    name: GetTransitDockInfoResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetTransitDockInfoResponse
        fullName: GetTransitDockInfoResponse
        uid: azure-maps-rest.atlas.service.GetTransitDockInfoResponse
      - name: '>'
        fullName: '>'
  - uid: azure-maps-rest.atlas.service.GetTransitItineraryOptions
    name: GetTransitItineraryOptions
    spec.typeScript:
      - name: GetTransitItineraryOptions
        fullName: GetTransitItineraryOptions
        uid: azure-maps-rest.atlas.service.GetTransitItineraryOptions
  - uid: Promise<azure-maps-rest.atlas.service.GetTransitItineraryResponse>
    name: GetTransitItineraryResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetTransitItineraryResponse
        fullName: GetTransitItineraryResponse
        uid: azure-maps-rest.atlas.service.GetTransitItineraryResponse
      - name: '>'
        fullName: '>'
  - uid: azure-maps-rest.atlas.service.GetTransitLineInfoOptions
    name: GetTransitLineInfoOptions
    spec.typeScript:
      - name: GetTransitLineInfoOptions
        fullName: GetTransitLineInfoOptions
        uid: azure-maps-rest.atlas.service.GetTransitLineInfoOptions
  - uid: Promise<azure-maps-rest.atlas.service.GetTransitLineInfoResponse>
    name: GetTransitLineInfoResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetTransitLineInfoResponse
        fullName: GetTransitLineInfoResponse
        uid: azure-maps-rest.atlas.service.GetTransitLineInfoResponse
      - name: '>'
        fullName: '>'
  - uid: azure-maps-rest.atlas.service.GetTransitRouteOptions
    name: GetTransitRouteOptions
    spec.typeScript:
      - name: GetTransitRouteOptions
        fullName: GetTransitRouteOptions
        uid: azure-maps-rest.atlas.service.GetTransitRouteOptions
  - uid: Promise<azure-maps-rest.atlas.service.GetTransitRouteResponse>
    name: GetTransitRouteResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetTransitRouteResponse
        fullName: GetTransitRouteResponse
        uid: azure-maps-rest.atlas.service.GetTransitRouteResponse
      - name: '>'
        fullName: '>'
  - uid: azure-maps-rest.atlas.service.GetTransitStopInfoOptions
    name: GetTransitStopInfoOptions
    spec.typeScript:
      - name: GetTransitStopInfoOptions
        fullName: GetTransitStopInfoOptions
        uid: azure-maps-rest.atlas.service.GetTransitStopInfoOptions
  - uid: Promise<azure-maps-rest.atlas.service.GetTransitStopInfoResponse>
    name: GetTransitStopInfoResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetTransitStopInfoResponse
        fullName: GetTransitStopInfoResponse
        uid: azure-maps-rest.atlas.service.GetTransitStopInfoResponse
      - name: '>'
        fullName: '>'
  - uid: 'azure-maps-rest.atlas.service.RequestPolicyFactory[]'
    name: 'RequestPolicyFactory[]'
    spec.typeScript:
      - name: RequestPolicyFactory
        fullName: RequestPolicyFactory
        uid: azure-maps-rest.atlas.service.RequestPolicyFactory
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-rest.atlas.service.IPipelineOptions
    name: IPipelineOptions
    spec.typeScript:
      - name: IPipelineOptions
        fullName: IPipelineOptions
        uid: azure-maps-rest.atlas.service.IPipelineOptions
  - uid: azure-maps-rest.atlas.service.GetMapImageOptions
    name: GetMapImageOptions
    spec.typeScript:
      - name: GetMapImageOptions
        fullName: GetMapImageOptions
        uid: azure-maps-rest.atlas.service.GetMapImageOptions
  - uid: Promise<azure-maps-rest.atlas.service.GetMapImageResponse>
    name: GetMapImageResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetMapImageResponse
        fullName: GetMapImageResponse
        uid: azure-maps-rest.atlas.service.GetMapImageResponse
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-maps-rest.atlas.service.GetMapImageryTileResponse>
    name: GetMapImageryTileResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetMapImageryTileResponse
        fullName: GetMapImageryTileResponse
        uid: azure-maps-rest.atlas.service.GetMapImageryTileResponse
      - name: '>'
        fullName: '>'
  - uid: azure-maps-rest.atlas.service.Models.TileFormat
    name: TileFormat
    spec.typeScript:
      - name: TileFormat
        fullName: TileFormat
        uid: azure-maps-rest.atlas.service.Models.TileFormat
  - uid: azure-maps-rest.atlas.service.Models.MapTileLayer
    name: MapTileLayer
    spec.typeScript:
      - name: MapTileLayer
        fullName: MapTileLayer
        uid: azure-maps-rest.atlas.service.Models.MapTileLayer
  - uid: azure-maps-rest.atlas.service.Models.MapTileStyle
    name: MapTileStyle
    spec.typeScript:
      - name: MapTileStyle
        fullName: MapTileStyle
        uid: azure-maps-rest.atlas.service.Models.MapTileStyle
  - uid: azure-maps-rest.atlas.service.GetMapTileOptions
    name: GetMapTileOptions
    spec.typeScript:
      - name: GetMapTileOptions
        fullName: GetMapTileOptions
        uid: azure-maps-rest.atlas.service.GetMapTileOptions
  - uid: Promise<azure-maps-rest.atlas.service.GetMapTileResponse>
    name: GetMapTileResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetMapTileResponse
        fullName: GetMapTileResponse
        uid: azure-maps-rest.atlas.service.GetMapTileResponse
      - name: '>'
        fullName: '>'
  - uid: azure-maps-rest.atlas.service.IRetryOptions
    name: IRetryOptions
    spec.typeScript:
      - name: IRetryOptions
        fullName: IRetryOptions
        uid: azure-maps-rest.atlas.service.IRetryOptions
  - uid: azure-maps-rest.atlas.service.CalculateRouteDirectionsOptions
    name: CalculateRouteDirectionsOptions
    spec.typeScript:
      - name: CalculateRouteDirectionsOptions
        fullName: CalculateRouteDirectionsOptions
        uid: azure-maps-rest.atlas.service.CalculateRouteDirectionsOptions
  - uid: Promise<azure-maps-rest.atlas.service.CalculateRouteDirectionsResponse>
    name: CalculateRouteDirectionsResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: CalculateRouteDirectionsResponse
        fullName: CalculateRouteDirectionsResponse
        uid: azure-maps-rest.atlas.service.CalculateRouteDirectionsResponse
      - name: '>'
        fullName: '>'
  - uid: azure-maps-rest.atlas.service.CalculateRouteMatrixRequestBody
    name: CalculateRouteMatrixRequestBody
    spec.typeScript:
      - name: CalculateRouteMatrixRequestBody
        fullName: CalculateRouteMatrixRequestBody
        uid: azure-maps-rest.atlas.service.CalculateRouteMatrixRequestBody
  - uid: azure-maps-rest.atlas.service.CalculateRouteMatrixOptions
    name: CalculateRouteMatrixOptions
    spec.typeScript:
      - name: CalculateRouteMatrixOptions
        fullName: CalculateRouteMatrixOptions
        uid: azure-maps-rest.atlas.service.CalculateRouteMatrixOptions
  - uid: Promise<azure-maps-rest.atlas.service.CalculateRouteMatrixResponse>
    name: CalculateRouteMatrixResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: CalculateRouteMatrixResponse
        fullName: CalculateRouteMatrixResponse
        uid: azure-maps-rest.atlas.service.CalculateRouteMatrixResponse
      - name: '>'
        fullName: '>'
  - uid: azure-maps-rest.atlas.service.CalculateRouteRangeOptions
    name: CalculateRouteRangeOptions
    spec.typeScript:
      - name: CalculateRouteRangeOptions
        fullName: CalculateRouteRangeOptions
        uid: azure-maps-rest.atlas.service.CalculateRouteRangeOptions
  - uid: Promise<azure-maps-rest.atlas.service.CalculateRouteRangeResponse>
    name: CalculateRouteRangeResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: CalculateRouteRangeResponse
        fullName: CalculateRouteRangeResponse
        uid: azure-maps-rest.atlas.service.CalculateRouteRangeResponse
      - name: '>'
        fullName: '>'
  - uid: azure-maps-rest.atlas.service.SearchAddressOptions
    name: SearchAddressOptions
    spec.typeScript:
      - name: SearchAddressOptions
        fullName: SearchAddressOptions
        uid: azure-maps-rest.atlas.service.SearchAddressOptions
  - uid: Promise<azure-maps-rest.atlas.service.SearchAddressResponse>
    name: SearchAddressResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SearchAddressResponse
        fullName: SearchAddressResponse
        uid: azure-maps-rest.atlas.service.SearchAddressResponse
      - name: '>'
        fullName: '>'
  - uid: azure-maps-rest.atlas.service.SearchAddressReverseOptions
    name: SearchAddressReverseOptions
    spec.typeScript:
      - name: SearchAddressReverseOptions
        fullName: SearchAddressReverseOptions
        uid: azure-maps-rest.atlas.service.SearchAddressReverseOptions
  - uid: Promise<azure-maps-rest.atlas.service.SearchAddressReverseResponse>
    name: SearchAddressReverseResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SearchAddressReverseResponse
        fullName: SearchAddressReverseResponse
        uid: azure-maps-rest.atlas.service.SearchAddressReverseResponse
      - name: '>'
        fullName: '>'
  - uid: azure-maps-rest.atlas.service.SearchAddressReverseCrossStreetOptions
    name: SearchAddressReverseCrossStreetOptions
    spec.typeScript:
      - name: SearchAddressReverseCrossStreetOptions
        fullName: SearchAddressReverseCrossStreetOptions
        uid: azure-maps-rest.atlas.service.SearchAddressReverseCrossStreetOptions
  - uid: >-
      Promise<azure-maps-rest.atlas.service.SearchAddressReverseCrossStreetResponse>
    name: SearchAddressReverseCrossStreetResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SearchAddressReverseCrossStreetResponse
        fullName: SearchAddressReverseCrossStreetResponse
        uid: azure-maps-rest.atlas.service.SearchAddressReverseCrossStreetResponse
      - name: '>'
        fullName: '>'
  - uid: azure-maps-rest.atlas.service.SearchAddressStructuredOptions
    name: SearchAddressStructuredOptions
    spec.typeScript:
      - name: SearchAddressStructuredOptions
        fullName: SearchAddressStructuredOptions
        uid: azure-maps-rest.atlas.service.SearchAddressStructuredOptions
  - uid: Promise<azure-maps-rest.atlas.service.SearchAddressStructuredResponse>
    name: SearchAddressStructuredResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SearchAddressStructuredResponse
        fullName: SearchAddressStructuredResponse
        uid: azure-maps-rest.atlas.service.SearchAddressStructuredResponse
      - name: '>'
        fullName: '>'
  - uid: azure-maps-rest.atlas.service.Models.SearchAlongRouteRequestBody
    name: SearchAlongRouteRequestBody
    spec.typeScript:
      - name: SearchAlongRouteRequestBody
        fullName: SearchAlongRouteRequestBody
        uid: azure-maps-rest.atlas.service.Models.SearchAlongRouteRequestBody
  - uid: azure-maps-rest.atlas.service.SearchAlongRouteOptions
    name: SearchAlongRouteOptions
    spec.typeScript:
      - name: SearchAlongRouteOptions
        fullName: SearchAlongRouteOptions
        uid: azure-maps-rest.atlas.service.SearchAlongRouteOptions
  - uid: Promise<azure-maps-rest.atlas.service.SearchAlongRouteResponse>
    name: SearchAlongRouteResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SearchAlongRouteResponse
        fullName: SearchAlongRouteResponse
        uid: azure-maps-rest.atlas.service.SearchAlongRouteResponse
      - name: '>'
        fullName: '>'
  - uid: azure-maps-rest.atlas.service.SearchFuzzyOptions
    name: SearchFuzzyOptions
    spec.typeScript:
      - name: SearchFuzzyOptions
        fullName: SearchFuzzyOptions
        uid: azure-maps-rest.atlas.service.SearchFuzzyOptions
  - uid: Promise<azure-maps-rest.atlas.service.SearchFuzzyResponse>
    name: SearchFuzzyResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SearchFuzzyResponse
        fullName: SearchFuzzyResponse
        uid: azure-maps-rest.atlas.service.SearchFuzzyResponse
      - name: '>'
        fullName: '>'
  - uid: azure-maps-rest.atlas.service.Models.SearchInsideGeometryRequestBody
    name: SearchInsideGeometryRequestBody
    spec.typeScript:
      - name: SearchInsideGeometryRequestBody
        fullName: SearchInsideGeometryRequestBody
        uid: azure-maps-rest.atlas.service.Models.SearchInsideGeometryRequestBody
  - uid: azure-maps-rest.atlas.service.SearchInsideGeometryOptions
    name: SearchInsideGeometryOptions
    spec.typeScript:
      - name: SearchInsideGeometryOptions
        fullName: SearchInsideGeometryOptions
        uid: azure-maps-rest.atlas.service.SearchInsideGeometryOptions
  - uid: Promise<azure-maps-rest.atlas.service.SearchInsideGeometryResponse>
    name: SearchInsideGeometryResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SearchInsideGeometryResponse
        fullName: SearchInsideGeometryResponse
        uid: azure-maps-rest.atlas.service.SearchInsideGeometryResponse
      - name: '>'
        fullName: '>'
  - uid: azure-maps-rest.atlas.service.SearchNearbyOptions
    name: SearchNearbyOptions
    spec.typeScript:
      - name: SearchNearbyOptions
        fullName: SearchNearbyOptions
        uid: azure-maps-rest.atlas.service.SearchNearbyOptions
  - uid: Promise<azure-maps-rest.atlas.service.SearchNearbyResponse>
    name: SearchNearbyResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SearchNearbyResponse
        fullName: SearchNearbyResponse
        uid: azure-maps-rest.atlas.service.SearchNearbyResponse
      - name: '>'
        fullName: '>'
  - uid: azure-maps-rest.atlas.service.SearchPOIOptions
    name: SearchPOIOptions
    spec.typeScript:
      - name: SearchPOIOptions
        fullName: SearchPOIOptions
        uid: azure-maps-rest.atlas.service.SearchPOIOptions
  - uid: Promise<azure-maps-rest.atlas.service.SearchPOIResponse>
    name: SearchPOIResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SearchPOIResponse
        fullName: SearchPOIResponse
        uid: azure-maps-rest.atlas.service.SearchPOIResponse
      - name: '>'
        fullName: '>'
  - uid: azure-maps-rest.atlas.service.SearchPOICategoryOptions
    name: SearchPOICategoryOptions
    spec.typeScript:
      - name: SearchPOICategoryOptions
        fullName: SearchPOICategoryOptions
        uid: azure-maps-rest.atlas.service.SearchPOICategoryOptions
  - uid: Promise<azure-maps-rest.atlas.service.SearchPOICategoryResponse>
    name: SearchPOICategoryResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SearchPOICategoryResponse
        fullName: SearchPOICategoryResponse
        uid: azure-maps-rest.atlas.service.SearchPOICategoryResponse
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-maps-rest.atlas.service.SearchPolygonResponse>
    name: SearchPolygonResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SearchPolygonResponse
        fullName: SearchPolygonResponse
        uid: azure-maps-rest.atlas.service.SearchPolygonResponse
      - name: '>'
        fullName: '>'
  - uid: string | azure-maps-rest.atlas.service.SpatialFeatureCollection
    name: SpatialFeatureCollection
    spec.typeScript:
      - name: 'string | '
        fullName: 'string | '
      - name: SpatialFeatureCollection
        fullName: SpatialFeatureCollection
        uid: azure-maps-rest.atlas.service.SpatialFeatureCollection
  - uid: Promise<azure-maps-rest.atlas.service.GetBufferResponse>
    name: GetBufferResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetBufferResponse
        fullName: GetBufferResponse
        uid: azure-maps-rest.atlas.service.GetBufferResponse
      - name: '>'
        fullName: '>'
  - uid: azure-maps-rest.atlas.service.GetClosestPointOptions
    name: GetClosestPointOptions
    spec.typeScript:
      - name: GetClosestPointOptions
        fullName: GetClosestPointOptions
        uid: azure-maps-rest.atlas.service.GetClosestPointOptions
  - uid: Promise<azure-maps-rest.atlas.service.GetClosesPointResponse>
    name: GetClosesPointResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetClosesPointResponse
        fullName: GetClosesPointResponse
        uid: azure-maps-rest.atlas.service.GetClosesPointResponse
      - name: '>'
        fullName: '>'
  - uid: azure-maps-rest.atlas.service.GetGeofenceOptions
    name: GetGeofenceOptions
    spec.typeScript:
      - name: GetGeofenceOptions
        fullName: GetGeofenceOptions
        uid: azure-maps-rest.atlas.service.GetGeofenceOptions
  - uid: Promise<azure-maps-rest.atlas.service.GetGeofenceResponse>
    name: GetGeofenceResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetGeofenceResponse
        fullName: GetGeofenceResponse
        uid: azure-maps-rest.atlas.service.GetGeofenceResponse
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-maps-rest.atlas.service.GetGreatCircleDistance>
    name: GetGreatCircleDistance>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetGreatCircleDistance
        fullName: GetGreatCircleDistance
        uid: azure-maps-rest.atlas.service.GetGreatCircleDistance
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-maps-rest.atlas.service.GetPointInPolygonResponse>
    name: GetPointInPolygonResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetPointInPolygonResponse
        fullName: GetPointInPolygonResponse
        uid: azure-maps-rest.atlas.service.GetPointInPolygonResponse
      - name: '>'
        fullName: '>'
  - uid: azure-maps-rest.atlas.service.SubscriptionKeyCredentialPolicy
    name: SubscriptionKeyCredentialPolicy
    spec.typeScript:
      - name: SubscriptionKeyCredentialPolicy
        fullName: SubscriptionKeyCredentialPolicy
        uid: azure-maps-rest.atlas.service.SubscriptionKeyCredentialPolicy
  - uid: azure-maps-rest.atlas.service.GetTimezoneByCoordinatesOptions
    name: GetTimezoneByCoordinatesOptions
    spec.typeScript:
      - name: GetTimezoneByCoordinatesOptions
        fullName: GetTimezoneByCoordinatesOptions
        uid: azure-maps-rest.atlas.service.GetTimezoneByCoordinatesOptions
  - uid: Promise<azure-maps-rest.atlas.service.GetTimezoneByCoordinatesResponse>
    name: GetTimezoneByCoordinatesResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetTimezoneByCoordinatesResponse
        fullName: GetTimezoneByCoordinatesResponse
        uid: azure-maps-rest.atlas.service.GetTimezoneByCoordinatesResponse
      - name: '>'
        fullName: '>'
  - uid: azure-maps-rest.atlas.service.GetTimezoneByIdOptions
    name: GetTimezoneByIdOptions
    spec.typeScript:
      - name: GetTimezoneByIdOptions
        fullName: GetTimezoneByIdOptions
        uid: azure-maps-rest.atlas.service.GetTimezoneByIdOptions
  - uid: Promise<azure-maps-rest.atlas.service.GetTimezoneByIdResponse>
    name: GetTimezoneByIdResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetTimezoneByIdResponse
        fullName: GetTimezoneByIdResponse
        uid: azure-maps-rest.atlas.service.GetTimezoneByIdResponse
      - name: '>'
        fullName: '>'
  - uid: azure-maps-rest.atlas.service.TokenCredentialPolicy
    name: TokenCredentialPolicy
    spec.typeScript:
      - name: TokenCredentialPolicy
        fullName: TokenCredentialPolicy
        uid: azure-maps-rest.atlas.service.TokenCredentialPolicy
  - uid: azure-maps-rest.atlas.service.TokenCredential
    name: TokenCredential
    spec.typeScript:
      - name: TokenCredential
        fullName: TokenCredential
        uid: azure-maps-rest.atlas.service.TokenCredential
  - uid: azure-maps-rest.atlas.service.IHttpClient
    name: IHttpClient
    spec.typeScript:
      - name: IHttpClient
        fullName: IHttpClient
        uid: azure-maps-rest.atlas.service.IHttpClient
  - uid: azure-maps-rest.atlas.service.IHttpPipelineLogger
    name: IHttpPipelineLogger
    spec.typeScript:
      - name: IHttpPipelineLogger
        fullName: IHttpPipelineLogger
        uid: azure-maps-rest.atlas.service.IHttpPipelineLogger
  - uid: azure-maps-rest.atlas.service.RetryPolicyType
    name: RetryPolicyType
    spec.typeScript:
      - name: RetryPolicyType
        fullName: RetryPolicyType
        uid: azure-maps-rest.atlas.service.RetryPolicyType
  - uid: azure-maps-rest.atlas.service.RequestPolicyFactory
    name: RequestPolicyFactory
    spec.typeScript:
      - name: RequestPolicyFactory
        fullName: RequestPolicyFactory
        uid: azure-maps-rest.atlas.service.RequestPolicyFactory
  - uid: azure-maps-rest.atlas.RequestParameters
    name: RequestParameters
    spec.typeScript:
      - name: RequestParameters
        fullName: RequestParameters
        uid: azure-maps-rest.atlas.RequestParameters
  - uid: azure-maps-rest.atlas.AuthenticationManager
    name: AuthenticationManager
    spec.typeScript:
      - name: AuthenticationManager
        fullName: AuthenticationManager
        uid: azure-maps-rest.atlas.AuthenticationManager
