- uid: azure-iot-common
  name: azure-iot-common
  items:
    - uid: azure-iot-common.AuthenticationType
      name: AuthenticationType
      fullName: AuthenticationType
      children:
        - azure-iot-common.AuthenticationType.Token
        - azure-iot-common.AuthenticationType.X509
      langs:
        - typeScript
      type: enum
      summary: >-
        Designate the type of authentication used by an
        `AuthenticationProvider`.
      source:
        path: authentication_provider.ts
        startLine: 9
        remote:
          path: common/core/src\authentication_provider.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.AuthenticationProvider
      name: AuthenticationProvider
      fullName: AuthenticationProvider
      children:
        - azure-iot-common.AuthenticationProvider.type
        - azure-iot-common.AuthenticationProvider.getDeviceCredentials
      langs:
        - typeScript
      type: interface
      summary: >-
        Interface that must be implemented by objects that are used to provide
        credentials to the transports used by the device client

        to authenticate with an Azure IoT hub instance.
      source:
        path: authentication_provider.ts
        startLine: 24
        remote:
          path: common/core/src\authentication_provider.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.TransportConfig
      name: TransportConfig
      fullName: TransportConfig
      children:
        - azure-iot-common.TransportConfig.deviceId
        - azure-iot-common.TransportConfig.host
        - azure-iot-common.TransportConfig.sharedAccessKey
        - azure-iot-common.TransportConfig.sharedAccessKeyName
        - azure-iot-common.TransportConfig.sharedAccessSignature
        - azure-iot-common.TransportConfig.x509
      langs:
        - typeScript
      type: interface
      summary: >-
        Configuration structure used by transports and `AuthenticationProvider`
        objects to store and exchange credentials.
      source:
        path: authorization.ts
        startLine: 46
        remote:
          path: common/core/src\authorization.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.X509
      name: X509
      fullName: X509
      children:
        - azure-iot-common.X509.cert
        - azure-iot-common.X509.key
        - azure-iot-common.X509.passphrase
      langs:
        - typeScript
      type: interface
      summary: >
        Object used to store an X509 certificate and key for transports to use.

        This is passed directly down to the low-level objects used by Node.js to
        connect the TLS socket.

        https://nodejs.org/api/tls.html#tls_tls_connect_options_callback
      source:
        path: authorization.ts
        startLine: 79
        remote:
          path: common/core/src\authorization.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.ConnectionString
      name: ConnectionString
      fullName: ConnectionString
      children:
        - azure-iot-common.ConnectionString.DeviceId
        - azure-iot-common.ConnectionString.GatewayHostName
        - azure-iot-common.ConnectionString.HostName
        - azure-iot-common.ConnectionString.SharedAccessKey
        - azure-iot-common.ConnectionString.SharedAccessKeyName
        - azure-iot-common.ConnectionString.x509
        - azure-iot-common.ConnectionString.parse
      langs:
        - typeScript
      type: class
      summary: >-
        Describes the parameters that enable a device or cloud application to
        connect to an Azure IoT hub.
      source:
        path: connection_string.ts
        startLine: 13
        remote:
          path: common/core/src\connection_string.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.ArgumentError
      name: ArgumentError
      fullName: ArgumentError
      children:
        - azure-iot-common.ArgumentError.constructor
        - azure-iot-common.ArgumentError.Error
      langs:
        - typeScript
      type: class
      summary: Error thrown when an argument is invalid.
      extends:
        name: Error
      source:
        path: errors.ts
        startLine: 12
        remote:
          path: common/core/src\errors.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.ArgumentOutOfRangeError
      name: ArgumentOutOfRangeError
      fullName: ArgumentOutOfRangeError
      children:
        - azure-iot-common.ArgumentOutOfRangeError.constructor
        - azure-iot-common.ArgumentOutOfRangeError.Error
      langs:
        - typeScript
      type: class
      summary: >-
        Error thrown when an argument has a value that is out of the admissible
        range.
      extends:
        name: Error
      source:
        path: errors.ts
        startLine: 26
        remote:
          path: common/core/src\errors.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.BadDeviceResponseError
      name: BadDeviceResponseError
      fullName: BadDeviceResponseError
      children:
        - azure-iot-common.BadDeviceResponseError.constructor
        - azure-iot-common.BadDeviceResponseError.Error
      langs:
        - typeScript
      type: class
      summary: Error thrown when a device sends a bad response to a device method call.
      extends:
        name: Error
      source:
        path: errors.ts
        startLine: 336
        remote:
          path: common/core/src\errors.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.CloudToDeviceDetachedError
      name: CloudToDeviceDetachedError
      fullName: CloudToDeviceDetachedError
      children:
        - azure-iot-common.CloudToDeviceDetachedError.constructor
        - azure-iot-common.CloudToDeviceDetachedError.innerError
        - azure-iot-common.CloudToDeviceDetachedError.Error
      langs:
        - typeScript
      type: class
      summary: >-
        Error thrown when the c2d feature stopped working at the transport
        level, requiring the client to retry starting it.
      extends:
        name: Error
      source:
        path: errors.ts
        startLine: 379
        remote:
          path: common/core/src\errors.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.DeviceAlreadyExistsError
      name: DeviceAlreadyExistsError
      fullName: DeviceAlreadyExistsError
      children:
        - azure-iot-common.DeviceAlreadyExistsError.constructor
        - azure-iot-common.DeviceAlreadyExistsError.Error
      langs:
        - typeScript
      type: class
      summary: >-
        Error thrown when the device id used for device creation already exists
        in the Device Identity Registry.
      extends:
        name: Error
      source:
        path: errors.ts
        startLine: 252
        remote:
          path: common/core/src\errors.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.DeviceMaximumQueueDepthExceededError
      name: DeviceMaximumQueueDepthExceededError
      fullName: DeviceMaximumQueueDepthExceededError
      children:
        - azure-iot-common.DeviceMaximumQueueDepthExceededError.constructor
        - azure-iot-common.DeviceMaximumQueueDepthExceededError.Error
      langs:
        - typeScript
      type: class
      summary: Error thrown when the message queue for a device is full.
      extends:
        name: Error
      source:
        path: errors.ts
        startLine: 40
        remote:
          path: common/core/src\errors.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.DeviceMessageLockLostError
      name: DeviceMessageLockLostError
      fullName: DeviceMessageLockLostError
      children:
        - azure-iot-common.DeviceMessageLockLostError.constructor
        - azure-iot-common.DeviceMessageLockLostError.Error
      langs:
        - typeScript
      type: class
      summary: >-
        Error thrown when settling a message fails because the lock token
        associated with the message is lost.
      extends:
        name: Error
      source:
        path: errors.ts
        startLine: 266
        remote:
          path: common/core/src\errors.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.DeviceMethodsDetachedError
      name: DeviceMethodsDetachedError
      fullName: DeviceMethodsDetachedError
      children:
        - azure-iot-common.DeviceMethodsDetachedError.constructor
        - azure-iot-common.DeviceMethodsDetachedError.innerError
        - azure-iot-common.DeviceMethodsDetachedError.Error
      langs:
        - typeScript
      type: class
      summary: >-
        Error thrown when the device methods feature stopped working at the
        transport level, requiring the client to retry starting it.
      extends:
        name: Error
      source:
        path: errors.ts
        startLine: 394
        remote:
          path: common/core/src\errors.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.DeviceNotFoundError
      name: DeviceNotFoundError
      fullName: DeviceNotFoundError
      children:
        - azure-iot-common.DeviceNotFoundError.constructor
        - azure-iot-common.DeviceNotFoundError.Error
      langs:
        - typeScript
      type: class
      summary: >-
        Error thrown when a device cannot be found in the IoT Hub instance
        registry.
      extends:
        name: Error
      source:
        path: errors.ts
        startLine: 54
        remote:
          path: common/core/src\errors.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.DeviceRegistrationFailedError
      name: DeviceRegistrationFailedError
      fullName: DeviceRegistrationFailedError
      children:
        - azure-iot-common.DeviceRegistrationFailedError.constructor
        - azure-iot-common.DeviceRegistrationFailedError.Error
      langs:
        - typeScript
      type: class
      summary: Error thrown when a DPS registration operation fails
      extends:
        name: Error
      source:
        path: errors.ts
        startLine: 438
        remote:
          path: common/core/src\errors.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.DeviceTimeoutError
      name: DeviceTimeoutError
      fullName: DeviceTimeoutError
      children:
        - azure-iot-common.DeviceTimeoutError.constructor
        - azure-iot-common.DeviceTimeoutError.Error
      langs:
        - typeScript
      type: class
      summary: Error thrown when the device doesn't process the method call in time.
      extends:
        name: Error
      source:
        path: errors.ts
        startLine: 365
        remote:
          path: common/core/src\errors.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.FormatError
      name: FormatError
      fullName: FormatError
      children:
        - azure-iot-common.FormatError.constructor
        - azure-iot-common.FormatError.Error
      langs:
        - typeScript
      type: class
      summary: >-
        Error thrown when a string that is supposed to have a specific
        formatting is not formatted properly.
      extends:
        name: Error
      source:
        path: errors.ts
        startLine: 68
        remote:
          path: common/core/src\errors.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.GatewayTimeoutError
      name: GatewayTimeoutError
      fullName: GatewayTimeoutError
      children:
        - azure-iot-common.GatewayTimeoutError.constructor
        - azure-iot-common.GatewayTimeoutError.Error
      langs:
        - typeScript
      type: class
      summary: >-
        Error thrown when the IoT Hub instance doesn't process the device method
        call in time.
      extends:
        name: Error
      source:
        path: errors.ts
        startLine: 351
        remote:
          path: common/core/src\errors.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.InternalServerError
      name: InternalServerError
      fullName: InternalServerError
      children:
        - azure-iot-common.InternalServerError.constructor
        - azure-iot-common.InternalServerError.Error
      langs:
        - typeScript
      type: class
      summary: >-
        Error thrown when an internal server error occured. You may have found a
        bug?
      extends:
        name: Error
      source:
        path: errors.ts
        startLine: 153
        remote:
          path: common/core/src\errors.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.InvalidEtagError
      name: InvalidEtagError
      fullName: InvalidEtagError
      children:
        - azure-iot-common.InvalidEtagError.constructor
        - azure-iot-common.InvalidEtagError.Error
      langs:
        - typeScript
      type: class
      summary: >-
        Error thrown when the eTag specified is incorrectly formatted or out of
        date.
      extends:
        name: Error
      source:
        path: errors.ts
        startLine: 280
        remote:
          path: common/core/src\errors.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.InvalidOperationError
      name: InvalidOperationError
      fullName: InvalidOperationError
      children:
        - azure-iot-common.InvalidOperationError.constructor
        - azure-iot-common.InvalidOperationError.Error
      langs:
        - typeScript
      type: class
      summary: Error thrown when an operation is attempted but is not allowed.
      extends:
        name: Error
      source:
        path: errors.ts
        startLine: 294
        remote:
          path: common/core/src\errors.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.IoTHubSuspendedError
      name: IoTHubSuspendedError
      fullName: IoTHubSuspendedError
      children:
        - azure-iot-common.IoTHubSuspendedError.constructor
        - azure-iot-common.IoTHubSuspendedError.Error
      langs:
        - typeScript
      type: class
      summary: Error thrown when IoT Hub has been suspended.
      extends:
        name: Error
      source:
        path: errors.ts
        startLine: 195
        remote:
          path: common/core/src\errors.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.IotHubNotFoundError
      name: IotHubNotFoundError
      fullName: IotHubNotFoundError
      children:
        - azure-iot-common.IotHubNotFoundError.constructor
        - azure-iot-common.IotHubNotFoundError.Error
      langs:
        - typeScript
      type: class
      summary: Error thrown when the Azure IoT hub was not found.
      extends:
        name: Error
      source:
        path: errors.ts
        startLine: 181
        remote:
          path: common/core/src\errors.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.IotHubQuotaExceededError
      name: IotHubQuotaExceededError
      fullName: IotHubQuotaExceededError
      children:
        - azure-iot-common.IotHubQuotaExceededError.constructor
        - azure-iot-common.IotHubQuotaExceededError.Error
      langs:
        - typeScript
      type: class
      summary: >-
        Error thrown the the Azure IoT hub quota has been exceeded. Quotas are
        reset periodically, this operation will have to wait until then.

        To learn more about quotas, see [Azure IoT Hub quotas and
        throttling](https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-quotas-throttling)
      extends:
        name: Error
      source:
        path: errors.ts
        startLine: 125
        remote:
          path: common/core/src\errors.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.JobNotFoundError
      name: JobNotFoundError
      fullName: JobNotFoundError
      children:
        - azure-iot-common.JobNotFoundError.constructor
        - azure-iot-common.JobNotFoundError.Error
      langs:
        - typeScript
      type: class
      summary: Error thrown when the job with the specified identifier was not found.
      extends:
        name: Error
      source:
        path: errors.ts
        startLine: 209
        remote:
          path: common/core/src\errors.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.MessageTooLargeError
      name: MessageTooLargeError
      fullName: MessageTooLargeError
      children:
        - azure-iot-common.MessageTooLargeError.constructor
        - azure-iot-common.MessageTooLargeError.Error
      langs:
        - typeScript
      type: class
      summary: >-
        Error thrown when the message sent is too large: the maximum size is
        256Kb.
      extends:
        name: Error
      source:
        path: errors.ts
        startLine: 139
        remote:
          path: common/core/src\errors.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.NotConnectedError
      name: NotConnectedError
      fullName: NotConnectedError
      children:
        - azure-iot-common.NotConnectedError.constructor
        - azure-iot-common.NotConnectedError.Error
      langs:
        - typeScript
      type: class
      summary: >-
        Error thrown when the device is disconnected and the operation cannot be
        completed.
      extends:
        name: Error
      source:
        path: errors.ts
        startLine: 110
        remote:
          path: common/core/src\errors.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.NotImplementedError
      name: NotImplementedError
      fullName: NotImplementedError
      children:
        - azure-iot-common.NotImplementedError.constructor
        - azure-iot-common.NotImplementedError.Error
      langs:
        - typeScript
      type: class
      summary: >-
        Error thrown when a feature is not implemented yet but the placeholder
        is present.
      extends:
        name: Error
      source:
        path: errors.ts
        startLine: 96
        remote:
          path: common/core/src\errors.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.OperationCancelledError
      name: OperationCancelledError
      fullName: OperationCancelledError
      children:
        - azure-iot-common.OperationCancelledError.constructor
        - azure-iot-common.OperationCancelledError.Error
      langs:
        - typeScript
      type: class
      summary: Error thrown when any operation (local or remote) is cancelled
      extends:
        name: Error
      source:
        path: errors.ts
        startLine: 424
        remote:
          path: common/core/src\errors.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.PreconditionFailedError
      name: PreconditionFailedError
      fullName: PreconditionFailedError
      children:
        - azure-iot-common.PreconditionFailedError.constructor
        - azure-iot-common.PreconditionFailedError.Error
      langs:
        - typeScript
      type: class
      summary: >-
        Error thrown when a condition that should have been met in order to
        execute an operation was not.
      extends:
        name: Error
      source:
        path: errors.ts
        startLine: 308
        remote:
          path: common/core/src\errors.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.ServiceUnavailableError
      name: ServiceUnavailableError
      fullName: ServiceUnavailableError
      children:
        - azure-iot-common.ServiceUnavailableError.constructor
        - azure-iot-common.ServiceUnavailableError.Error
      langs:
        - typeScript
      type: class
      summary: >-
        Error thrown when the service is unavailable. The operation should be
        retried.
      extends:
        name: Error
      source:
        path: errors.ts
        startLine: 167
        remote:
          path: common/core/src\errors.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.ThrottlingError
      name: ThrottlingError
      fullName: ThrottlingError
      children:
        - azure-iot-common.ThrottlingError.constructor
        - azure-iot-common.ThrottlingError.Error
      langs:
        - typeScript
      type: class
      summary: >-
        Error thrown when IoT Hub is throttled due to excessive activity.

        To learn more about quotas, see [Azure IoT Hub quotas and
        throttling](https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-quotas-throttling)
      extends:
        name: Error
      source:
        path: errors.ts
        startLine: 238
        remote:
          path: common/core/src\errors.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.TimeoutError
      name: TimeoutError
      fullName: TimeoutError
      children:
        - azure-iot-common.TimeoutError.constructor
        - azure-iot-common.TimeoutError.Error
      langs:
        - typeScript
      type: class
      summary: Error thrown when a timeout occurs
      extends:
        name: Error
      source:
        path: errors.ts
        startLine: 322
        remote:
          path: common/core/src\errors.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.TooManyDevicesError
      name: TooManyDevicesError
      fullName: TooManyDevicesError
      children:
        - azure-iot-common.TooManyDevicesError.constructor
        - azure-iot-common.TooManyDevicesError.Error
      langs:
        - typeScript
      type: class
      summary: >-
        Error thrown when the maximum number of devices on a specific hub has
        been reached.
      extends:
        name: Error
      source:
        path: errors.ts
        startLine: 223
        remote:
          path: common/core/src\errors.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.TwinDetachedError
      name: TwinDetachedError
      fullName: TwinDetachedError
      children:
        - azure-iot-common.TwinDetachedError.constructor
        - azure-iot-common.TwinDetachedError.innerError
        - azure-iot-common.TwinDetachedError.Error
      langs:
        - typeScript
      type: class
      summary: >-
        Error thrown when the twin feature stopped working at the transport
        level, requiring the client to retry starting it.
      extends:
        name: Error
      source:
        path: errors.ts
        startLine: 409
        remote:
          path: common/core/src\errors.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.UnauthorizedError
      name: UnauthorizedError
      fullName: UnauthorizedError
      children:
        - azure-iot-common.UnauthorizedError.constructor
        - azure-iot-common.UnauthorizedError.Error
      langs:
        - typeScript
      type: class
      summary: >-
        Error thrown when the connection parameters are wrong and the server
        refused the connection.
      extends:
        name: Error
      source:
        path: errors.ts
        startLine: 82
        remote:
          path: common/core/src\errors.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.Message
      name: Message
      fullName: Message
      children:
        - azure-iot-common.Message.constructor
        - azure-iot-common.Message.ack
        - azure-iot-common.Message.correlationId
        - azure-iot-common.Message.data
        - azure-iot-common.Message.expiryTimeUtc
        - azure-iot-common.Message.lockToken
        - azure-iot-common.Message.messageId
        - azure-iot-common.Message.properties
        - azure-iot-common.Message.to
        - azure-iot-common.Message.userId
        - azure-iot-common.Message.getBytes
        - azure-iot-common.Message.getData
      langs:
        - typeScript
      type: class
      summary: >-
        The <xref:azure-iot-common.Message> object is used for telemetry
        (device-to-cloud) and commands (cloud-to-device) asynchronous

        messaging between the device and the IoT Hub service. It is
        transport-agnostic, meaning it works the same way over AMQP, MQTT and
        HTTP.
      source:
        path: message.ts
        startLine: 13
        remote:
          path: common/core/src\message.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.Properties
      name: Properties
      fullName: Properties
      children:
        - azure-iot-common.Properties.propertyList
        - azure-iot-common.Properties.add
        - azure-iot-common.Properties.count
        - azure-iot-common.Properties.getItem
        - azure-iot-common.Properties.getValue
      langs:
        - typeScript
      type: class
      summary: >-
        Collection of user defined properties of a
        <xref:azure-iot-common.Message> object that are going to be sent
        alongside the body of the message

        and can be used for
        [routing](https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-csharp-csharp-process-d2c).

        Values can only be strings.
      source:
        path: properties.ts
        startLine: 12
        remote:
          path: common/core/src\properties.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.Connected
      name: Connected
      fullName: Connected
      children: []
      langs:
        - typeScript
      type: class
      summary: Result returned when a transport is successfully connected.
      source:
        path: results.ts
        startLine: 89
        remote:
          path: common/core/src\results.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.Disconnected
      name: Disconnected
      fullName: Disconnected
      children:
        - azure-iot-common.Disconnected.reason
      langs:
        - typeScript
      type: class
      summary: Result returned when a transport is successfully disconnected.
      source:
        path: results.ts
        startLine: 107
        remote:
          path: common/core/src\results.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.MessageAbandoned
      name: MessageAbandoned
      fullName: MessageAbandoned
      children: []
      langs:
        - typeScript
      type: class
      summary: Result returned when a message was successfully abandoned.
      source:
        path: results.ts
        startLine: 71
        remote:
          path: common/core/src\results.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.MessageCompleted
      name: MessageCompleted
      fullName: MessageCompleted
      children: []
      langs:
        - typeScript
      type: class
      summary: Result returned when a message was successfully rejected.
      source:
        path: results.ts
        startLine: 35
        remote:
          path: common/core/src\results.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.MessageEnqueued
      name: MessageEnqueued
      fullName: MessageEnqueued
      children: []
      langs:
        - typeScript
      type: class
      summary: Result returned when a message was successfully enqueued.
      source:
        path: results.ts
        startLine: 17
        remote:
          path: common/core/src\results.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.MessageRejected
      name: MessageRejected
      fullName: MessageRejected
      children: []
      langs:
        - typeScript
      type: class
      summary: Result returned when a message was successfully rejected.
      source:
        path: results.ts
        startLine: 53
        remote:
          path: common/core/src\results.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.SharedAccessSignatureUpdated
      name: SharedAccessSignatureUpdated
      fullName: SharedAccessSignatureUpdated
      children:
        - azure-iot-common.SharedAccessSignatureUpdated.needToReconnect
      langs:
        - typeScript
      type: class
      summary: Result returned when a SAS token has been successfully updated.
      source:
        path: results.ts
        startLine: 148
        remote:
          path: common/core/src\results.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.TransportConfigured
      name: TransportConfigured
      fullName: TransportConfigured
      children: []
      langs:
        - typeScript
      type: class
      summary: Result returned when a transport is successfully configured.
      source:
        path: results.ts
        startLine: 130
        remote:
          path: common/core/src\results.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.RetryOperation
      name: RetryOperation
      fullName: RetryOperation
      children:
        - azure-iot-common.RetryOperation.constructor
        - azure-iot-common.RetryOperation.retry
      langs:
        - typeScript
      type: class
      summary: >-
        Implements the necessary logic to retry operations such as connecting,
        receiving C2D messages, sending telemetry, twin updates, etc.
      source:
        path: retry_operation.ts
        startLine: 12
        remote:
          path: common/core/src\retry_operation.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.ExponentialBackOffWithJitter
      name: ExponentialBackOffWithJitter
      fullName: ExponentialBackOffWithJitter
      children:
        - azure-iot-common.ExponentialBackOffWithJitter.constructor
        - azure-iot-common.ExponentialBackOffWithJitter.immediateFirstRetry
        - azure-iot-common.ExponentialBackOffWithJitter.normalParameters
        - azure-iot-common.ExponentialBackOffWithJitter.throttledParameters
        - azure-iot-common.ExponentialBackOffWithJitter.nextRetryTimeout
        - azure-iot-common.ExponentialBackOffWithJitter.shouldRetry
      langs:
        - typeScript
      type: class
      summary: >-
        Implements an Exponential Backoff with Jitter retry strategy.

        The function to calculate the next interval is the following (x is the
        xth retry):

        F(x) = min(Cmin+ (2^(x-1)-1) * rand(C * (1 – Jd), C*(1-Ju)), Cmax)
      source:
        path: retry_policy.ts
        startLine: 78
        remote:
          path: common/core/src\retry_policy.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.ExponentialBackoffWithJitterParameters
      name: ExponentialBackoffWithJitterParameters
      fullName: ExponentialBackoffWithJitterParameters
      children:
        - azure-iot-common.ExponentialBackoffWithJitterParameters.c
        - azure-iot-common.ExponentialBackoffWithJitterParameters.cMax
        - azure-iot-common.ExponentialBackoffWithJitterParameters.cMin
        - azure-iot-common.ExponentialBackoffWithJitterParameters.jd
        - azure-iot-common.ExponentialBackoffWithJitterParameters.ju
      langs:
        - typeScript
      type: class
      summary: >-
        Parameters used with the
        <xref:azure-iot-common.ExponentialBackOffWithJitter> policy to compute
        retry intervals.
      source:
        path: retry_policy.ts
        startLine: 48
        remote:
          path: common/core/src\retry_policy.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.NoRetry
      name: NoRetry
      fullName: NoRetry
      children:
        - azure-iot-common.NoRetry.nextRetryTimeout
        - azure-iot-common.NoRetry.shouldRetry
      langs:
        - typeScript
      type: class
      summary: Stub policy that blocks any retry tentative. Operations are not retried.
      source:
        path: retry_policy.ts
        startLine: 158
        remote:
          path: common/core/src\retry_policy.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.RetryPolicy
      name: RetryPolicy
      fullName: RetryPolicy
      children:
        - azure-iot-common.RetryPolicy.nextRetryTimeout
        - azure-iot-common.RetryPolicy.shouldRetry
      langs:
        - typeScript
      type: interface
      summary: >
        Interface describing a retry policy object.

        Retry policies are composed of 2 things

        - An algorithm that computes the next time to retry based on the current
        number or retries.

        - An error filter that decides, based on the type of error received,
        whether a retry should happen or not.

        Those 2 components hide behind 2 method calls described in this
        interface.
      source:
        path: retry_policy.ts
        startLine: 16
        remote:
          path: common/core/src\retry_policy.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
    - uid: azure-iot-common.SharedAccessSignature
      name: SharedAccessSignature
      fullName: SharedAccessSignature
      children:
        - azure-iot-common.SharedAccessSignature.extend
        - azure-iot-common.SharedAccessSignature.toString
        - azure-iot-common.SharedAccessSignature.create
        - azure-iot-common.SharedAccessSignature.parse
      langs:
        - typeScript
      type: class
      summary: >-
        Shared access signature tokens are used to authenticate the connection
        when using symmetric keys (as opposed to x509 certificates) to secure
        the connection with the Azure IoT hub.
      source:
        path: shared_access_signature.ts
        startLine: 14
        remote:
          path: common/core/src\shared_access_signature.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-common
- uid: azure-iot-mqtt-base
  name: azure-iot-mqtt-base
  items:
    - uid: azure-iot-mqtt-base.MqttBase
      name: MqttBase
      fullName: MqttBase
      children:
        - azure-iot-mqtt-base.MqttBase.constructor
        - azure-iot-mqtt-base.MqttBase.connect
        - azure-iot-mqtt-base.MqttBase.disconnect
        - azure-iot-mqtt-base.MqttBase.publish
        - azure-iot-mqtt-base.MqttBase.subscribe
        - azure-iot-mqtt-base.MqttBase.unsubscribe
        - azure-iot-mqtt-base.MqttBase.updateSharedAccessSignature
      langs:
        - typeScript
      type: class
      summary: ''
      extends:
        name: EventEmitter
      source:
        path: mqtt_base.ts
        startLine: 15
        remote:
          path: common/transport/mqtt/src\mqtt_base.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-mqtt-base
    - uid: azure-iot-mqtt-base.MqttBase.TransportConfig
      name: TransportConfig
      fullName: TransportConfig
      children:
        - azure-iot-mqtt-base.MqttBase.TransportConfig.clean
        - azure-iot-mqtt-base.MqttBase.TransportConfig.deviceId
        - azure-iot-mqtt-base.MqttBase.TransportConfig.host
        - azure-iot-mqtt-base.MqttBase.TransportConfig.sharedAccessSignature
        - azure-iot-mqtt-base.MqttBase.TransportConfig.username
        - azure-iot-mqtt-base.MqttBase.TransportConfig.x509
      langs:
        - typeScript
      type: interface
      summary: ''
      source:
        path: mqtt_base.ts
        startLine: 273
        remote:
          path: common/transport/mqtt/src\mqtt_base.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-mqtt-base
- uid: azure-iot-device
  name: azure-iot-device
  items:
    - uid: azure-iot-device.Client
      name: Client
      fullName: Client
      children:
        - azure-iot-device.Client.constructor
        - azure-iot-device.Client.abandon
        - azure-iot-device.Client.close
        - azure-iot-device.Client.complete
        - azure-iot-device.Client.getTwin
        - azure-iot-device.Client.onDeviceMethod
        - azure-iot-device.Client.open
        - azure-iot-device.Client.reject
        - azure-iot-device.Client.sendEvent
        - azure-iot-device.Client.sendEventBatch
        - azure-iot-device.Client.setOptions
        - azure-iot-device.Client.setRetryPolicy
        - azure-iot-device.Client.setTransportOptions
        - azure-iot-device.Client.updateSharedAccessSignature
        - azure-iot-device.Client.uploadToBlob
        - azure-iot-device.Client.fromAuthenticationProvider
        - azure-iot-device.Client.fromConnectionString
        - azure-iot-device.Client.fromSharedAccessSignature
      langs:
        - typeScript
      type: class
      summary: >
        IoT Hub device client used to connect a device with an Azure IoT hub.

        Users of the SDK should call one of the factory methods,

        [fromConnectionString](xref:azure-iot-device.Client.fromConnectionString)

        or
        [fromSharedAccessSignature](xref:azure-iot-device.Client.fromSharedAccessSignature)

        to create an IoT Hub device client.
      extends:
        name: EventEmitter
      source:
        path: client.ts
        startLine: 40
        remote:
          path: device/core/src\client.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-device
    - uid: azure-iot-device.Client.BlobUpload
      name: BlobUpload
      fullName: BlobUpload
      children:
        - azure-iot-device.Client.BlobUpload.updateSharedAccessSignature
        - azure-iot-device.Client.BlobUpload.uploadToBlob
      langs:
        - typeScript
      type: interface
      summary: ''
      source:
        path: client.ts
        startLine: 742
        remote:
          path: device/core/src\client.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-device
    - uid: azure-iot-device.Client.Transport
      name: Transport
      fullName: Transport
      children:
        - azure-iot-device.Client.Transport.abandon
        - azure-iot-device.Client.Transport.complete
        - azure-iot-device.Client.Transport.connect
        - azure-iot-device.Client.Transport.disableC2D
        - azure-iot-device.Client.Transport.disableMethods
        - azure-iot-device.Client.Transport.disableTwin
        - azure-iot-device.Client.Transport.disconnect
        - azure-iot-device.Client.Transport.enableC2D
        - azure-iot-device.Client.Transport.enableMethods
        - azure-iot-device.Client.Transport.enableTwin
        - azure-iot-device.Client.Transport.getTwinReceiver
        - azure-iot-device.Client.Transport.on
        - azure-iot-device.Client.Transport.on_1
        - azure-iot-device.Client.Transport.on_2
        - azure-iot-device.Client.Transport.onDeviceMethod
        - azure-iot-device.Client.Transport.reject
        - azure-iot-device.Client.Transport.sendEvent
        - azure-iot-device.Client.Transport.sendEventBatch
        - azure-iot-device.Client.Transport.sendMethodResponse
        - azure-iot-device.Client.Transport.sendTwinRequest
        - azure-iot-device.Client.Transport.setOptions
        - azure-iot-device.Client.Transport.updateSharedAccessSignature
      langs:
        - typeScript
      type: interface
      summary: ''
      extends:
        name: EventEmitter
      source:
        path: client.ts
        startLine: 708
        remote:
          path: device/core/src\client.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-device
    - uid: azure-iot-device.DeviceMethodRequest
      name: DeviceMethodRequest
      fullName: DeviceMethodRequest
      children:
        - azure-iot-device.DeviceMethodRequest.constructor
        - azure-iot-device.DeviceMethodRequest.methodName
        - azure-iot-device.DeviceMethodRequest.payload
        - azure-iot-device.DeviceMethodRequest.requestId
      langs:
        - typeScript
      type: class
      summary: >-
        Represents the data passed in from the service to the device when a
        device method is called from the cloud.

        An instance of this class is passed to the callback registered via
        <xref:azure-iot-device.Client.onDeviceMethod>.
      source:
        path: device_method/device_method_request.ts
        startLine: 10
        remote:
          path: device/core/src\device_method/device_method_request.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-device
    - uid: azure-iot-device.DeviceMethodResponse
      name: DeviceMethodResponse
      fullName: DeviceMethodResponse
      children:
        - azure-iot-device.DeviceMethodResponse.constructor
        - azure-iot-device.DeviceMethodResponse.isResponseComplete
        - azure-iot-device.DeviceMethodResponse.payload
        - azure-iot-device.DeviceMethodResponse.requestId
        - azure-iot-device.DeviceMethodResponse.status
        - azure-iot-device.DeviceMethodResponse.send
      langs:
        - typeScript
      type: class
      summary: >-
        a <xref:azure-iot-device.DeviceMethodResponse> object is provided to the
        user with each <xref:azure-iot-device.DeviceMethodRequest> allowing the
        user to construct and send a

        well-formatted response back to the service for each device method call.

        An instance of this class is passed as the second parameter to the
        callback registered via <xref:azure-iot-device.Client.onDeviceMethod>.
      source:
        path: device_method/device_method_response.ts
        startLine: 12
        remote:
          path: device/core/src\device_method/device_method_response.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-device
    - uid: azure-iot-device.SharedAccessKeyAuthenticationProvider
      name: SharedAccessKeyAuthenticationProvider
      fullName: SharedAccessKeyAuthenticationProvider
      children:
        - azure-iot-device.SharedAccessKeyAuthenticationProvider.type
        - >-
          azure-iot-device.SharedAccessKeyAuthenticationProvider.getDeviceCredentials
        - >-
          azure-iot-device.SharedAccessKeyAuthenticationProvider.fromConnectionString
      langs:
        - typeScript
      type: class
      summary: >
        Provides an `AuthenticationProvider` object that can be created simply
        with a connection string and is then used by the device client and
        transports to authenticate

        with the Azure IoT hub instance.

        The `SharedAccessKeyAuthenticationProvider` object takes care of
        creating shared access signature tokens on a regular cadence and emits
        the `newTokenAvailable` event for the transports

        to renew their credentials with the Azure IoT hub instance and stay
        connected.
      extends:
        name: EventEmitter
      source:
        path: sak_authentication_provider.ts
        startLine: 14
        remote:
          path: device/core/src\sak_authentication_provider.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-device
    - uid: azure-iot-device.SharedAccessSignatureAuthenticationProvider
      name: SharedAccessSignatureAuthenticationProvider
      fullName: SharedAccessSignatureAuthenticationProvider
      children:
        - azure-iot-device.SharedAccessSignatureAuthenticationProvider.type
        - >-
          azure-iot-device.SharedAccessSignatureAuthenticationProvider.getDeviceCredentials
        - >-
          azure-iot-device.SharedAccessSignatureAuthenticationProvider.updateSharedAccessSignature
        - >-
          azure-iot-device.SharedAccessSignatureAuthenticationProvider.fromSharedAccessSignature
      langs:
        - typeScript
      type: class
      summary: >
        Provides an `AuthenticationProvider` object that can be created simply
        with a shared access signature and is then used by the device client and
        transports to authenticate

        with the Azure IoT hub instance.

        The `SharedAccessSignatureAuthenticationProvider` object does not renew
        the shared access signature token automatically, so the user needs to
        feed non-expired shared access signature

        tokens to it using the `updateSharedAccessSignature` method. For each
        call to this method, the `SharedAccessSignatureAuthenticationProvider`
        will emit a `newTokenAvailable` event that

        transports will use to authenticate with the Azure IoT hub instance.
      extends:
        name: EventEmitter
      source:
        path: sas_authentication_provider.ts
        startLine: 15
        remote:
          path: device/core/src\sas_authentication_provider.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-device
    - uid: azure-iot-device.Twin
      name: Twin
      fullName: Twin
      children:
        - azure-iot-device.Twin.properties
        - azure-iot-device.Twin.desiredPath
        - azure-iot-device.Twin.errorEvent
        - azure-iot-device.Twin.postEvent
        - azure-iot-device.Twin.responseEvent
        - azure-iot-device.Twin.subscribedEvent
        - azure-iot-device.Twin.timeout
      langs:
        - typeScript
      type: class
      summary: >+
        A Device Twin is document describing the state of a device that is
        stored by an Azure IoT hub and is available even if the device is
        offline.

        It is built around 3 sections:
          - Tags: key/value pairs only accessible from the service side
          - Desired Properties: updated by a service and received by the device
          - Reported Properties: updated by the device and received by the service.
        Note that although it is a possibility, desired and reported properties
        do not have to match

        and that the logic to sync these two collections, if necessary, is left
        to the user of the SDK.


        For more information see [Understanding Device
        Twins](https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-device-twins).

      extends:
        name: EventEmitter
      source:
        path: twin.ts
        startLine: 28
        remote:
          path: device/core/src\twin.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-device
    - uid: azure-iot-device.X509AuthenticationProvider
      name: X509AuthenticationProvider
      fullName: X509AuthenticationProvider
      children:
        - azure-iot-device.X509AuthenticationProvider.type
        - azure-iot-device.X509AuthenticationProvider.getDeviceCredentials
        - azure-iot-device.X509AuthenticationProvider.setX509Options
        - azure-iot-device.X509AuthenticationProvider.fromX509Options
      langs:
        - typeScript
      type: class
      summary: >
        Provides an `AuthenticationProvider` object that can be created simply
        with an X509 certificate and key and is then used by the device client
        and transports to authenticate

        with the Azure IoT hub instance.

        Unlike the `SharedAccessSignatureAuthenticationProvider` and
        `SharedAccessKeyAuthenticationProvider` objects, the
        `X509AuthenticationProvider` does not emit a `newTokenAvailable` event

        since there are no token involved in X509 authentication. The transports
        will get the credentials using the `getDeviceCredentials` method.
      source:
        path: x509_authentication_provider.ts
        startLine: 13
        remote:
          path: device/core/src\x509_authentication_provider.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-device
- uid: azure-iot-device-amqp
  name: azure-iot-device-amqp
  items:
    - uid: azure-iot-device-amqp.Amqp
      name: Amqp
      fullName: Amqp
      children: []
      langs:
        - typeScript
      type: class
      summary: >
        Provides the transport layer over AMQP for the
        <xref:azure-iot-device.Client> object.

        This class is not meant to be used directly, instead passed to the
        <xref:azure-iot-device.Client> class to be used as

        a transport.
      extends:
        name: EventEmitter
      source:
        path: amqp.ts
        startLine: 50
        remote:
          path: device/transport/amqp/src\amqp.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-device-amqp
    - uid: azure-iot-device-amqp.AmqpWs
      name: AmqpWs
      fullName: AmqpWs
      children: []
      langs:
        - typeScript
      type: class
      summary: >-
        Constructs a transport object that can be used by the device
        <xref:azure-iot-device.Client> to send and receive messages to and from
        an IoT Hub instance, using the AMQP protocol over secure websockets.

        This class overloads the constructor of the base
        <xref:azure-iot-device-amqp.Amqp> class from the AMQP transport, and
        inherits all methods from it.
      extends:
        name: '@azure-iot-device-amqp.Amqp'
      source:
        path: amqp_ws.ts
        startLine: 15
        remote:
          path: device/transport/amqp/src\amqp_ws.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-device-amqp
- uid: azure-iot-device-http
  name: azure-iot-device-http
  items:
    - uid: azure-iot-device-http.Http
      name: Http
      fullName: Http
      children: []
      langs:
        - typeScript
      type: class
      summary: >
        Provides the transport layer over HTTP for the
        <xref:azure-iot-device.Client> object.

        This class is not meant to be used directly, instead passed to the
        <xref:azure-iot-device.Client> class to be used as

        a transport.
      extends:
        name: EventEmitter
      source:
        path: http.ts
        startLine: 66
        remote:
          path: device/transport/http/src\http.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-device-http
    - uid: azure-iot-device-http.HttpReceiverOptions
      name: HttpReceiverOptions
      fullName: HttpReceiverOptions
      children:
        - azure-iot-device-http.HttpReceiverOptions.at
        - azure-iot-device-http.HttpReceiverOptions.cron
        - azure-iot-device-http.HttpReceiverOptions.drain
        - azure-iot-device-http.HttpReceiverOptions.interval
        - azure-iot-device-http.HttpReceiverOptions.manualPolling
      langs:
        - typeScript
      type: interface
      summary: >
        Options structure used to configure how often the HTTP receiver polls
        for messages.

        Each of these options is mutually exclusive, except for the `drain`
        boolean. Only one `interval`, `at`, `cron` or `manualPolling` shall be
        present in the options structure.

        This is configured by calling <xref:azure-iot-device.Client.setOptions>
        with an options structure following this format:

        ```js

        {
          http: {
            receivePolicy: {
              ...
            }
          }
        }

        ```
      source:
        path: http.ts
        startLine: 743
        remote:
          path: device/transport/http/src\http.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-device-http
- uid: azure-iot-device-mqtt
  name: azure-iot-device-mqtt
  items:
    - uid: azure-iot-device-mqtt.Mqtt
      name: Mqtt
      fullName: Mqtt
      children: []
      langs:
        - typeScript
      type: class
      summary: >-
        Provides MQTT transport for the device
        [client](xref:azure-iot-device.Client) class.


        This class is not meant to be used directly, instead it should just be
        passed to the [client](xref:azure-iot-device.Client) object.
      extends:
        name: EventEmitter
      source:
        path: mqtt.ts
        startLine: 36
        remote:
          path: device/transport/mqtt/src\mqtt.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-device-mqtt
    - uid: azure-iot-device-mqtt.MqttWs
      name: MqttWs
      fullName: MqttWs
      children: []
      langs:
        - typeScript
      type: class
      summary: >-
        Provides MQTT over WebSockets transport for the device
        [client](xref:azure-iot-device.Client) class.

        This class is not meant to be used directly, instead it should just be
        passed to the [client](xref:azure-iot-device.Client) object.
      extends:
        name: '@azure-iot-device-mqtt.Mqtt'
      source:
        path: mqtt_ws.ts
        startLine: 16
        remote:
          path: device/transport/mqtt/src\mqtt_ws.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-device-mqtt
- uid: azure-iot-provisioning-device
  name: azure-iot-provisioning-device
  items:
    - uid: azure-iot-provisioning-device.ProvisioningDeviceClient
      name: ProvisioningDeviceClient
      fullName: ProvisioningDeviceClient
      children:
        - azure-iot-provisioning-device.ProvisioningDeviceClient.create
      langs:
        - typeScript
      type: class
      summary: >-
        Client object used to communicate with the Azure IoT Hub Device
        Provisioning Service.
      source:
        path: client.ts
        startLine: 13
        remote:
          path: provisioning/device/src\client.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-provisioning-device
    - uid: azure-iot-provisioning-device.DeviceRegistrationResult
      name: DeviceRegistrationResult
      fullName: DeviceRegistrationResult
      children:
        - azure-iot-provisioning-device.DeviceRegistrationResult.operationId
        - >-
          azure-iot-provisioning-device.DeviceRegistrationResult.registrationState
        - azure-iot-provisioning-device.DeviceRegistrationResult.status
      langs:
        - typeScript
      type: interface
      summary: >-
        structure returned from the provisioning service is response to a
        registrationRequest or queryRegistrationStatus operation
      source:
        path: interfaces.ts
        startLine: 78
        remote:
          path: provisioning/device/src\interfaces.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-provisioning-device
    - uid: azure-iot-provisioning-device.DeviceRegistrationState
      name: DeviceRegistrationState
      fullName: DeviceRegistrationState
      children:
        - azure-iot-provisioning-device.DeviceRegistrationState.assignedHub
        - azure-iot-provisioning-device.DeviceRegistrationState.deviceId
        - azure-iot-provisioning-device.DeviceRegistrationState.status
      langs:
        - typeScript
      type: interface
      summary: structure returned from the provisioning service
      source:
        path: interfaces.ts
        startLine: 56
        remote:
          path: provisioning/device/src\interfaces.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-provisioning-device
    - uid: azure-iot-provisioning-device.ProvisioningTransportOptions
      name: ProvisioningTransportOptions
      fullName: ProvisioningTransportOptions
      children:
        - >-
          azure-iot-provisioning-device.ProvisioningTransportOptions.pollingInterval
        - >-
          azure-iot-provisioning-device.ProvisioningTransportOptions.timeoutInterval
      langs:
        - typeScript
      type: interface
      summary: >-
        Configuration options for provisioning transports.  Passed into the
        transport's setTransportOptions function.
      source:
        path: interfaces.ts
        startLine: 11
        remote:
          path: provisioning/device/src\interfaces.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-provisioning-device
    - uid: azure-iot-provisioning-device.RegistrationClient
      name: RegistrationClient
      fullName: RegistrationClient
      children:
        - azure-iot-provisioning-device.RegistrationClient.cancel
        - azure-iot-provisioning-device.RegistrationClient.register
      langs:
        - typeScript
      type: interface
      summary: Public API used to access the ProvisioningDeviceClient object
      source:
        path: interfaces.ts
        startLine: 142
        remote:
          path: provisioning/device/src\interfaces.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-provisioning-device
    - uid: azure-iot-provisioning-device.RegistrationRequest
      name: RegistrationRequest
      fullName: RegistrationRequest
      children:
        - azure-iot-provisioning-device.RegistrationRequest.forceRegistration
        - azure-iot-provisioning-device.RegistrationRequest.idScope
        - azure-iot-provisioning-device.RegistrationRequest.provisioningHost
        - azure-iot-provisioning-device.RegistrationRequest.registrationId
      langs:
        - typeScript
      type: interface
      summary: Information necessary to start a registration
      source:
        path: interfaces.ts
        startLine: 26
        remote:
          path: provisioning/device/src\interfaces.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-provisioning-device
    - uid: azure-iot-provisioning-device.RegistrationResult
      name: RegistrationResult
      fullName: RegistrationResult
      children: []
      langs:
        - typeScript
      type: interface
      summary: Device configuration returned when registration is complete
      extends:
        name: '@azure-iot-provisioning-device.DeviceRegistrationState'
      source:
        path: interfaces.ts
        startLine: 99
        remote:
          path: provisioning/device/src\interfaces.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-provisioning-device
    - uid: azure-iot-provisioning-device.TpmRegistrationInfo
      name: TpmRegistrationInfo
      fullName: TpmRegistrationInfo
      children:
        - azure-iot-provisioning-device.TpmRegistrationInfo.endorsementKey
        - azure-iot-provisioning-device.TpmRegistrationInfo.request
        - azure-iot-provisioning-device.TpmRegistrationInfo.storageRootKey
      langs:
        - typeScript
      type: interface
      summary: Information passed between client and transport during Tpm registration
      source:
        path: interfaces.ts
        startLine: 156
        remote:
          path: provisioning/device/src\interfaces.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-provisioning-device
    - uid: azure-iot-provisioning-device.X509SecurityClient
      name: X509SecurityClient
      fullName: X509SecurityClient
      children:
        - azure-iot-provisioning-device.X509SecurityClient.getCertificate
        - azure-iot-provisioning-device.X509SecurityClient.getRegistrationId
      langs:
        - typeScript
      type: interface
      summary: >-
        Public API exposed by the X509 security client object.  This is only
        useful if you're writing your own security client.
      source:
        path: interfaces.ts
        startLine: 124
        remote:
          path: provisioning/device/src\interfaces.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-provisioning-device
    - uid: azure-iot-provisioning-device.X509Registration
      name: X509Registration
      fullName: X509Registration
      children:
        - azure-iot-provisioning-device.X509Registration.constructor
        - azure-iot-provisioning-device.X509Registration.cancel
        - azure-iot-provisioning-device.X509Registration.register
      langs:
        - typeScript
      type: class
      summary: >-
        Client used to run the registration of a device using X509
        authentication.
      source:
        path: x509_registration.ts
        startLine: 14
        remote:
          path: provisioning/device/src\x509_registration.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-provisioning-device
- uid: azure-iot-provisioning-service
  name: azure-iot-provisioning-service
  items:
    - uid: azure-iot-provisioning-service.AttestationMechanism
      name: AttestationMechanism
      fullName: AttestationMechanism
      children:
        - azure-iot-provisioning-service.AttestationMechanism.tpm
        - azure-iot-provisioning-service.AttestationMechanism.type
        - azure-iot-provisioning-service.AttestationMechanism.x509
      langs:
        - typeScript
      type: interface
      summary: Device attestation method.
      source:
        path: interfaces.ts
        startLine: 9
        remote:
          path: provisioning/service/src\interfaces.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-provisioning-service
    - uid: azure-iot-provisioning-service.BulkEnrollmentOperation
      name: BulkEnrollmentOperation
      fullName: BulkEnrollmentOperation
      children:
        - azure-iot-provisioning-service.BulkEnrollmentOperation.enrollments
        - azure-iot-provisioning-service.BulkEnrollmentOperation.mode
      langs:
        - typeScript
      type: interface
      summary: Bulk operation
      source:
        path: interfaces.ts
        startLine: 167
        remote:
          path: provisioning/service/src\interfaces.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-provisioning-service
    - uid: azure-iot-provisioning-service.BulkEnrollmentOperationError
      name: BulkEnrollmentOperationError
      fullName: BulkEnrollmentOperationError
      children:
        - azure-iot-provisioning-service.BulkEnrollmentOperationError.errorCode
        - >-
          azure-iot-provisioning-service.BulkEnrollmentOperationError.errorStatus
        - >-
          azure-iot-provisioning-service.BulkEnrollmentOperationError.registrationId
      langs:
        - typeScript
      type: interface
      summary: Bulk enrollment operation error
      source:
        path: interfaces.ts
        startLine: 208
        remote:
          path: provisioning/service/src\interfaces.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-provisioning-service
    - uid: azure-iot-provisioning-service.BulkEnrollmentOperationResult
      name: BulkEnrollmentOperationResult
      fullName: BulkEnrollmentOperationResult
      children:
        - azure-iot-provisioning-service.BulkEnrollmentOperationResult.errors
        - >-
          azure-iot-provisioning-service.BulkEnrollmentOperationResult.isSuccessful
      langs:
        - typeScript
      type: interface
      summary: Bulk operation result
      source:
        path: interfaces.ts
        startLine: 190
        remote:
          path: provisioning/service/src\interfaces.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-provisioning-service
    - uid: azure-iot-provisioning-service.DeviceRegistrationState
      name: DeviceRegistrationState
      fullName: DeviceRegistrationState
      children:
        - azure-iot-provisioning-service.DeviceRegistrationState.assignedHub
        - >-
          azure-iot-provisioning-service.DeviceRegistrationState.createdDateTimeUtc
        - azure-iot-provisioning-service.DeviceRegistrationState.deviceId
        - azure-iot-provisioning-service.DeviceRegistrationState.errorCode
        - azure-iot-provisioning-service.DeviceRegistrationState.errorMessage
        - azure-iot-provisioning-service.DeviceRegistrationState.etag
        - >-
          azure-iot-provisioning-service.DeviceRegistrationState.lastUpdatedDateTimeUtc
        - azure-iot-provisioning-service.DeviceRegistrationState.registrationId
        - azure-iot-provisioning-service.DeviceRegistrationState.status
      langs:
        - typeScript
      type: interface
      summary: Device registration status.
      source:
        path: interfaces.ts
        startLine: 226
        remote:
          path: provisioning/service/src\interfaces.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-provisioning-service
    - uid: azure-iot-provisioning-service.EnrollmentGroup
      name: EnrollmentGroup
      fullName: EnrollmentGroup
      children:
        - azure-iot-provisioning-service.EnrollmentGroup.attestation
        - azure-iot-provisioning-service.EnrollmentGroup.createdDateTimeUtc
        - azure-iot-provisioning-service.EnrollmentGroup.enrollmentGroupId
        - azure-iot-provisioning-service.EnrollmentGroup.etag
        - azure-iot-provisioning-service.EnrollmentGroup.initialTwin
        - azure-iot-provisioning-service.EnrollmentGroup.iotHubHostName
        - azure-iot-provisioning-service.EnrollmentGroup.lastUpdatedDateTimeUtc
        - azure-iot-provisioning-service.EnrollmentGroup.provisioningStatus
      langs:
        - typeScript
      type: interface
      summary: The enrollment group object.
      source:
        path: interfaces.ts
        startLine: 330
        remote:
          path: provisioning/service/src\interfaces.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-provisioning-service
    - uid: azure-iot-provisioning-service.IndividualEnrollment
      name: IndividualEnrollment
      fullName: IndividualEnrollment
      children:
        - azure-iot-provisioning-service.IndividualEnrollment.attestation
        - azure-iot-provisioning-service.IndividualEnrollment.createdDateTimeUtc
        - azure-iot-provisioning-service.IndividualEnrollment.deviceId
        - azure-iot-provisioning-service.IndividualEnrollment.etag
        - azure-iot-provisioning-service.IndividualEnrollment.initialTwin
        - azure-iot-provisioning-service.IndividualEnrollment.iotHubHostName
        - >-
          azure-iot-provisioning-service.IndividualEnrollment.lastUpdatedDateTimeUtc
        - azure-iot-provisioning-service.IndividualEnrollment.provisioningStatus
        - azure-iot-provisioning-service.IndividualEnrollment.registrationId
        - azure-iot-provisioning-service.IndividualEnrollment.registrationState
      langs:
        - typeScript
      type: interface
      summary: The individual enrollment record.
      source:
        path: interfaces.ts
        startLine: 273
        remote:
          path: provisioning/service/src\interfaces.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-provisioning-service
    - uid: azure-iot-provisioning-service.InitialTwin
      name: InitialTwin
      fullName: InitialTwin
      children:
        - azure-iot-provisioning-service.InitialTwin.properties
        - azure-iot-provisioning-service.InitialTwin.tags
      langs:
        - typeScript
      type: interface
      summary: Device twin state.
      source:
        path: interfaces.ts
        startLine: 391
        remote:
          path: provisioning/service/src\interfaces.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-provisioning-service
    - uid: azure-iot-provisioning-service.Metadata
      name: Metadata
      fullName: Metadata
      children:
        - azure-iot-provisioning-service.Metadata.lastUpdated
        - azure-iot-provisioning-service.Metadata.lastUpdatedVersion
      langs:
        - typeScript
      type: interface
      summary: ''
      source:
        path: interfaces.ts
        startLine: 373
        remote:
          path: provisioning/service/src\interfaces.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-provisioning-service
    - uid: azure-iot-provisioning-service.TpmAttestation
      name: TpmAttestation
      fullName: TpmAttestation
      children:
        - azure-iot-provisioning-service.TpmAttestation.endorsementKey
        - azure-iot-provisioning-service.TpmAttestation.storageRootKey
      langs:
        - typeScript
      type: interface
      summary: Attestation via TPM.
      source:
        path: interfaces.ts
        startLine: 32
        remote:
          path: provisioning/service/src\interfaces.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-provisioning-service
    - uid: azure-iot-provisioning-service.TwinCollection
      name: TwinCollection
      fullName: TwinCollection
      children:
        - azure-iot-provisioning-service.TwinCollection.count
        - azure-iot-provisioning-service.TwinCollection.metadata
        - azure-iot-provisioning-service.TwinCollection.version
      langs:
        - typeScript
      type: interface
      summary: ''
      source:
        path: interfaces.ts
        startLine: 381
        remote:
          path: provisioning/service/src\interfaces.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-provisioning-service
    - uid: azure-iot-provisioning-service.X509Attestation
      name: X509Attestation
      fullName: X509Attestation
      children:
        - azure-iot-provisioning-service.X509Attestation.caReferences
        - azure-iot-provisioning-service.X509Attestation.clientCertificates
        - azure-iot-provisioning-service.X509Attestation.signingCertificates
      langs:
        - typeScript
      type: interface
      summary: Attestation via X509.
      source:
        path: interfaces.ts
        startLine: 58
        remote:
          path: provisioning/service/src\interfaces.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-provisioning-service
    - uid: azure-iot-provisioning-service.X509CAReferences
      name: X509CAReferences
      fullName: X509CAReferences
      children:
        - azure-iot-provisioning-service.X509CAReferences.primary
        - azure-iot-provisioning-service.X509CAReferences.secondary
      langs:
        - typeScript
      type: interface
      summary: ''
      source:
        path: interfaces.ts
        startLine: 153
        remote:
          path: provisioning/service/src\interfaces.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-provisioning-service
    - uid: azure-iot-provisioning-service.X509CertificateInfo
      name: X509CertificateInfo
      fullName: X509CertificateInfo
      children:
        - azure-iot-provisioning-service.X509CertificateInfo.issuerName
        - azure-iot-provisioning-service.X509CertificateInfo.notAfterUtc
        - azure-iot-provisioning-service.X509CertificateInfo.notBeforeUtc
        - azure-iot-provisioning-service.X509CertificateInfo.serialNumber
        - azure-iot-provisioning-service.X509CertificateInfo.sha1Thumbprint
        - azure-iot-provisioning-service.X509CertificateInfo.sha256Thumbprint
        - azure-iot-provisioning-service.X509CertificateInfo.subjectName
        - azure-iot-provisioning-service.X509CertificateInfo.version
      langs:
        - typeScript
      type: interface
      summary: >
        X509 certificate info.

        This object is not provided by the application.  It is populated by the
        service from

        a provided certificate.
      source:
        path: interfaces.ts
        startLine: 81
        remote:
          path: provisioning/service/src\interfaces.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-provisioning-service
    - uid: azure-iot-provisioning-service.X509CertificateWithInfo
      name: X509CertificateWithInfo
      fullName: X509CertificateWithInfo
      children:
        - azure-iot-provisioning-service.X509CertificateWithInfo.certificate
        - azure-iot-provisioning-service.X509CertificateWithInfo.info
      langs:
        - typeScript
      type: interface
      summary: Certificate and Certificate info
      source:
        path: interfaces.ts
        startLine: 124
        remote:
          path: provisioning/service/src\interfaces.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-provisioning-service
    - uid: azure-iot-provisioning-service.X509Certificates
      name: X509Certificates
      fullName: X509Certificates
      children:
        - azure-iot-provisioning-service.X509Certificates.primary
        - azure-iot-provisioning-service.X509Certificates.secondary
      langs:
        - typeScript
      type: interface
      summary: Primary and secondary certificates
      source:
        path: interfaces.ts
        startLine: 139
        remote:
          path: provisioning/service/src\interfaces.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-provisioning-service
    - uid: azure-iot-provisioning-service.ProvisioningServiceClient
      name: ProvisioningServiceClient
      fullName: ProvisioningServiceClient
      children:
        - azure-iot-provisioning-service.ProvisioningServiceClient.constructor
        - >-
          azure-iot-provisioning-service.ProvisioningServiceClient.createEnrollmentGroupDeviceRegistrationStateQuery
        - >-
          azure-iot-provisioning-service.ProvisioningServiceClient.createEnrollmentGroupQuery
        - >-
          azure-iot-provisioning-service.ProvisioningServiceClient.createIndividualEnrollmentQuery
        - >-
          azure-iot-provisioning-service.ProvisioningServiceClient.createOrUpdateEnrollmentGroup
        - >-
          azure-iot-provisioning-service.ProvisioningServiceClient.createOrUpdateIndividualEnrollment
        - >-
          azure-iot-provisioning-service.ProvisioningServiceClient.deleteDeviceRegistrationState
        - >-
          azure-iot-provisioning-service.ProvisioningServiceClient.deleteEnrollmentGroup
        - >-
          azure-iot-provisioning-service.ProvisioningServiceClient.deleteIndividualEnrollment
        - >-
          azure-iot-provisioning-service.ProvisioningServiceClient.getDeviceRegistrationState
        - >-
          azure-iot-provisioning-service.ProvisioningServiceClient.getEnrollmentGroup
        - >-
          azure-iot-provisioning-service.ProvisioningServiceClient.getIndividualEnrollment
        - >-
          azure-iot-provisioning-service.ProvisioningServiceClient.runBulkEnrollmentOperation
        - >-
          azure-iot-provisioning-service.ProvisioningServiceClient.fromConnectionString
      langs:
        - typeScript
      type: class
      summary: ''
      source:
        path: provisioningserviceclient.ts
        startLine: 18
        remote:
          path: provisioning/service/src\provisioningserviceclient.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-provisioning-service
    - uid: azure-iot-provisioning-service.Query
      name: Query
      fullName: Query
      children:
        - azure-iot-provisioning-service.Query.constructor
        - azure-iot-provisioning-service.Query.continuationToken
        - azure-iot-provisioning-service.Query.hasMoreResults
        - azure-iot-provisioning-service.Query.next
      langs:
        - typeScript
      type: class
      summary: ''
      source:
        path: query.ts
        startLine: 30
        remote:
          path: provisioning/service/src\query.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-provisioning-service
    - uid: azure-iot-provisioning-service.QueryResult
      name: QueryResult
      fullName: QueryResult
      children:
        - azure-iot-provisioning-service.QueryResult.items
      langs:
        - typeScript
      type: interface
      summary: The query result.
      source:
        path: query.ts
        startLine: 11
        remote:
          path: provisioning/service/src\query.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-provisioning-service
    - uid: azure-iot-provisioning-service.QuerySpecification
      name: QuerySpecification
      fullName: QuerySpecification
      children:
        - azure-iot-provisioning-service.QuerySpecification.query
      langs:
        - typeScript
      type: interface
      summary: A Json query request
      source:
        path: query.ts
        startLine: 21
        remote:
          path: provisioning/service/src\query.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-provisioning-service
- uid: azure-iot-provisioning-device-amqp
  name: azure-iot-provisioning-device-amqp
  items:
    - uid: azure-iot-provisioning-device-amqp.Amqp
      name: Amqp
      fullName: Amqp
      children: []
      langs:
        - typeScript
      type: class
      summary: Transport used to provision a device over AMQP.
      extends:
        name: EventEmitter
      source:
        path: amqp.ts
        startLine: 39
        remote:
          path: provisioning/transport/amqp/src\amqp.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-provisioning-device-amqp
    - uid: azure-iot-provisioning-device-amqp.AmqpWs
      name: AmqpWs
      fullName: AmqpWs
      children: []
      langs:
        - typeScript
      type: class
      summary: Transport used to provision a device over AMQP over Websockets.
      extends:
        name: '@azure-iot-provisioning-device-amqp.Amqp'
      source:
        path: amqp_ws.ts
        startLine: 13
        remote:
          path: provisioning/transport/amqp/src\amqp_ws.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-provisioning-device-amqp
- uid: azure-iot-provisioning-device-http
  name: azure-iot-provisioning-device-http
  items:
    - uid: azure-iot-provisioning-device-http.Http
      name: Http
      fullName: Http
      children:
        - azure-iot-provisioning-device-http.Http.cancel
        - azure-iot-provisioning-device-http.Http.disconnect
        - azure-iot-provisioning-device-http.Http.queryOperationStatus
        - azure-iot-provisioning-device-http.Http.registrationRequest
        - azure-iot-provisioning-device-http.Http.setAuthentication
      langs:
        - typeScript
      type: class
      summary: Transport used to provision a device over HTTP.
      extends:
        name: EventEmitter
      source:
        path: http.ts
        startLine: 24
        remote:
          path: provisioning/transport/http/src\http.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-provisioning-device-http
- uid: azure-iot-provisioning-device-mqtt
  name: azure-iot-provisioning-device-mqtt
  items:
    - uid: azure-iot-provisioning-device-mqtt.Mqtt
      name: Mqtt
      fullName: Mqtt
      children:
        - azure-iot-provisioning-device-mqtt.Mqtt.queryOperationStatus
        - azure-iot-provisioning-device-mqtt.Mqtt.registrationRequest
      langs:
        - typeScript
      type: class
      summary: Transport used to provision a device over MQTT.
      extends:
        name: EventEmitter
      source:
        path: mqtt.ts
        startLine: 28
        remote:
          path: provisioning/transport/mqtt/src\mqtt.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-provisioning-device-mqtt
    - uid: azure-iot-provisioning-device-mqtt.MqttWs
      name: MqttWs
      fullName: MqttWs
      children: []
      langs:
        - typeScript
      type: class
      summary: Transport used to provision a device over MQTT over Websockets.
      extends:
        name: '@azure-iot-provisioning-device-mqtt.Mqtt'
      source:
        path: mqtt_ws.ts
        startLine: 14
        remote:
          path: provisioning/transport/mqtt/src\mqtt_ws.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iot-provisioning-device-mqtt
- uid: azure-iothub
  name: azure-iothub
  items:
    - uid: azure-iothub.Amqp
      name: Amqp
      fullName: Amqp
      children: []
      langs:
        - typeScript
      type: class
      summary: >-
        Transport class used by the [service client](xref:azure-iothub.Client)
        to connect to the Azure IoT hub using the AMQP protocol over a secure
        (TLS) socket.

        This class should not be used directly and instead be passed to one of
        the <xref:azure-iothub.Client> factory methods:
        [fromConnectionString](xref:azure-iothub.Client.fromConnectionString) or
        [fromSharedAccessSignature](xref:azure-iothub.Client.fromSharedAccessSignature).
      extends:
        name: EventEmitter
      source:
        path: amqp.ts
        startLine: 51
        remote:
          path: service/src\amqp.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iothub
    - uid: azure-iothub.AmqpWs
      name: AmqpWs
      fullName: AmqpWs
      children: []
      langs:
        - typeScript
      type: class
      summary: >-
        Transport class used by the [service client](xref:azure-iothub.Client)
        to connect to the Azure IoT hub using the AMQP protocol over secure
        websockets.

        This class should not be used directly and instead be passed to one of
        the <xref:azure-iothub.Client> factory methods:
        [fromConnectionString](xref:azure-iothub.Client.fromConnectionString) or
        [fromSharedAccessSignature](xref:azure-iothub.Client.fromSharedAccessSignature).
      extends:
        name: '@azure-iothub.Amqp'
      source:
        path: amqp_ws.ts
        startLine: 18
        remote:
          path: service/src\amqp_ws.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iothub
    - uid: azure-iothub.Client
      name: Client
      fullName: Client
      children:
        - azure-iothub.Client.close
        - azure-iothub.Client.getFeedbackReceiver
        - azure-iothub.Client.getFileNotificationReceiver
        - azure-iothub.Client.invokeDeviceMethod
        - azure-iothub.Client.open
        - azure-iothub.Client.send
        - azure-iothub.Client.setRetryPolicy
        - azure-iothub.Client.fromConnectionString
        - azure-iothub.Client.fromSharedAccessSignature
      langs:
        - typeScript
      type: class
      summary: >
        The IoT Hub service client is used to communicate with devices through
        an Azure IoT hub.

        It lets the SDK user:
          - send device-to-cloud (also known as commands) to devices: commands are queued on IoT Hub and delivered asynchronously only when the device is connected. Only 50 commands can be queued per device.
          - invoke direct methods on devices (which will work only if the device is currently connected: it's a synchronous way of communicating with the device)
          - listen for feedback messages sent by devices for previous commands.
          - listen for file upload notifications from devices.
        Users should create new <xref:azure-iothub.Client> instances by calling
        one of the factory methods,

        [fromConnectionString](xref:azure-iothub.Client.fromConnectionString) or

        [fromSharedAccessSignature](xref:azure-iothub.Client.fromSharedAccessSignature),

        to create an IoT Hub service Client.
      extends:
        name: EventEmitter
      source:
        path: client.ts
        startLine: 33
        remote:
          path: service/src\client.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iothub
    - uid: azure-iothub.Client.ServiceReceiver
      name: ServiceReceiver
      fullName: ServiceReceiver
      children:
        - azure-iothub.Client.ServiceReceiver.abandon
        - azure-iothub.Client.ServiceReceiver.complete
        - azure-iothub.Client.ServiceReceiver.reject
      langs:
        - typeScript
      type: interface
      summary: ''
      extends:
        name: Receiver
      source:
        path: client.ts
        startLine: 394
        remote:
          path: service/src\client.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iothub
    - uid: azure-iothub.Client.Transport
      name: Transport
      fullName: Transport
      children:
        - azure-iothub.Client.Transport.connect
        - azure-iothub.Client.Transport.disconnect
        - azure-iothub.Client.Transport.getFeedbackReceiver
        - azure-iothub.Client.Transport.getFileNotificationReceiver
        - azure-iothub.Client.Transport.send
      langs:
        - typeScript
      type: interface
      summary: ''
      extends:
        name: EventEmitter
      source:
        path: client.ts
        startLine: 400
        remote:
          path: service/src\client.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iothub
    - uid: azure-iothub.Client.TransportConfigOptions
      name: TransportConfigOptions
      fullName: TransportConfigOptions
      children:
        - azure-iothub.Client.TransportConfigOptions.host
        - azure-iothub.Client.TransportConfigOptions.hubName
        - azure-iothub.Client.TransportConfigOptions.keyName
        - azure-iothub.Client.TransportConfigOptions.sharedAccessSignature
      langs:
        - typeScript
      type: interface
      summary: ''
      source:
        path: client.ts
        startLine: 374
        remote:
          path: service/src\client.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iothub
    - uid: azure-iothub.Device
      name: Device
      fullName: Device
      children:
        - azure-iothub.Device.constructor
        - azure-iothub.Device.authentication
        - azure-iothub.Device.cloudToDeviceMessageCount
        - azure-iothub.Device.connectionState
        - azure-iothub.Device.connectionStateUpdatedTime
        - azure-iothub.Device.deviceId
        - azure-iothub.Device.etag
        - azure-iothub.Device.generationId
        - azure-iothub.Device.lastActivityTime
        - azure-iothub.Device.status
        - azure-iothub.Device.statusReason
        - azure-iothub.Device.statusUpdatedTime
      langs:
        - typeScript
      type: class
      summary: >
        Creates a representation of a device for use with the [device identity
        registry](xref:azure-iothub.Registry) APIs.

        **This class is deprecated** because the [device identity
        registry](xref:azure-iothub.Registry) can work directly with JSON
        objects

        containing a partial description of the device, not necessarily the full
        object. On top of that initially this class was shipped with a typo

        on the `symmetricKey` property name (it was pascal-cased instead of
        camel-cased). The SDK is keeping this class around in order not to break
        existing code

        but this will be removed in a future major version update and customers
        should instead use plain JSON objects.
      source:
        path: device.ts
        startLine: 37
        remote:
          path: service/src\device.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iothub
      deprecated:
        content: ''
    - uid: azure-iothub.Device.Authentication
      name: Authentication
      fullName: Authentication
      children:
        - azure-iothub.Device.Authentication.SymmetricKey
        - azure-iothub.Device.Authentication.symmetricKey
        - azure-iothub.Device.Authentication.x509Thumbprint
      langs:
        - typeScript
      type: interface
      summary: ''
      source:
        path: device.ts
        startLine: 140
        remote:
          path: service/src\device.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iothub
    - uid: azure-iothub.Device.X509Thumbprints
      name: X509Thumbprints
      fullName: X509Thumbprints
      children:
        - azure-iothub.Device.X509Thumbprints.primaryThumbprint
        - azure-iothub.Device.X509Thumbprints.secondaryThumbprint
      langs:
        - typeScript
      type: interface
      summary: ''
      source:
        path: device.ts
        startLine: 146
        remote:
          path: service/src\device.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iothub
    - uid: azure-iothub.DeviceMethodParams
      name: DeviceMethodParams
      fullName: DeviceMethodParams
      children:
        - azure-iothub.DeviceMethodParams.connectTimeoutInSeconds
        - azure-iothub.DeviceMethodParams.methodName
        - azure-iothub.DeviceMethodParams.payload
        - azure-iothub.DeviceMethodParams.responseTimeoutInSeconds
      langs:
        - typeScript
      type: interface
      summary: >-
        Describes the parameters that are available for use with direct methods
        (also called device methods)
      source:
        path: interfaces.ts
        startLine: 16
        remote:
          path: service/src\interfaces.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iothub
    - uid: azure-iothub.JobClient
      name: JobClient
      fullName: JobClient
      children:
        - azure-iothub.JobClient.cancelJob
        - azure-iothub.JobClient.createQuery
        - azure-iothub.JobClient.getJob
        - azure-iothub.JobClient.scheduleDeviceMethod
        - azure-iothub.JobClient.scheduleTwinUpdate
        - azure-iothub.JobClient.fromConnectionString
        - azure-iothub.JobClient.fromSharedAccessSignature
      langs:
        - typeScript
      type: class
      summary: >
        Provides methods to create, update, monitor and cancel long-running jobs
        on an IoT Hub instance, as well as query existing jobs.

        The Jobs API in Azure IoT Hub allows to schedule direct method calls and
        twin updates on multiple devices.

        SDK users are expected to create <xref:azure-iothub.JobClient> instances
        using the factory methods
        <xref:azure-iothub.JobClient.fromConnectionString> and
        <xref:azure-iothub.JobClient.fromSharedAccessSignature>.
      source:
        path: job_client.ts
        startLine: 39
        remote:
          path: service/src\job_client.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iothub
    - uid: azure-iothub.Query
      name: Query
      fullName: Query
      children:
        - azure-iothub.Query.continuationToken
        - azure-iothub.Query.hasMoreResults
        - azure-iothub.Query.next
        - azure-iothub.Query.nextAsTwin
      langs:
        - typeScript
      type: class
      summary: >-
        Constructs a Query object that provides APIs to trigger the execution of
        a device query.

        SDK users should create queries using the
        <xref:azure-iothub.JobClient.createQuery> and
        <xref:azure-iothub.Registry.createQuery> APIs

        and should not try to instantiate this class directly.
      source:
        path: query.ts
        startLine: 15
        remote:
          path: service/src\query.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iothub
    - uid: azure-iothub.Registry
      name: Registry
      fullName: Registry
      children:
        - azure-iothub.Registry.JobStatus
        - azure-iothub.Registry.addDevices
        - azure-iothub.Registry.cancelJob
        - azure-iothub.Registry.create
        - azure-iothub.Registry.createQuery
        - azure-iothub.Registry.delete
        - azure-iothub.Registry.exportDevicesToBlob
        - azure-iothub.Registry.get
        - azure-iothub.Registry.getJob
        - azure-iothub.Registry.getRegistryStatistics
        - azure-iothub.Registry.getTwin
        - azure-iothub.Registry.importDevicesFromBlob
        - azure-iothub.Registry.list
        - azure-iothub.Registry.listJobs
        - azure-iothub.Registry.removeDevices
        - azure-iothub.Registry.update
        - azure-iothub.Registry.updateDevices
        - azure-iothub.Registry.updateTwin
        - azure-iothub.Registry.fromConnectionString
        - azure-iothub.Registry.fromSharedAccessSignature
      langs:
        - typeScript
      type: class
      summary: >
        The Registry class provides access to the IoT Hub device identity
        service.

        Users of the SDK should instantiate this class with one of the factory
        methods:

        [fromConnectionString](xref:azure-iothub.Registry.fromConnectionString)
        or
        [fromSharedAccessSignature](xref:azure-iothub.Registry.fromSharedAccessSignature).

        The protocol used for device identity registry operations is HTTPS.
      source:
        path: registry.ts
        startLine: 27
        remote:
          path: service/src\registry.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iothub
    - uid: azure-iothub.Registry.BulkRegistryOperationResult
      name: BulkRegistryOperationResult
      fullName: BulkRegistryOperationResult
      children:
        - azure-iothub.Registry.BulkRegistryOperationResult.errors
        - azure-iothub.Registry.BulkRegistryOperationResult.isSuccessful
      langs:
        - typeScript
      type: interface
      summary: ''
      source:
        path: registry.ts
        startLine: 816
        remote:
          path: service/src\registry.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iothub
    - uid: azure-iothub.Registry.DeviceDescription
      name: DeviceDescription
      fullName: DeviceDescription
      children:
        - azure-iothub.Registry.DeviceDescription.deviceId
      langs:
        - typeScript
      type: interface
      summary: ''
      source:
        path: registry.ts
        startLine: 805
        remote:
          path: service/src\registry.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iothub
    - uid: azure-iothub.Registry.DeviceRegistryOperationError
      name: DeviceRegistryOperationError
      fullName: DeviceRegistryOperationError
      children:
        - azure-iothub.Registry.DeviceRegistryOperationError.deviceId
        - azure-iothub.Registry.DeviceRegistryOperationError.errorCode
        - azure-iothub.Registry.DeviceRegistryOperationError.errorStatus
      langs:
        - typeScript
      type: interface
      summary: ''
      source:
        path: registry.ts
        startLine: 810
        remote:
          path: service/src\registry.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iothub
    - uid: azure-iothub.Registry.QueryDescription
      name: QueryDescription
      fullName: QueryDescription
      children:
        - azure-iothub.Registry.QueryDescription.query
      langs:
        - typeScript
      type: interface
      summary: ''
      source:
        path: registry.ts
        startLine: 790
        remote:
          path: service/src\registry.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iothub
    - uid: azure-iothub.Registry.RegistryStatistics
      name: RegistryStatistics
      fullName: RegistryStatistics
      children:
        - azure-iothub.Registry.RegistryStatistics.disabledDeviceCount
        - azure-iothub.Registry.RegistryStatistics.enabledDeviceCount
        - azure-iothub.Registry.RegistryStatistics.totalDeviceCount
      langs:
        - typeScript
      type: interface
      summary: ''
      source:
        path: registry.ts
        startLine: 794
        remote:
          path: service/src\registry.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iothub
    - uid: azure-iothub.Registry.TransportConfig
      name: TransportConfig
      fullName: TransportConfig
      children:
        - azure-iothub.Registry.TransportConfig.host
        - azure-iothub.Registry.TransportConfig.sharedAccessSignature
      langs:
        - typeScript
      type: interface
      summary: ''
      source:
        path: registry.ts
        startLine: 782
        remote:
          path: service/src\registry.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iothub
    - uid: azure-iothub.Twin
      name: Twin
      fullName: Twin
      children:
        - azure-iothub.Twin.constructor
        - azure-iothub.Twin.deviceId
        - azure-iothub.Twin.etag
        - azure-iothub.Twin.properties
        - azure-iothub.Twin.tags
        - azure-iothub.Twin.get
        - azure-iothub.Twin.toJSON
        - azure-iothub.Twin.update
      langs:
        - typeScript
      type: class
      summary: >
        A Device Twin is document describing the state of a device that is
        stored by an Azure IoT hub and is available even if the device is
        offline.

        It is built around 3 sections:
          - Tags: key/value pairs only accessible from the service side
          - Desired Properties: updated by a service and received by the device
          - Reported Properties: updated by the device and received by the service.
        Note that although it is a possibility, desired and reported properties
        do not have to match

        and that the logic to sync these two collections, if necessary, is left
        to the user of the SDK.


        For more information see [Understanding Device
        Twins](https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-device-twins).


        The recommended way to obtain a <xref:azure-iothub.Twin> for a specific
        device is to use the <xref:azure-iothub.Registry.getTwin> method.
      source:
        path: twin.ts
        startLine: 45
        remote:
          path: service/src\twin.ts
          repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
          branch: master
      package: azure-iothub
- uid: location-based-services-javascript
  name: location-based-services-javascript
  items:
    - uid: location-based-services-javascript.atlas.data
      name: atlas.data
      items:
        - uid: location-based-services-javascript.BoundingBox
          name: BoundingBox
          items: []
        - uid: location-based-services-javascript.Feature
          name: Feature
          items: []
        - uid: location-based-services-javascript.FeatureCollection
          name: FeatureCollection
          items: []
        - uid: location-based-services-javascript.GeometryCollection
          name: GeometryCollection
          items: []
        - uid: location-based-services-javascript.MultiPoint
          name: MultiPoint
          items: []
        - uid: location-based-services-javascript.MultiPolygon
          name: MultiPolygon
          items: []
        - uid: location-based-services-javascript.Point
          name: Point
          items: []
        - uid: location-based-services-javascript.Polygon
          name: Polygon
          items: []
        - uid: location-based-services-javascript.Position
          name: Position
          items: []
    - uid: location-based-services-javascript.atlas
      name: atlas
      items:
        - uid: location-based-services-javascript.Map
          name: Map
          items: []
        - uid: location-based-services-javascript.Popup
          name: Popup
          items: []
    - uid: location-based-services-javascript.Object Definitions
      name: Object Definitions
      items:
        - uid: location-based-services-javascript.CircleProperties
          name: CircleProperties
          items: []
        - uid: location-based-services-javascript.LinestringProperties
          name: LinestringProperties
          items: []
        - uid: location-based-services-javascript.PinProperties
          name: PinProperties
          items: []
        - uid: location-based-services-javascript.PolygonProperties
          name: PolygonProperties
          items: []
        - uid: location-based-services-javascript.AnimationOptions
          name: AnimationOptions
          items: []
        - uid: location-based-services-javascript.CameraBoundsOptions
          name: CameraBoundsOptions
          items: []
        - uid: location-based-services-javascript.CameraOptions
          name: CameraOptions
          items: []
        - uid: location-based-services-javascript.CircleLayerOptions
          name: CircleLayerOptions
          items: []
        - uid: location-based-services-javascript.LayerOptions
          name: LayerOptions
          items: []
        - uid: location-based-services-javascript.LinestringLayerOptions
          name: LinestringLayerOptions
          items: []
        - uid: location-based-services-javascript.MapEventData
          name: MapEventData
          items: []
        - uid: location-based-services-javascript.PinLayerOptions
          name: PinLayerOptions
          items: []
        - uid: location-based-services-javascript.PolygonLayerOptions
          name: PolygonLayerOptions
          items: []
        - uid: location-based-services-javascript.PopupOptions
          name: PopupOptions
          items: []
        - uid: location-based-services-javascript.RasterLayerOptions
          name: RasterLayerOptions
          items: []
        - uid: location-based-services-javascript.StyleOptions
          name: StyleOptions
          items: []
        - uid: location-based-services-javascript.TrafficOptions
          name: TrafficOptions
          items: []
        - uid: location-based-services-javascript.UserInteractionOptions
          name: UserInteractionOptions
          items: []
