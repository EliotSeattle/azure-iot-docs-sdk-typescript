### YamlMime:UniversalReference
items:
  - uid: azure-maps-indoor.azure-maps-control.EventManager
    name: EventManager
    fullName: EventManager
    children:
      - azure-maps-indoor.azure-maps-control.EventManager.add
      - azure-maps-indoor.azure-maps-control.EventManager.add_1
      - azure-maps-indoor.azure-maps-control.EventManager.remove
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-maps-indoor
  - uid: azure-maps-indoor.azure-maps-control.EventManager.add
    name: 'add("facilitychanged", IndoorManager, (e: IFacilityChangeEvent) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Adds a facility change event to the `IndoorManager`.
    syntax:
      content: >-
        function add(eventType: "facilitychanged", target: IndoorManager,
        callback: (e: IFacilityChangeEvent) => void)
      parameters:
        - id: eventType
          type:
            - '"facilitychanged"'
          description: The event name.
        - id: target
          type:
            - azure-maps-indoor.atlas.indoor.IndoorManager
          description: The `IndoorManager` to add the event for.
        - id: callback
          type:
            - '(e: IFacilityChangeEvent) => void'
          description: |
            The event handler callback.
    package: azure-maps-indoor
  - uid: azure-maps-indoor.azure-maps-control.EventManager.add_1
    name: 'add("levelchanged", IndoorManager, (e: ILevelChangeEvent) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Adds a level change event to the `IndoorManager`.
    syntax:
      content: >-
        function add(eventType: "levelchanged", target: IndoorManager, callback:
        (e: ILevelChangeEvent) => void)
      parameters:
        - id: eventType
          type:
            - '"levelchanged"'
          description: The event name.
        - id: target
          type:
            - azure-maps-indoor.atlas.indoor.IndoorManager
          description: The `IndoorManager` to add the event for.
        - id: callback
          type:
            - '(e: ILevelChangeEvent) => void'
          description: |
            The event handler callback.
    package: azure-maps-indoor
  - uid: azure-maps-indoor.azure-maps-control.EventManager.remove
    name: 'remove(string, IndoorManager, (e?: any) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Removes an event listener from the `IndoorManager`
    syntax:
      content: >-
        function remove(eventType: string, target: IndoorManager, callback: (e?:
        any) => void)
      parameters:
        - id: eventType
          type:
            - string
          description: The event name.
        - id: target
          type:
            - azure-maps-indoor.atlas.indoor.IndoorManager
          description: The `IndoorManager` to remove the event for.
        - id: callback
          type:
            - '(e?: any) => void'
          description: |
            The event handler callback.
    package: azure-maps-indoor
references:
  - uid: azure-maps-indoor.atlas.indoor.IndoorManager
    name: IndoorManager
    spec.typeScript:
      - name: IndoorManager
        fullName: IndoorManager
        uid: azure-maps-indoor.atlas.indoor.IndoorManager
  - uid: azure-maps-indoor.azure-maps-control.EventManager
    name: EventManager
    spec.typeScript:
      - name: EventManager
        fullName: EventManager
        uid: azure-maps-indoor.azure-maps-control.EventManager
