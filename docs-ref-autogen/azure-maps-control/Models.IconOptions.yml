### YamlMime:UniversalReference
items:
  - uid: azure-maps-control.Models.IconOptions
    name: IconOptions
    fullName: IconOptions
    children:
      - azure-maps-control.Models.IconOptions.allowOverlap
      - azure-maps-control.Models.IconOptions.anchor
      - azure-maps-control.Models.IconOptions.ignorePlacement
      - azure-maps-control.Models.IconOptions.image
      - azure-maps-control.Models.IconOptions.offset
      - azure-maps-control.Models.IconOptions.opacity
      - azure-maps-control.Models.IconOptions.optional
      - azure-maps-control.Models.IconOptions.rotation
      - azure-maps-control.Models.IconOptions.rotationAlignment
      - azure-maps-control.Models.IconOptions.size
    langs:
      - typeScript
    type: class
    summary: Options used to customize the icons in a SymbolLayer
    extends:
      name: azure-maps-control.Models.Options
    package: azure-maps-control
  - uid: azure-maps-control.Models.IconOptions.allowOverlap
    name: allowOverlap
    fullName: allowOverlap
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Specifies if the symbol icon can overlay other symbols on the map.

      If `true` the icon will be visible even if it collides with other
      previously drawn symbols.

      Tip: Set this to true if animating an symbol to ensure smooth rendering.

      Default `false`.
    optional: true
    syntax:
      content: 'allowOverlap?: boolean'
      return:
        type:
          - boolean
    package: azure-maps-control
  - uid: azure-maps-control.Models.IconOptions.anchor
    name: anchor
    fullName: anchor
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Specifies which part of the icon is placed closest to the icons anchor
      position on the map.

      <p>`"center"`: The center of the icon is placed closest to the anchor.</p>

      <p>`"left"`: The left side of the icon is placed closest to the
      anchor.</p>

      <p>`"right"`: The right side of the icon is placed closest to the
      anchor.</p>

      <p>`"top"`: The top of the icon is placed closest to the anchor.</p>

      <p>`"bottom"`: The bottom of the icon is placed closest to the anchor.</p>

      <p>`"top-left"`: The top left corner of the icon is placed closest to the
      anchor.</p>

      <p>`"top-right"`: The top right corner of the icon is placed closest to
      the anchor.</p>

      <p>`"bottom-left"`: The bottom left corner of the icon is placed closest
      to the anchor.</p>

      <p>`"bottom-right"`: The bottom right corner of the icon is placed closest
      to the anchor.</p>

      Default `"bottom"`.
    optional: true
    syntax:
      content: >-
        anchor?: "center" | "left" | "right" | "top" | "bottom" | "top-left" |
        "top-right" | "bottom-left" | "bottom-right"
      return:
        type:
          - >-
            "center" | "left" | "right" | "top" | "bottom" | "top-left" |
            "top-right" | "bottom-left" | "bottom-right"
    package: azure-maps-control
  - uid: azure-maps-control.Models.IconOptions.ignorePlacement
    name: ignorePlacement
    fullName: ignorePlacement
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Specifies if other symbols can overlap this symbol.
      If true, other symbols can be visible even if they collide with the icon.
      Default `false`.
    optional: true
    syntax:
      content: 'ignorePlacement?: boolean'
      return:
        type:
          - boolean
    package: azure-maps-control
  - uid: azure-maps-control.Models.IconOptions.image
    name: image
    fullName: image
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The name of the image in the map's image sprite to use for drawing the
      icon.

      Default `"pin-darkblue"`.
    optional: true
    syntax:
      content: 'image?: string | Expression | StyleFunction'
      return:
        type:
          - >-
            string | azure-maps-control.Models.Expression |
            azure-maps-control.Models.StyleFunction
    package: azure-maps-control
  - uid: azure-maps-control.Models.IconOptions.offset
    name: offset
    fullName: offset
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Specifies an offset distance of the icon from its anchor in pixels.

      Positive values indicate right and down, while negative values indicate
      left and up.

      Each component is multiplied by the value of size to obtain the final
      offset in pixels.

      When combined with rotation the offset will be as if the rotated direction
      was up.

      Default `[0, 0]`.
    optional: true
    syntax:
      content: 'offset?: Pixel | Expression | StyleFunction'
      return:
        type:
          - >-
            azure-maps-control.atlas.Pixel |
            azure-maps-control.Models.Expression |
            azure-maps-control.Models.StyleFunction
    package: azure-maps-control
  - uid: azure-maps-control.Models.IconOptions.opacity
    name: opacity
    fullName: opacity
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A number between 0 and 1 that indicates the opacity at which the icon will
      be drawn.

      Default `1`.
    optional: true
    syntax:
      content: 'opacity?: number | Expression | StyleFunction'
      return:
        type:
          - >-
            number | azure-maps-control.Models.Expression |
            azure-maps-control.Models.StyleFunction
    package: azure-maps-control
  - uid: azure-maps-control.Models.IconOptions.optional
    name: optional
    fullName: optional
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Specifies if a symbols icon can be hidden but its text displayed if it is
      overlapped with another symbol.

      If true, text will display without their corresponding icons

      when the icon collides with other symbols and the text does not.

      Default `false`.
    optional: true
    syntax:
      content: 'optional?: boolean'
      return:
        type:
          - boolean
    package: azure-maps-control
  - uid: azure-maps-control.Models.IconOptions.rotation
    name: rotation
    fullName: rotation
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      The amount to rotate the icon clockwise in degrees
      Default `0`.
    optional: true
    syntax:
      content: 'rotation?: number | Expression | StyleFunction'
      return:
        type:
          - >-
            number | azure-maps-control.Models.Expression |
            azure-maps-control.Models.StyleFunction
    package: azure-maps-control
  - uid: azure-maps-control.Models.IconOptions.rotationAlignment
    name: rotationAlignment
    fullName: rotationAlignment
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      In combination with the placement property of a SymbolLayerOptions

      this determines the rotation behavior of icons.

      <p>`"auto"`: When placement is "point" this is equivalent to "viewport".

      When placement is "line" this is equivalent to "map".</p>

      <p>`"map"`: When placement is "point" aligns icons east-west.

      When placement is "line" aligns the icons' x-axes with the line.</p>

      <p>`"viewport"`: Icons' x-axes will align with the x-axis of the
      viewport.</p>

      Default `"auto"`.
    optional: true
    syntax:
      content: 'rotationAlignment?: "auto" | "map" | "viewport"'
      return:
        type:
          - '"auto" | "map" | "viewport"'
    package: azure-maps-control
  - uid: azure-maps-control.Models.IconOptions.size
    name: size
    fullName: size
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Scales the original size of the icon by the provided factor.
      Must be greater or equal to 0.
      Default `1`.
    optional: true
    syntax:
      content: 'size?: number | Expression | StyleFunction'
      return:
        type:
          - >-
            number | azure-maps-control.Models.Expression |
            azure-maps-control.Models.StyleFunction
    package: azure-maps-control
references:
  - uid: azure-maps-control.Models.deprecated.LayerOptions
    name: LayerOptions
    spec.typeScript:
      - name: LayerOptions
        fullName: LayerOptions
        uid: azure-maps-control.Models.deprecated.LayerOptions
  - uid: azure-maps-control.Models.Options
    name: Options
    spec.typeScript:
      - name: Options
        fullName: Options
        uid: azure-maps-control.Models.Options
  - uid: azure-maps-control.Models.LayerOptions
    name: LayerOptions
    spec.typeScript:
      - name: LayerOptions
        fullName: LayerOptions
        uid: azure-maps-control.Models.LayerOptions
  - uid: >-
      number | azure-maps-control.Models.Expression |
      azure-maps-control.Models.StyleFunction
    name: StyleFunction
    spec.typeScript:
      - name: 'number | '
        fullName: 'number | '
      - name: Expression
        fullName: Expression
        uid: azure-maps-control.Models.Expression
      - name: ' | '
        fullName: ' | '
      - name: StyleFunction
        fullName: StyleFunction
        uid: azure-maps-control.Models.StyleFunction
  - uid: >-
      string | azure-maps-control.Models.Expression |
      azure-maps-control.Models.StyleFunction
    name: StyleFunction
    spec.typeScript:
      - name: 'string | '
        fullName: 'string | '
      - name: Expression
        fullName: Expression
        uid: azure-maps-control.Models.Expression
      - name: ' | '
        fullName: ' | '
      - name: StyleFunction
        fullName: StyleFunction
        uid: azure-maps-control.Models.StyleFunction
  - uid: string | azure-maps-control.atlas.source.Source
    name: Source
    spec.typeScript:
      - name: 'string | '
        fullName: 'string | '
      - name: Source
        fullName: Source
        uid: azure-maps-control.atlas.source.Source
  - uid: azure-maps-control.atlas.data.BoundingBox
    name: BoundingBox
    spec.typeScript:
      - name: BoundingBox
        fullName: BoundingBox
        uid: azure-maps-control.atlas.data.BoundingBox
  - uid: azure-maps-control.atlas.Pixel
    name: Pixel
    spec.typeScript:
      - name: Pixel
        fullName: Pixel
        uid: azure-maps-control.atlas.Pixel
  - uid: azure-maps-control.Models.Padding
    name: Padding
    spec.typeScript:
      - name: Padding
        fullName: Padding
        uid: azure-maps-control.Models.Padding
  - uid: azure-maps-control.atlas.data.Position
    name: Position
    spec.typeScript:
      - name: Position
        fullName: Position
        uid: azure-maps-control.atlas.data.Position
  - uid: azure-maps-control.Models.ControlStyle
    name: ControlStyle
    spec.typeScript:
      - name: ControlStyle
        fullName: ControlStyle
        uid: azure-maps-control.Models.ControlStyle
  - uid: azure-maps-control.Models.Control
    name: Control
    spec.typeScript:
      - name: Control
        fullName: Control
        uid: azure-maps-control.Models.Control
  - uid: azure-maps-control.Models.ControlOptions
    name: ControlOptions
    spec.typeScript:
      - name: ControlOptions
        fullName: ControlOptions
        uid: azure-maps-control.Models.ControlOptions
  - uid: azure-maps-control.Models.ControlPosition
    name: ControlPosition
    spec.typeScript:
      - name: ControlPosition
        fullName: ControlPosition
        uid: azure-maps-control.Models.ControlPosition
  - uid: >-
      azure-maps-control.atlas.layer.Layer |
      azure-maps-control.atlas.layer.Layer[]
    name: 'Layer[]'
    spec.typeScript:
      - name: Layer
        fullName: Layer
        uid: azure-maps-control.atlas.layer.Layer
      - name: ' | '
        fullName: ' | '
      - name: Layer
        fullName: Layer
        uid: azure-maps-control.atlas.layer.Layer
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-control.atlas.HtmlMarker
    name: HtmlMarker
    spec.typeScript:
      - name: HtmlMarker
        fullName: HtmlMarker
        uid: azure-maps-control.atlas.HtmlMarker
  - uid: >-
      string | azure-maps-control.atlas.HtmlMarker | Array<string |
      azure-maps-control.atlas.HtmlMarker>
    name: HtmlMarker>
    spec.typeScript:
      - name: 'string | '
        fullName: 'string | '
      - name: HtmlMarker
        fullName: HtmlMarker
        uid: azure-maps-control.atlas.HtmlMarker
      - name: ' | Array<string | '
        fullName: ' | Array<string | '
      - name: HtmlMarker
        fullName: HtmlMarker
        uid: azure-maps-control.atlas.HtmlMarker
      - name: '>'
        fullName: '>'
  - uid: azure-maps-control.atlas.Popup
    name: Popup
    spec.typeScript:
      - name: Popup
        fullName: Popup
        uid: azure-maps-control.atlas.Popup
  - uid: >-
      azure-maps-control.atlas.Pixel | azure-maps-control.Models.Expression |
      azure-maps-control.Models.StyleFunction
    name: StyleFunction
    spec.typeScript:
      - name: Pixel
        fullName: Pixel
        uid: azure-maps-control.atlas.Pixel
      - name: ' | '
        fullName: ' | '
      - name: Expression
        fullName: Expression
        uid: azure-maps-control.Models.Expression
      - name: ' | '
        fullName: ' | '
      - name: StyleFunction
        fullName: StyleFunction
        uid: azure-maps-control.Models.StyleFunction
  - uid: string | azure-maps-control.atlas.layer.Layer
    name: Layer
    spec.typeScript:
      - name: 'string | '
        fullName: 'string | '
      - name: Layer
        fullName: Layer
        uid: azure-maps-control.atlas.layer.Layer
  - uid: azure-maps-control.atlas.layer.Layer
    name: Layer
    spec.typeScript:
      - name: Layer
        fullName: Layer
        uid: azure-maps-control.atlas.layer.Layer
  - uid: 'azure-maps-control.atlas.layer.Layer[]'
    name: 'Layer[]'
    spec.typeScript:
      - name: Layer
        fullName: Layer
        uid: azure-maps-control.atlas.layer.Layer
      - name: '[]'
        fullName: '[]'
  - uid: >-
      azure-maps-control.atlas.data.Point |
      azure-maps-control.atlas.data.BoundingBox
    name: BoundingBox
    spec.typeScript:
      - name: Point
        fullName: Point
        uid: azure-maps-control.atlas.data.Point
      - name: ' | '
        fullName: ' | '
      - name: BoundingBox
        fullName: BoundingBox
        uid: azure-maps-control.atlas.data.BoundingBox
  - uid: Array<string | azure-maps-control.atlas.layer.Layer>
    name: Layer>
    spec.typeScript:
      - name: 'Array<string | '
        fullName: 'Array<string | '
      - name: Layer
        fullName: Layer
        uid: azure-maps-control.atlas.layer.Layer
      - name: '>'
        fullName: '>'
  - uid: azure-maps-control.Models.Expression
    name: Expression
    spec.typeScript:
      - name: Expression
        fullName: Expression
        uid: azure-maps-control.Models.Expression
  - uid: >-
      Array<azure-maps-control.atlas.Shape |
      azure-maps-control.atlas.data.Feature<azure-maps-control.atlas.data.Geometry,
      any>>
    name: 'Geometry, any>>'
    spec.typeScript:
      - name: Array<
        fullName: Array<
      - name: Shape
        fullName: Shape
        uid: azure-maps-control.atlas.Shape
      - name: ' | '
        fullName: ' | '
      - name: Feature
        fullName: Feature
        uid: azure-maps-control.atlas.data.Feature
      - name: <
        fullName: <
      - name: Geometry
        fullName: Geometry
        uid: azure-maps-control.atlas.data.Geometry
      - name: ', any>>'
        fullName: ', any>>'
  - uid: >-
      string | azure-maps-control.atlas.layer.Layer | Array<string |
      azure-maps-control.atlas.layer.Layer>
    name: Layer>
    spec.typeScript:
      - name: 'string | '
        fullName: 'string | '
      - name: Layer
        fullName: Layer
        uid: azure-maps-control.atlas.layer.Layer
      - name: ' | Array<string | '
        fullName: ' | Array<string | '
      - name: Layer
        fullName: Layer
        uid: azure-maps-control.atlas.layer.Layer
      - name: '>'
        fullName: '>'
  - uid: azure-maps-control.Models.MapMouseWheelEvent
    name: MapMouseWheelEvent
    spec.typeScript:
      - name: MapMouseWheelEvent
        fullName: MapMouseWheelEvent
        uid: azure-maps-control.Models.MapMouseWheelEvent
  - uid: >-
      Array<azure-maps-control.atlas.data.Feature<azure-maps-control.atlas.data.Geometry,
      any> | azure-maps-control.atlas.Shape>
    name: Shape>
    spec.typeScript:
      - name: Array<
        fullName: Array<
      - name: Feature
        fullName: Feature
        uid: azure-maps-control.atlas.data.Feature
      - name: <
        fullName: <
      - name: Geometry
        fullName: Geometry
        uid: azure-maps-control.atlas.data.Geometry
      - name: ', any> | '
        fullName: ', any> | '
      - name: Shape
        fullName: Shape
        uid: azure-maps-control.atlas.Shape
      - name: '>'
        fullName: '>'
  - uid: azure-maps-control.atlas.Map
    name: Map
    spec.typeScript:
      - name: Map
        fullName: Map
        uid: azure-maps-control.atlas.Map
  - uid: 'azure-maps-control.atlas.Pixel[]'
    name: 'Pixel[]'
    spec.typeScript:
      - name: Pixel
        fullName: Pixel
        uid: azure-maps-control.atlas.Pixel
      - name: '[]'
        fullName: '[]'
  - uid: 'azure-maps-control.atlas.data.Position[]'
    name: 'Position[]'
    spec.typeScript:
      - name: Position
        fullName: Position
        uid: azure-maps-control.atlas.data.Position
      - name: '[]'
        fullName: '[]'
  - uid: >-
      azure-maps-control.atlas.source.Source |
      azure-maps-control.atlas.source.Source[]
    name: 'Source[]'
    spec.typeScript:
      - name: Source
        fullName: Source
        uid: azure-maps-control.atlas.source.Source
      - name: ' | '
        fullName: ' | '
      - name: Source
        fullName: Source
        uid: azure-maps-control.atlas.source.Source
      - name: '[]'
        fullName: '[]'
  - uid: azure-maps-control.atlas.source.Source
    name: Source
    spec.typeScript:
      - name: Source
        fullName: Source
        uid: azure-maps-control.atlas.source.Source
  - uid: >-
      string | azure-maps-control.atlas.source.Source | Array<string |
      azure-maps-control.atlas.source.Source>
    name: Source>
    spec.typeScript:
      - name: 'string | '
        fullName: 'string | '
      - name: Source
        fullName: Source
        uid: azure-maps-control.atlas.source.Source
      - name: ' | Array<string | '
        fullName: ' | Array<string | '
      - name: Source
        fullName: Source
        uid: azure-maps-control.atlas.source.Source
      - name: '>'
        fullName: '>'
  - uid: azure-maps-control.Models.IconOptions
    name: IconOptions
    spec.typeScript:
      - name: IconOptions
        fullName: IconOptions
        uid: azure-maps-control.Models.IconOptions
  - uid: number | azure-maps-control.Models.Expression
    name: Expression
    spec.typeScript:
      - name: 'number | '
        fullName: 'number | '
      - name: Expression
        fullName: Expression
        uid: azure-maps-control.Models.Expression
  - uid: azure-maps-control.Models.TextOptions
    name: TextOptions
    spec.typeScript:
      - name: TextOptions
        fullName: TextOptions
        uid: azure-maps-control.Models.TextOptions
  - uid: 'string[] | azure-maps-control.Models.Expression'
    name: Expression
    spec.typeScript:
      - name: 'string[] | '
        fullName: 'string[] | '
      - name: Expression
        fullName: Expression
        uid: azure-maps-control.Models.Expression
  - uid: azure-maps-control.atlas.Pixel | azure-maps-control.Models.Expression
    name: Expression
    spec.typeScript:
      - name: Pixel
        fullName: Pixel
        uid: azure-maps-control.atlas.Pixel
      - name: ' | '
        fullName: ' | '
      - name: Expression
        fullName: Expression
        uid: azure-maps-control.Models.Expression
  - uid: azure-maps-control.Models.MediaLayerOptions
    name: MediaLayerOptions
    spec.typeScript:
      - name: MediaLayerOptions
        fullName: MediaLayerOptions
        uid: azure-maps-control.Models.MediaLayerOptions
  - uid: >-
      Array<azure-maps-control.atlas.data.Feature<azure-maps-control.atlas.data.Geometry,
      any>>
    name: 'Geometry, any>>'
    spec.typeScript:
      - name: Array<
        fullName: Array<
      - name: Feature
        fullName: Feature
        uid: azure-maps-control.atlas.data.Feature
      - name: <
        fullName: <
      - name: Geometry
        fullName: Geometry
        uid: azure-maps-control.atlas.data.Geometry
      - name: ', any>>'
        fullName: ', any>>'
